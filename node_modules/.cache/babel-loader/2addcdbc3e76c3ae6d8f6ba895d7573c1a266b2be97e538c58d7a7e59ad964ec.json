{"ast":null,"code":"\"undefined\" != typeof window && (window.__CRAFTJS__ || (window.__CRAFTJS__ = {}), window.__CRAFTJS__[\"@craftjs/core\"] = \"0.2.10\");\nimport { ERROR_USE_EDITOR_OUTSIDE_OF_EDITOR_CONTEXT as e, useCollector as t, wrapConnectorHooks as n, ERROR_USE_NODE_OUTSIDE_OF_EDITOR_CONTEXT as r, deprecationWarning as o, ERROR_TOP_LEVEL_ELEMENT_NO_ID as a, ROOT_NODE as i, ERROR_INVALID_NODEID as s, ERROR_DELETE_TOP_LEVEL_NODE as d, ERROR_NOPARENT as c, DEPRECATED_ROOT_NODE as u, ERROR_NOT_IN_RESOLVER as l, ERROR_INVALID_NODE_ID as f, ERROR_MOVE_TOP_LEVEL_NODE as p, ERROR_MOVE_NONCANVAS_CHILD as v, ERROR_CANNOT_DRAG as h, ERROR_MOVE_TO_NONCANVAS_PARENT as y, ERROR_MOVE_INCOMING_PARENT as g, ERROR_MOVE_CANNOT_DROP as m, ERROR_MOVE_TO_DESCENDANT as N, ERROR_DUPLICATE_NODEID as b, ERROR_MOVE_OUTGOING_PARENT as E, getRandomId as O, ERROR_DESERIALIZE_COMPONENT_NOT_IN_RESOLVER as w, getDOMInfo as T, EventHandlers as C, DerivedEventHandlers as k, isChromium as S, isLinux as j, RenderIndicator as D, useMethods as I, ERROR_RESOLVER_NOT_AN_OBJECT as x, HISTORY_ACTIONS as P } from \"@craftjs/utils\";\nexport { ROOT_NODE } from \"@craftjs/utils\";\nimport A, { createContext as L, useContext as R, useMemo as q, useEffect as _, useState as F, useRef as M, Children as z, Fragment as B } from \"react\";\nimport H from \"tiny-invariant\";\nimport $ from \"lodash/isFunction\";\nimport J from \"lodash/cloneDeep\";\nconst W = A.createContext(null),\n  U = ({\n    id: e,\n    related: t = !1,\n    children: n\n  }) => A.createElement(W.Provider, {\n    value: {\n      id: e,\n      related: t\n    }\n  }, n);\nfunction V(e, t) {\n  var n = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var r = Object.getOwnPropertySymbols(e);\n    t && (r = r.filter(function (t) {\n      return Object.getOwnPropertyDescriptor(e, t).enumerable;\n    })), n.push.apply(n, r);\n  }\n  return n;\n}\nfunction X(e) {\n  for (var t = 1; t < arguments.length; t++) {\n    var n = null != arguments[t] ? arguments[t] : {};\n    t % 2 ? V(Object(n), !0).forEach(function (t) {\n      Z(e, t, n[t]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : V(Object(n)).forEach(function (t) {\n      Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t));\n    });\n  }\n  return e;\n}\nfunction Y(e) {\n  return Y = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (e) {\n    return typeof e;\n  } : function (e) {\n    return e && \"function\" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? \"symbol\" : typeof e;\n  }, Y(e);\n}\nfunction G(e, t) {\n  if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n}\nfunction K(e, t) {\n  for (var n = 0; n < t.length; n++) {\n    var r = t[n];\n    r.enumerable = r.enumerable || !1, r.configurable = !0, \"value\" in r && (r.writable = !0), Object.defineProperty(e, ue(r.key), r);\n  }\n}\nfunction Q(e, t, n) {\n  return t && K(e.prototype, t), n && K(e, n), Object.defineProperty(e, \"prototype\", {\n    writable: !1\n  }), e;\n}\nfunction Z(e, t, n) {\n  return (t = ue(t)) in e ? Object.defineProperty(e, t, {\n    value: n,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[t] = n, e;\n}\nfunction ee(e, t) {\n  if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function\");\n  e.prototype = Object.create(t && t.prototype, {\n    constructor: {\n      value: e,\n      writable: !0,\n      configurable: !0\n    }\n  }), Object.defineProperty(e, \"prototype\", {\n    writable: !1\n  }), t && ne(e, t);\n}\nfunction te(e) {\n  return te = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (e) {\n    return e.__proto__ || Object.getPrototypeOf(e);\n  }, te(e);\n}\nfunction ne(e, t) {\n  return ne = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (e, t) {\n    return e.__proto__ = t, e;\n  }, ne(e, t);\n}\nfunction re(e, t) {\n  if (null == e) return {};\n  var n,\n    r,\n    o = function (e, t) {\n      if (null == e) return {};\n      var n,\n        r,\n        o = {},\n        a = Object.keys(e);\n      for (r = 0; r < a.length; r++) t.indexOf(n = a[r]) >= 0 || (o[n] = e[n]);\n      return o;\n    }(e, t);\n  if (Object.getOwnPropertySymbols) {\n    var a = Object.getOwnPropertySymbols(e);\n    for (r = 0; r < a.length; r++) t.indexOf(n = a[r]) >= 0 || Object.prototype.propertyIsEnumerable.call(e, n) && (o[n] = e[n]);\n  }\n  return o;\n}\nfunction oe(e) {\n  if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  return e;\n}\nfunction ae(e) {\n  var t = function () {\n    if (\"undefined\" == typeof Reflect || !Reflect.construct) return !1;\n    if (Reflect.construct.sham) return !1;\n    if (\"function\" == typeof Proxy) return !0;\n    try {\n      return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})), !0;\n    } catch (e) {\n      return !1;\n    }\n  }();\n  return function () {\n    var n,\n      r = te(e);\n    if (t) {\n      var o = te(this).constructor;\n      n = Reflect.construct(r, arguments, o);\n    } else n = r.apply(this, arguments);\n    return function (e, t) {\n      if (t && (\"object\" == typeof t || \"function\" == typeof t)) return t;\n      if (void 0 !== t) throw new TypeError(\"Derived constructors may only return object or undefined\");\n      return oe(e);\n    }(this, n);\n  };\n}\nfunction ie(e, t) {\n  return function (e) {\n    if (Array.isArray(e)) return e;\n  }(e) || function (e, t) {\n    var n = null == e ? null : \"undefined\" != typeof Symbol && e[Symbol.iterator] || e[\"@@iterator\"];\n    if (null != n) {\n      var r,\n        o,\n        a,\n        i,\n        s = [],\n        d = !0,\n        c = !1;\n      try {\n        if (a = (n = n.call(e)).next, 0 === t) {\n          if (Object(n) !== n) return;\n          d = !1;\n        } else for (; !(d = (r = a.call(n)).done) && (s.push(r.value), s.length !== t); d = !0);\n      } catch (e) {\n        c = !0, o = e;\n      } finally {\n        try {\n          if (!d && null != n.return && (i = n.return(), Object(i) !== i)) return;\n        } finally {\n          if (c) throw o;\n        }\n      }\n      return s;\n    }\n  }(e, t) || de(e, t) || function () {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }();\n}\nfunction se(e) {\n  return function (e) {\n    if (Array.isArray(e)) return ce(e);\n  }(e) || function (e) {\n    if (\"undefined\" != typeof Symbol && null != e[Symbol.iterator] || null != e[\"@@iterator\"]) return Array.from(e);\n  }(e) || de(e) || function () {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }();\n}\nfunction de(e, t) {\n  if (e) {\n    if (\"string\" == typeof e) return ce(e, t);\n    var n = Object.prototype.toString.call(e).slice(8, -1);\n    return \"Object\" === n && e.constructor && (n = e.constructor.name), \"Map\" === n || \"Set\" === n ? Array.from(e) : \"Arguments\" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? ce(e, t) : void 0;\n  }\n}\nfunction ce(e, t) {\n  (null == t || t > e.length) && (t = e.length);\n  for (var n = 0, r = new Array(t); n < t; n++) r[n] = e[n];\n  return r;\n}\nfunction ue(e) {\n  var t = function (e, t) {\n    if (\"object\" != typeof e || null === e) return e;\n    var n = e[Symbol.toPrimitive];\n    if (void 0 !== n) {\n      var r = n.call(e, \"string\");\n      if (\"object\" != typeof r) return r;\n      throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return String(e);\n  }(e);\n  return \"symbol\" == typeof t ? t : String(t);\n}\nconst le = L(null);\nvar fe = L(null),\n  pe = function () {\n    return R(fe);\n  };\nfunction ve(r) {\n  var o = pe(),\n    a = R(le);\n  H(a, e);\n  var i = t(a, r),\n    s = q(function () {\n      return o && o.createConnectorsUsage();\n    }, [o]);\n  _(function () {\n    return s.register(), function () {\n      s.cleanup();\n    };\n  }, [s]);\n  var d = q(function () {\n    return s && n(s.connectors);\n  }, [s]);\n  return X(X({}, i), {}, {\n    connectors: d,\n    inContext: !!a,\n    store: a\n  });\n}\nvar he = [\"actions\", \"query\", \"connectors\"];\nfunction ye(e) {\n  var t = R(W);\n  H(t, r);\n  var o = t.id,\n    a = t.related,\n    i = ve(function (t) {\n      return o && t.nodes[o] && e && e(t.nodes[o]);\n    }),\n    s = i.actions,\n    d = i.connectors,\n    c = re(i, he),\n    u = q(function () {\n      return n({\n        connect: function (e) {\n          return d.connect(e, o);\n        },\n        drag: function (e) {\n          return d.drag(e, o);\n        }\n      });\n    }, [d, o]),\n    l = q(function () {\n      return {\n        setProp: function (e, t) {\n          t ? s.history.throttle(t).setProp(o, e) : s.setProp(o, e);\n        },\n        setCustom: function (e, t) {\n          t ? s.history.throttle(t).setCustom(o, e) : s.setCustom(o, e);\n        },\n        setHidden: function (e) {\n          return s.setHidden(o, e);\n        }\n      };\n    }, [s, o]);\n  return X(X({}, c), {}, {\n    id: o,\n    related: a,\n    inNodeContext: !!t,\n    actions: l,\n    connectors: u\n  });\n}\nvar ge = [\"id\", \"related\", \"actions\", \"inNodeContext\", \"connectors\"];\nfunction me(e) {\n  var t = ye(e),\n    n = t.id,\n    r = t.related,\n    a = t.actions,\n    i = t.inNodeContext,\n    s = t.connectors;\n  return X(X({}, re(t, ge)), {}, {\n    actions: a,\n    id: n,\n    related: r,\n    setProp: function (e, t) {\n      return o(\"useNode().setProp()\", {\n        suggest: \"useNode().actions.setProp()\"\n      }), a.setProp(e, t);\n    },\n    inNodeContext: i,\n    connectors: s\n  });\n}\nconst Ne = ({\n    render: e\n  }) => {\n    const {\n      connectors: {\n        connect: t,\n        drag: n\n      }\n    } = me();\n    return \"string\" == typeof e.type ? t(n(A.cloneElement(e))) : e;\n  },\n  be = () => {\n    const {\n      type: e,\n      props: t,\n      nodes: n,\n      hydrationTimestamp: r\n    } = ye(e => ({\n      type: e.data.type,\n      props: e.data.props,\n      nodes: e.data.nodes,\n      hydrationTimestamp: e._hydrationTimestamp\n    }));\n    return q(() => {\n      let r = t.children;\n      n && n.length > 0 && (r = A.createElement(A.Fragment, null, n.map(e => A.createElement(Oe, {\n        id: e,\n        key: e\n      }))));\n      const o = A.createElement(e, t, r);\n      return \"string\" == typeof e ? A.createElement(Ne, {\n        render: o\n      }) : o;\n    }, [e, t, r, n]);\n  },\n  Ee = ({\n    render: e\n  }) => {\n    const {\n        hidden: t\n      } = ye(e => ({\n        hidden: e.data.hidden\n      })),\n      {\n        onRender: n\n      } = ve(e => ({\n        onRender: e.options.onRender\n      }));\n    return t ? null : A.createElement(n, {\n      render: e || A.createElement(be, null)\n    });\n  },\n  Oe = ({\n    id: e,\n    render: t\n  }) => A.createElement(U, {\n    id: e\n  }, A.createElement(Ee, {\n    render: t\n  })),\n  we = {\n    is: \"div\",\n    canvas: !1,\n    custom: {},\n    hidden: !1\n  },\n  Te = {\n    is: \"type\",\n    canvas: \"isCanvas\"\n  };\nfunction Ce({\n  id: e,\n  children: t,\n  ...n\n}) {\n  const {\n      is: r\n    } = {\n      ...we,\n      ...n\n    },\n    {\n      query: o,\n      actions: i\n    } = ve(),\n    {\n      id: s,\n      inNodeContext: d\n    } = ye(),\n    [c] = F(() => {\n      H(!!e, a);\n      const c = o.node(s).get();\n      if (d) {\n        const a = c.data.linkedNodes[e] ? o.node(c.data.linkedNodes[e]).get() : null;\n        if (a && a.data.type === r) return a.id;\n        const d = A.createElement(Ce, n, t),\n          u = o.parseReactElement(d).toNodeTree();\n        return i.history.ignore().addLinkedNodeFromTree(u, s, e), u.rootNodeId;\n      }\n      return null;\n    });\n  return c ? A.createElement(Oe, {\n    id: c\n  }) : null;\n}\nconst ke = () => o(\"<Canvas />\", {\n  suggest: \"<Element canvas={true} />\"\n});\nfunction Canvas({\n  ...e\n}) {\n  return _(() => ke(), []), A.createElement(Ce, {\n    ...e,\n    canvas: !0\n  });\n}\nconst Se = () => {\n    const {\n      timestamp: e\n    } = ve(e => ({\n      timestamp: e.nodes[i] && e.nodes[i]._hydrationTimestamp\n    }));\n    return e ? A.createElement(Oe, {\n      id: i,\n      key: e\n    }) : null;\n  },\n  je = ({\n    children: e,\n    json: t,\n    data: n\n  }) => {\n    const {\n      actions: r,\n      query: a\n    } = ve();\n    t && o(\"<Frame json={...} />\", {\n      suggest: \"<Frame data={...} />\"\n    });\n    const s = M(!1);\n    if (!s.current) {\n      const o = n || t;\n      if (o) r.history.ignore().deserialize(o);else if (e) {\n        const t = A.Children.only(e),\n          n = a.parseReactElement(t).toNodeTree((e, n) => (n === t && (e.id = i), e));\n        r.history.ignore().addNodeTree(n);\n      }\n      s.current = !0;\n    }\n    return A.createElement(Se, null);\n  };\nvar De;\n!function (e) {\n  e[e.Any = 0] = \"Any\", e[e.Id = 1] = \"Id\", e[e.Obj = 2] = \"Obj\";\n}(De || (De = {}));\nconst Ie = e => {\n  const {\n    addLinkedNodeFromTree: t,\n    setDOM: n,\n    setNodeEvent: r,\n    replaceNodes: o,\n    reset: a,\n    ...i\n  } = e;\n  return i;\n};\nfunction xe(e) {\n  const {\n      connectors: t,\n      actions: n,\n      query: r,\n      store: o,\n      ...a\n    } = ve(e),\n    i = Ie(n);\n  return {\n    connectors: t,\n    actions: q(() => ({\n      ...i,\n      history: {\n        ...i.history,\n        ignore: (...e) => Ie(i.history.ignore(...e)),\n        throttle: (...e) => Ie(i.history.throttle(...e))\n      }\n    }), [i]),\n    query: r,\n    store: o,\n    ...a\n  };\n}\nfunction Pe(e) {\n  return t => n => {\n    const r = e ? xe(e) : xe();\n    return A.createElement(t, {\n      ...r,\n      ...n\n    });\n  };\n}\nfunction Ae(e) {\n  return function (t) {\n    return n => {\n      const r = me(e);\n      return A.createElement(t, {\n        ...r,\n        ...n\n      });\n    };\n  };\n}\nvar Le = function (e) {\n    return Object.fromEntries ? Object.fromEntries(e) : e.reduce(function (e, t) {\n      var n = ie(t, 2),\n        r = n[0],\n        o = n[1];\n      return X(X({}, e), {}, Z({}, r, o));\n    }, {});\n  },\n  Re = function (e, t, n) {\n    var r = Array.isArray(t) ? t : [t],\n      o = X({\n        existOnly: !1,\n        idOnly: !1\n      }, n || {}),\n      a = r.filter(function (e) {\n        return !!e;\n      }).map(function (t) {\n        return \"string\" == typeof t ? {\n          node: e[t],\n          exists: !!e[t]\n        } : \"object\" !== Y(t) || o.idOnly ? {\n          node: null,\n          exists: !1\n        } : {\n          node: t,\n          exists: !!e[t.id]\n        };\n      });\n    return o.existOnly && H(0 === a.filter(function (e) {\n      return !e.exists;\n    }).length, s), a;\n  },\n  qe = [\"history\"],\n  _e = null,\n  Fe = function (e, t) {\n    if (\"string\" == typeof t) return t;\n    var n,\n      r = function (e, t) {\n        var n = function (e) {\n          if (_e && _e.resolver === e) return _e.reversed;\n          _e = {\n            resolver: e,\n            reversed: new Map()\n          };\n          for (var t = 0, n = Object.entries(e); t < n.length; t++) {\n            var r = ie(n[t], 2);\n            _e.reversed.set(r[1], r[0]);\n          }\n          return _e.reversed;\n        }(e).get(t);\n        return void 0 !== n ? n : null;\n      }(e, t);\n    return H(r, l.replace(\"%node_type%\", (n = t).name || n.displayName)), r;\n  };\nconst Me = (e, t) => \"string\" == typeof e ? e : {\n    resolvedName: Fe(t, e)\n  },\n  ze = (e, t) => {\n    let {\n      type: n,\n      isCanvas: r,\n      props: o\n    } = e;\n    return o = Object.keys(o).reduce((e, n) => {\n      const r = o[n];\n      return null == r || \"function\" == typeof r || (e[n] = \"children\" === n && \"string\" != typeof r ? z.map(r, e => \"string\" == typeof e ? e : ze(e, t)) : \"function\" == typeof r.type ? ze(r, t) : r), e;\n    }, {}), {\n      type: Me(n, t),\n      isCanvas: !!r,\n      props: o\n    };\n  },\n  Be = (e, t) => {\n    const {\n      type: n,\n      props: r,\n      isCanvas: o,\n      name: a,\n      ...i\n    } = e;\n    return {\n      ...ze({\n        type: n,\n        isCanvas: o,\n        props: r\n      }, t),\n      ...i\n    };\n  };\nfunction He(e, t) {\n  H(\"string\" == typeof t, f);\n  var n = e.nodes[t],\n    r = function (t) {\n      return He(e, t);\n    };\n  return {\n    isCanvas: function () {\n      return !!n.data.isCanvas;\n    },\n    isRoot: function () {\n      return n.id === i;\n    },\n    isLinkedNode: function () {\n      return n.data.parent && r(n.data.parent).linkedNodes().includes(n.id);\n    },\n    isTopLevelNode: function () {\n      return this.isRoot() || this.isLinkedNode();\n    },\n    isDeletable: function () {\n      return !this.isTopLevelNode();\n    },\n    isParentOfTopLevelNodes: function () {\n      return n.data.linkedNodes && Object.keys(n.data.linkedNodes).length > 0;\n    },\n    isParentOfTopLevelCanvas: function () {\n      return o(\"query.node(id).isParentOfTopLevelCanvas\", {\n        suggest: \"query.node(id).isParentOfTopLevelNodes\"\n      }), this.isParentOfTopLevelNodes();\n    },\n    isSelected: function () {\n      return e.events.selected.has(t);\n    },\n    isHovered: function () {\n      return e.events.hovered.has(t);\n    },\n    isDragged: function () {\n      return e.events.dragged.has(t);\n    },\n    get: function () {\n      return n;\n    },\n    ancestors: function () {\n      var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];\n      return function n(r) {\n        var o = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [],\n          a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,\n          i = e.nodes[r];\n        return i ? (o.push(r), i.data.parent ? ((t || !t && 0 === a) && (o = n(i.data.parent, o, a + 1)), o) : o) : o;\n      }(n.data.parent);\n    },\n    descendants: function () {\n      var n = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],\n        o = arguments.length > 1 ? arguments[1] : void 0;\n      return function t(a) {\n        var i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [],\n          s = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0;\n        return (n || !n && 0 === s) && e.nodes[a] ? (\"childNodes\" !== o && r(a).linkedNodes().forEach(function (e) {\n          i.push(e), i = t(e, i, s + 1);\n        }), \"linkedNodes\" !== o && r(a).childNodes().forEach(function (e) {\n          i.push(e), i = t(e, i, s + 1);\n        }), i) : i;\n      }(t);\n    },\n    linkedNodes: function () {\n      return Object.values(n.data.linkedNodes || {});\n    },\n    childNodes: function () {\n      return n.data.nodes || [];\n    },\n    isDraggable: function (t) {\n      try {\n        var o = n;\n        return H(!this.isTopLevelNode(), p), H(He(e, o.data.parent).isCanvas(), v), H(o.rules.canDrag(o, r), h), !0;\n      } catch (e) {\n        return t && t(e), !1;\n      }\n    },\n    isDroppable: function (t, o) {\n      var a = Re(e.nodes, t),\n        i = n;\n      try {\n        H(this.isCanvas(), y), H(i.rules.canMoveIn(a.map(function (e) {\n          return e.node;\n        }), i, r), g);\n        var s = {};\n        return a.forEach(function (t) {\n          var n = t.node,\n            o = t.exists;\n          if (H(n.rules.canDrop(i, n, r), m), o) {\n            H(!r(n.id).isTopLevelNode(), p);\n            var a = r(n.id).descendants(!0);\n            H(!a.includes(i.id) && i.id !== n.id, N);\n            var d = n.data.parent && e.nodes[n.data.parent];\n            H(d.data.isCanvas, v), H(d || !d && !e.nodes[n.id], b), d.id !== i.id && (s[d.id] || (s[d.id] = []), s[d.id].push(n));\n          }\n        }), Object.keys(s).forEach(function (t) {\n          var n = e.nodes[t];\n          H(n.rules.canMoveOut(s[t], n, r), E);\n        }), !0;\n      } catch (e) {\n        return o && o(e), !1;\n      }\n    },\n    toSerializedNode: function () {\n      return Be(n.data, e.options.resolver);\n    },\n    toNodeTree: function (e) {\n      var n = [t].concat(se(this.descendants(!0, e))).reduce(function (e, t) {\n        return e[t] = r(t).get(), e;\n      }, {});\n      return {\n        rootNodeId: t,\n        nodes: n\n      };\n    },\n    decendants: function () {\n      var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];\n      return o(\"query.node(id).decendants\", {\n        suggest: \"query.node(id).descendants\"\n      }), this.descendants(e);\n    },\n    isTopLevelCanvas: function () {\n      return !this.isRoot() && !n.data.parent;\n    }\n  };\n}\nfunction $e(e, t, n, r) {\n  for (var o = {\n      parent: e,\n      index: 0,\n      where: \"before\"\n    }, a = 0, i = 0, s = 0, d = 0, c = 0, u = 0, l = 0, f = t.length; l < f; l++) {\n    var p = t[l];\n    if (u = p.top + p.outerHeight, d = p.left + p.outerWidth / 2, c = p.top + p.outerHeight / 2, !(i && p.left > i || s && c >= s || a && p.left + p.outerWidth < a)) if (o.index = l, p.inFlow) {\n      if (r < c) {\n        o.where = \"before\";\n        break;\n      }\n      o.where = \"after\";\n    } else r < u && (s = u), n < d ? (i = d, o.where = \"before\") : (a = d, o.where = \"after\");\n  }\n  return o;\n}\nvar Je = function (e) {\n  return \"string\" == typeof e ? e : e.name;\n};\nfunction We(e, t) {\n  var n = e.data.type,\n    r = {\n      id: e.id || O(),\n      _hydrationTimestamp: Date.now(),\n      data: X({\n        type: n,\n        name: Je(n),\n        displayName: Je(n),\n        props: {},\n        custom: {},\n        parent: null,\n        isCanvas: !1,\n        hidden: !1,\n        nodes: [],\n        linkedNodes: {}\n      }, e.data),\n      info: {},\n      related: {},\n      events: {\n        selected: !1,\n        dragged: !1,\n        hovered: !1\n      },\n      rules: {\n        canDrag: function () {\n          return !0;\n        },\n        canDrop: function () {\n          return !0;\n        },\n        canMoveIn: function () {\n          return !0;\n        },\n        canMoveOut: function () {\n          return !0;\n        }\n      },\n      dom: null\n    };\n  if (r.data.type === Ce || r.data.type === Canvas) {\n    var o = X(X({}, we), r.data.props);\n    r.data.props = Object.keys(r.data.props).reduce(function (e, t) {\n      return Object.keys(we).includes(t) ? r.data[Te[t] || t] = o[t] : e[t] = r.data.props[t], e;\n    }, {}), r.data.name = Je(n = r.data.type), r.data.displayName = Je(n), r.data.type === Canvas && (r.data.isCanvas = !0, ke());\n  }\n  t && t(r);\n  var a = n.craft;\n  if (a) {\n    if (r.data.displayName = a.displayName || a.name || r.data.displayName, r.data.props = X(X({}, a.props || a.defaultProps || {}), r.data.props), r.data.custom = X(X({}, a.custom || {}), r.data.custom), null != a.isCanvas && (r.data.isCanvas = a.isCanvas), a.rules && Object.keys(a.rules).forEach(function (e) {\n      [\"canDrag\", \"canDrop\", \"canMoveIn\", \"canMoveOut\"].includes(e) && (r.rules[e] = a.rules[e]);\n    }), a.related) {\n      var i = {\n        id: r.id,\n        related: !0\n      };\n      Object.keys(a.related).forEach(function (e) {\n        r.related[e] = function (t) {\n          return A.createElement(U, i, A.createElement(a.related[e], t));\n        };\n      });\n    }\n    a.info && (r.info = a.info);\n  }\n  return r;\n}\nconst Ue = (e, t, n) => {\n    let {\n      type: r,\n      props: o\n    } = e;\n    const a = ((e, t) => \"object\" == typeof e && e.resolvedName ? \"Canvas\" === e.resolvedName ? Canvas : t[e.resolvedName] : \"string\" == typeof e ? e : null)(r, t);\n    if (!a) return;\n    o = Object.keys(o).reduce((e, n) => {\n      const r = o[n];\n      return e[n] = null == r ? null : \"object\" == typeof r && r.resolvedName ? Ue(r, t) : \"children\" === n && Array.isArray(r) ? r.map(e => \"string\" == typeof e ? e : Ue(e, t)) : r, e;\n    }, {}), n && (o.key = n);\n    const i = {\n      ...A.createElement(a, {\n        ...o\n      })\n    };\n    return {\n      ...i,\n      name: Fe(t, i.type)\n    };\n  },\n  Ve = (e, t) => {\n    const {\n      type: n,\n      props: r,\n      ...o\n    } = e;\n    H(void 0 !== n && \"string\" == typeof n || void 0 !== n && void 0 !== n.resolvedName, w.replace(\"%displayName%\", e.displayName).replace(\"%availableComponents%\", Object.keys(t).join(\", \")));\n    const {\n        type: a,\n        name: i,\n        props: s\n      } = Ue(e, t),\n      {\n        parent: d,\n        custom: c,\n        displayName: u,\n        isCanvas: l,\n        nodes: f,\n        hidden: p\n      } = o;\n    return {\n      type: a,\n      name: i,\n      displayName: u || i,\n      props: s,\n      custom: c || {},\n      isCanvas: !!l,\n      hidden: !!p,\n      parent: d,\n      linkedNodes: o.linkedNodes || o._childCanvas || {},\n      nodes: f || []\n    };\n  },\n  Xe = (e, t) => {\n    if (t.length < 1) return {\n      [e.id]: e\n    };\n    const n = t.map(({\n        rootNodeId: e\n      }) => e),\n      r = {\n        ...e,\n        data: {\n          ...e.data,\n          nodes: n\n        }\n      };\n    return t.reduce((t, n) => {\n      const r = n.nodes[n.rootNodeId];\n      return {\n        ...t,\n        ...n.nodes,\n        [r.id]: {\n          ...r,\n          data: {\n            ...r.data,\n            parent: e.id\n          }\n        }\n      };\n    }, {\n      [e.id]: r\n    });\n  },\n  Ye = (e, t) => ({\n    rootNodeId: e.id,\n    nodes: Xe(e, t)\n  });\nfunction Ge(e) {\n  const t = e && e.options,\n    n = () => Ge(e);\n  return {\n    getDropPlaceholder: (t, r, o, a = t => e.nodes[t.id].dom) => {\n      const i = e.nodes[r],\n        s = n().node(i.id).isCanvas() ? i : e.nodes[i.data.parent];\n      if (!s) return;\n      const d = s.data.nodes || [],\n        c = $e(s, d ? d.reduce((t, n) => {\n          const r = a(e.nodes[n]);\n          if (r) {\n            const e = {\n              id: n,\n              ...T(r)\n            };\n            t.push(e);\n          }\n          return t;\n        }, []) : [], o.x, o.y),\n        u = d.length && e.nodes[d[c.index]],\n        l = {\n          placement: {\n            ...c,\n            currentNode: u\n          },\n          error: null\n        };\n      return Re(e.nodes, t).forEach(({\n        node: e,\n        exists: t\n      }) => {\n        t && n().node(e.id).isDraggable(e => l.error = e);\n      }), n().node(s.id).isDroppable(t, e => l.error = e), l;\n    },\n    getOptions: () => t,\n    getNodes: () => e.nodes,\n    node: t => He(e, t),\n    getSerializedNodes() {\n      const t = Object.keys(e.nodes).map(e => [e, this.node(e).toSerializedNode()]);\n      return Le(t);\n    },\n    getEvent: t => function (e, t) {\n      var n = e.events[t];\n      return {\n        contains: function (e) {\n          return n.has(e);\n        },\n        isEmpty: function () {\n          return 0 === this.all().length;\n        },\n        first: function () {\n          return this.all()[0];\n        },\n        last: function () {\n          var e = this.all();\n          return e[e.length - 1];\n        },\n        all: function () {\n          return Array.from(n);\n        },\n        size: function () {\n          return this.all().length;\n        },\n        at: function (e) {\n          return this.all()[e];\n        },\n        raw: function () {\n          return n;\n        }\n      };\n    }(e, t),\n    serialize() {\n      return JSON.stringify(this.getSerializedNodes());\n    },\n    parseReactElement: t => ({\n      toNodeTree(r) {\n        let o = function (e, t) {\n            let n = e;\n            return \"string\" == typeof n && (n = A.createElement(B, {}, n)), We({\n              data: {\n                type: n.type,\n                props: {\n                  ...n.props\n                }\n              }\n            }, e => {\n              t && t(e, n);\n            });\n          }(t, (t, n) => {\n            const o = Fe(e.options.resolver, t.data.type);\n            t.data.displayName = t.data.displayName || o, t.data.name = o, r && r(t, n);\n          }),\n          a = [];\n        return t.props && t.props.children && (a = A.Children.toArray(t.props.children).reduce((e, t) => (A.isValidElement(t) && e.push(n().parseReactElement(t).toNodeTree(r)), e), [])), Ye(o, a);\n      }\n    }),\n    parseSerializedNode: t => ({\n      toNode(r) {\n        const a = Ve(t, e.options.resolver);\n        H(a.type, l);\n        const i = \"string\" == typeof r && r;\n        return i && o(\"query.parseSerializedNode(...).toNode(id)\", {\n          suggest: \"query.parseSerializedNode(...).toNode(node => node.id = id)\"\n        }), n().parseFreshNode({\n          ...(i ? {\n            id: i\n          } : {}),\n          data: a\n        }).toNode(!i && r);\n      }\n    }),\n    parseFreshNode: t => ({\n      toNode: n => We(t, t => {\n        t.data.parent === u && (t.data.parent = i);\n        const r = Fe(e.options.resolver, t.data.type);\n        H(null !== r, l), t.data.displayName = t.data.displayName || r, t.data.name = r, n && n(t);\n      })\n    }),\n    createNode(e, t) {\n      o(`query.createNode(${e})`, {\n        suggest: `query.parseReactElement(${e}).toNodeTree()`\n      });\n      const n = this.parseReactElement(e).toNodeTree(),\n        r = n.nodes[n.rootNodeId];\n      return t ? (t.id && (r.id = t.id), t.data && (r.data = {\n        ...r.data,\n        ...t.data\n      }), r) : r;\n    },\n    getState: () => e\n  };\n}\nvar Ke = function (e) {\n    ee(n, C);\n    var t = ae(n);\n    function n() {\n      return G(this, n), t.apply(this, arguments);\n    }\n    return Q(n, [{\n      key: \"handlers\",\n      value: function () {\n        return {\n          connect: function (e, t) {},\n          select: function (e, t) {},\n          hover: function (e, t) {},\n          drag: function (e, t) {},\n          drop: function (e, t) {},\n          create: function (e, t, n) {}\n        };\n      }\n    }]), n;\n  }(),\n  Qe = function (e) {\n    ee(n, k);\n    var t = ae(n);\n    function n() {\n      return G(this, n), t.apply(this, arguments);\n    }\n    return Q(n);\n  }(),\n  Ze = function (e) {\n    e.preventDefault();\n  },\n  et = function () {\n    function e(t, n) {\n      G(this, e), Z(this, \"store\", void 0), Z(this, \"dragTarget\", void 0), Z(this, \"currentDropTargetId\", void 0), Z(this, \"currentDropTargetCanvasAncestorId\", void 0), Z(this, \"currentIndicator\", null), Z(this, \"currentTargetId\", void 0), Z(this, \"currentTargetChildDimensions\", void 0), Z(this, \"dragError\", void 0), Z(this, \"draggedNodes\", void 0), Z(this, \"onScrollListener\", void 0), this.store = t, this.dragTarget = n, this.currentDropTargetId = null, this.currentDropTargetCanvasAncestorId = null, this.currentTargetId = null, this.currentTargetChildDimensions = null, this.currentIndicator = null, this.dragError = null, this.draggedNodes = this.getDraggedNodes(), this.validateDraggedNodes(), this.onScrollListener = this.onScroll.bind(this), window.addEventListener(\"scroll\", this.onScrollListener, !0), window.addEventListener(\"dragover\", Ze, !1);\n    }\n    return Q(e, [{\n      key: \"cleanup\",\n      value: function () {\n        window.removeEventListener(\"scroll\", this.onScrollListener, !0), window.removeEventListener(\"dragover\", Ze, !1);\n      }\n    }, {\n      key: \"onScroll\",\n      value: function (e) {\n        var t = e.target,\n          n = this.store.query.node(i).get();\n        t instanceof Element && n && n.dom && t.contains(n.dom) && (this.currentTargetChildDimensions = null);\n      }\n    }, {\n      key: \"getDraggedNodes\",\n      value: function () {\n        return Re(this.store.query.getNodes(), \"new\" === this.dragTarget.type ? this.dragTarget.tree.nodes[this.dragTarget.tree.rootNodeId] : this.dragTarget.nodes);\n      }\n    }, {\n      key: \"validateDraggedNodes\",\n      value: function () {\n        var e = this;\n        \"new\" !== this.dragTarget.type && this.draggedNodes.forEach(function (t) {\n          t.exists && e.store.query.node(t.node.id).isDraggable(function (t) {\n            e.dragError = t;\n          });\n        });\n      }\n    }, {\n      key: \"isNearBorders\",\n      value: function (t, n, r) {\n        return t.top + e.BORDER_OFFSET > r || t.bottom - e.BORDER_OFFSET < r || t.left + e.BORDER_OFFSET > n || t.right - e.BORDER_OFFSET < n;\n      }\n    }, {\n      key: \"isDiff\",\n      value: function (e) {\n        return !this.currentIndicator || this.currentIndicator.placement.parent.id !== e.parent.id || this.currentIndicator.placement.index !== e.index || this.currentIndicator.placement.where !== e.where;\n      }\n    }, {\n      key: \"getChildDimensions\",\n      value: function (e) {\n        var t = this,\n          n = this.currentTargetChildDimensions;\n        return this.currentTargetId === e.id && n ? n : e.data.nodes.reduce(function (e, n) {\n          var r = t.store.query.node(n).get().dom;\n          return r && e.push(X({\n            id: n\n          }, T(r))), e;\n        }, []);\n      }\n    }, {\n      key: \"getCanvasAncestor\",\n      value: function (e) {\n        var t = this;\n        if (e === this.currentDropTargetId && this.currentDropTargetCanvasAncestorId) {\n          var n = this.store.query.node(this.currentDropTargetCanvasAncestorId).get();\n          if (n) return n;\n        }\n        return function e(n) {\n          var r = t.store.query.node(n).get();\n          return r && r.data.isCanvas ? r : r.data.parent ? e(r.data.parent) : null;\n        }(e);\n      }\n    }, {\n      key: \"computeIndicator\",\n      value: function (e, t, n) {\n        var r = this.getCanvasAncestor(e);\n        if (r && (this.currentDropTargetId = e, this.currentDropTargetCanvasAncestorId = r.id, r.data.parent && this.isNearBorders(T(r.dom), t, n) && !this.store.query.node(r.id).isLinkedNode() && (r = this.store.query.node(r.data.parent).get()), r)) {\n          this.currentTargetChildDimensions = this.getChildDimensions(r), this.currentTargetId = r.id;\n          var o = $e(r, this.currentTargetChildDimensions, t, n);\n          if (this.isDiff(o)) {\n            var a = this.dragError;\n            a || this.store.query.node(r.id).isDroppable(this.draggedNodes.map(function (e) {\n              return e.node;\n            }), function (e) {\n              a = e;\n            });\n            var i = r.data.nodes[o.index],\n              s = i && this.store.query.node(i).get();\n            return this.currentIndicator = {\n              placement: X(X({}, o), {}, {\n                currentNode: s\n              }),\n              error: a\n            }, this.currentIndicator;\n          }\n        }\n      }\n    }, {\n      key: \"getIndicator\",\n      value: function () {\n        return this.currentIndicator;\n      }\n    }]), e;\n  }();\nZ(et, \"BORDER_OFFSET\", 10);\nvar tt = function (e, t) {\n    if (1 === t.length || arguments.length > 2 && void 0 !== arguments[2] && arguments[2]) {\n      var n = t[0].getBoundingClientRect(),\n        r = n.width,\n        o = n.height,\n        a = t[0].cloneNode(!0);\n      return a.style.position = \"absolute\", a.style.left = \"-100%\", a.style.top = \"-100%\", a.style.width = \"\".concat(r, \"px\"), a.style.height = \"\".concat(o, \"px\"), a.style.pointerEvents = \"none\", a.classList.add(\"drag-shadow\"), document.body.appendChild(a), e.dataTransfer.setDragImage(a, 0, 0), a;\n    }\n    var i = document.createElement(\"div\");\n    return i.style.position = \"absolute\", i.style.left = \"-100%\", i.style.top = \"-100%\", i.style.width = \"100%\", i.style.height = \"100%\", i.style.pointerEvents = \"none\", i.classList.add(\"drag-shadow-container\"), t.forEach(function (e) {\n      var t = e.getBoundingClientRect(),\n        n = t.width,\n        r = t.height,\n        o = t.top,\n        a = t.left,\n        s = e.cloneNode(!0);\n      s.style.position = \"absolute\", s.style.left = \"\".concat(a, \"px\"), s.style.top = \"\".concat(o, \"px\"), s.style.width = \"\".concat(n, \"px\"), s.style.height = \"\".concat(r, \"px\"), s.classList.add(\"drag-shadow\"), i.appendChild(s);\n    }), document.body.appendChild(i), e.dataTransfer.setDragImage(i, e.clientX, e.clientY), i;\n  },\n  nt = function (e) {\n    ee(n, Ke);\n    var t = ae(n);\n    function n() {\n      var e;\n      G(this, n);\n      for (var r = arguments.length, o = new Array(r), a = 0; a < r; a++) o[a] = arguments[a];\n      return Z(oe(e = t.call.apply(t, [this].concat(o))), \"draggedElementShadow\", void 0), Z(oe(e), \"dragTarget\", void 0), Z(oe(e), \"positioner\", null), Z(oe(e), \"currentSelectedElementIds\", []), e;\n    }\n    return Q(n, [{\n      key: \"onDisable\",\n      value: function () {\n        this.options.store.actions.clearEvents();\n      }\n    }, {\n      key: \"handlers\",\n      value: function () {\n        var e = this,\n          t = this.options.store;\n        return {\n          connect: function (n, r) {\n            return t.actions.setDOM(r, n), e.reflect(function (e) {\n              e.select(n, r), e.hover(n, r), e.drop(n, r);\n            });\n          },\n          select: function (n, r) {\n            var o = e.addCraftEventListener(n, \"mousedown\", function (n) {\n                n.craft.stopPropagation();\n                var o = [];\n                if (r) {\n                  var a = t.query,\n                    i = a.getEvent(\"selected\").all();\n                  (e.options.isMultiSelectEnabled(n) || i.includes(r)) && (o = i.filter(function (e) {\n                    var t = a.node(e).descendants(!0),\n                      n = a.node(e).ancestors(!0);\n                    return !t.includes(r) && !n.includes(r);\n                  })), o.includes(r) || o.push(r);\n                }\n                t.actions.setNodeEvent(\"selected\", o);\n              }),\n              a = e.addCraftEventListener(n, \"click\", function (n) {\n                n.craft.stopPropagation();\n                var o = t.query.getEvent(\"selected\").all(),\n                  a = e.options.isMultiSelectEnabled(n),\n                  i = e.currentSelectedElementIds.includes(r),\n                  s = se(o);\n                a && i ? (s.splice(s.indexOf(r), 1), t.actions.setNodeEvent(\"selected\", s)) : !a && o.length > 1 && t.actions.setNodeEvent(\"selected\", s = [r]), e.currentSelectedElementIds = s;\n              });\n            return function () {\n              o(), a();\n            };\n          },\n          hover: function (n, r) {\n            var o = e.addCraftEventListener(n, \"mouseover\", function (e) {\n              e.craft.stopPropagation(), t.actions.setNodeEvent(\"hovered\", r);\n            });\n            return e.options.removeHoverOnMouseleave && e.addCraftEventListener(n, \"mouseleave\", function (e) {\n              e.craft.stopPropagation(), t.actions.setNodeEvent(\"hovered\", null);\n            }), function () {\n              o();\n            };\n          },\n          drop: function (n, r) {\n            var o = e.addCraftEventListener(n, \"dragover\", function (n) {\n                if (n.craft.stopPropagation(), n.preventDefault(), e.positioner) {\n                  var o = e.positioner.computeIndicator(r, n.clientX, n.clientY);\n                  o && t.actions.setIndicator(o);\n                }\n              }),\n              a = e.addCraftEventListener(n, \"dragenter\", function (e) {\n                e.craft.stopPropagation(), e.preventDefault();\n              });\n            return function () {\n              a(), o();\n            };\n          },\n          drag: function (r, o) {\n            if (!t.query.node(o).isDraggable()) return function () {};\n            r.setAttribute(\"draggable\", \"true\");\n            var a = e.addCraftEventListener(r, \"dragstart\", function (r) {\n                r.craft.stopPropagation();\n                var a = t.query,\n                  i = t.actions,\n                  s = a.getEvent(\"selected\").all(),\n                  d = e.options.isMultiSelectEnabled(r);\n                e.currentSelectedElementIds.includes(o) || (s = d ? [].concat(se(s), [o]) : [o], t.actions.setNodeEvent(\"selected\", s)), i.setNodeEvent(\"dragged\", s);\n                var c = s.map(function (e) {\n                  return a.node(e).get().dom;\n                });\n                e.draggedElementShadow = tt(r, c, n.forceSingleDragShadow), e.dragTarget = {\n                  type: \"existing\",\n                  nodes: s\n                }, e.positioner = new et(e.options.store, e.dragTarget);\n              }),\n              i = e.addCraftEventListener(r, \"dragend\", function (n) {\n                n.craft.stopPropagation(), e.dropElement(function (e, n) {\n                  \"new\" !== e.type && t.actions.move(e.nodes, n.placement.parent.id, n.placement.index + (\"after\" === n.placement.where ? 1 : 0));\n                });\n              });\n            return function () {\n              r.setAttribute(\"draggable\", \"false\"), a(), i();\n            };\n          },\n          create: function (r, o, a) {\n            r.setAttribute(\"draggable\", \"true\");\n            var i = e.addCraftEventListener(r, \"dragstart\", function (r) {\n                var a;\n                if (r.craft.stopPropagation(), \"function\" == typeof o) {\n                  var i = o();\n                  a = A.isValidElement(i) ? t.query.parseReactElement(i).toNodeTree() : i;\n                } else a = t.query.parseReactElement(o).toNodeTree();\n                e.draggedElementShadow = tt(r, [r.currentTarget], n.forceSingleDragShadow), e.dragTarget = {\n                  type: \"new\",\n                  tree: a\n                }, e.positioner = new et(e.options.store, e.dragTarget);\n              }),\n              s = e.addCraftEventListener(r, \"dragend\", function (n) {\n                n.craft.stopPropagation(), e.dropElement(function (e, n) {\n                  \"existing\" !== e.type && (t.actions.addNodeTree(e.tree, n.placement.parent.id, n.placement.index + (\"after\" === n.placement.where ? 1 : 0)), a && $(a.onCreate) && a.onCreate(e.tree));\n                });\n              });\n            return function () {\n              r.removeAttribute(\"draggable\"), i(), s();\n            };\n          }\n        };\n      }\n    }, {\n      key: \"dropElement\",\n      value: function (e) {\n        var t = this.options.store;\n        if (this.positioner) {\n          var n = this.draggedElementShadow,\n            r = this.positioner.getIndicator();\n          this.dragTarget && r && !r.error && e(this.dragTarget, r), n && (n.parentNode.removeChild(n), this.draggedElementShadow = null), this.dragTarget = null, t.actions.setIndicator(null), t.actions.setNodeEvent(\"dragged\", null), this.positioner.cleanup(), this.positioner = null;\n        }\n      }\n    }]), n;\n  }();\nfunction rt(e, t, n) {\n  var r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 2,\n    o = 0,\n    a = 0,\n    i = 0,\n    s = 0,\n    d = e.where;\n  return n ? n.inFlow ? (i = n.outerWidth, s = r, o = \"before\" === d ? n.top : n.bottom, a = n.left) : (i = r, s = n.outerHeight, o = n.top, a = \"before\" === d ? n.left : n.left + n.outerWidth) : t && (o = t.top + t.padding.top, a = t.left + t.padding.left, i = t.outerWidth - t.padding.right - t.padding.left - t.margin.left - t.margin.right, s = r), {\n    top: \"\".concat(o, \"px\"),\n    left: \"\".concat(a, \"px\"),\n    width: \"\".concat(i, \"px\"),\n    height: \"\".concat(s, \"px\")\n  };\n}\nZ(nt, \"forceSingleDragShadow\", S() && j());\nconst ot = () => {\n    const {\n        indicator: e,\n        indicatorOptions: t,\n        enabled: n\n      } = ve(e => ({\n        indicator: e.indicator,\n        indicatorOptions: e.options.indicator,\n        enabled: e.options.enabled\n      })),\n      r = pe();\n    return _(() => {\n      r && (n ? r.enable() : r.disable());\n    }, [n, r]), e ? A.createElement(D, {\n      className: t.className,\n      style: {\n        ...rt(e.placement, T(e.placement.parent.dom), e.placement.currentNode && T(e.placement.currentNode.dom), t.thickness),\n        backgroundColor: e.error ? t.error : t.success,\n        transition: t.transition || \"0.2s ease-in\",\n        ...(t.style ?? {})\n      },\n      parentDom: e.placement.parent.dom\n    }) : null;\n  },\n  at = ({\n    children: e\n  }) => {\n    const t = R(le),\n      n = q(() => t.query.getOptions().handlers(t), [t]);\n    return n ? A.createElement(fe.Provider, {\n      value: n\n    }, A.createElement(ot, null), e) : null;\n  },\n  it = {\n    nodes: {},\n    events: {\n      dragged: new Set(),\n      selected: new Set(),\n      hovered: new Set()\n    },\n    indicator: null,\n    options: {\n      onNodesChange: () => null,\n      onRender: ({\n        render: e\n      }) => e,\n      onBeforeMoveEnd: () => null,\n      resolver: {},\n      enabled: !0,\n      indicator: {\n        error: \"red\",\n        success: \"rgb(98, 196, 98)\"\n      },\n      handlers: e => new nt({\n        store: e,\n        removeHoverOnMouseleave: !1,\n        isMultiSelectEnabled: e => !!e.metaKey\n      }),\n      normalizeNodes: () => {}\n    }\n  },\n  st = {\n    methods: function (e, t) {\n      return X(X({}, function (e, t) {\n        var n = function (t, n, o) {\n            if (function n(r, o) {\n              var a = t.nodes[r];\n              \"string\" != typeof a.data.type && H(e.options.resolver[a.data.name], l.replace(\"%node_type%\", \"\".concat(a.data.type.name))), e.nodes[r] = X(X({}, a), {}, {\n                data: X(X({}, a.data), {}, {\n                  parent: o\n                })\n              }), a.data.nodes.length > 0 && (delete e.nodes[r].data.props.children, a.data.nodes.forEach(function (e) {\n                return n(e, a.id);\n              })), Object.values(a.data.linkedNodes).forEach(function (e) {\n                return n(e, a.id);\n              });\n            }(t.rootNodeId, n), n || t.rootNodeId !== i) {\n              var a = r(n);\n              if (\"child\" !== o.type) a.data.linkedNodes[o.id] = t.rootNodeId;else {\n                var s = o.index;\n                null != s ? a.data.nodes.splice(s, 0, t.rootNodeId) : a.data.nodes.push(t.rootNodeId);\n              }\n            }\n          },\n          r = function (t) {\n            H(t, c);\n            var n = e.nodes[t];\n            return H(n, s), n;\n          },\n          a = function t(n) {\n            var r = e.nodes[n],\n              o = e.nodes[r.data.parent];\n            if (r.data.nodes && se(r.data.nodes).forEach(function (e) {\n              return t(e);\n            }), r.data.linkedNodes && Object.values(r.data.linkedNodes).map(function (e) {\n              return t(e);\n            }), o.data.nodes.includes(n)) {\n              var a = o.data.nodes;\n              a.splice(a.indexOf(n), 1);\n            } else {\n              var i = Object.keys(o.data.linkedNodes).find(function (e) {\n                return o.data.linkedNodes[e] === e;\n              });\n              i && delete o.data.linkedNodes[i];\n            }\n            !function (e, t) {\n              Object.keys(e.events).forEach(function (n) {\n                var r = e.events[n];\n                r && r.has && r.has(t) && (e.events[n] = new Set(Array.from(r).filter(function (e) {\n                  return t !== e;\n                })));\n              });\n            }(e, n), delete e.nodes[n];\n          };\n        return {\n          addLinkedNodeFromTree: function (e, t, o) {\n            var i = r(t).data.linkedNodes[o];\n            i && a(i), n(e, t, {\n              type: \"linked\",\n              id: o\n            });\n          },\n          add: function (e, t, r) {\n            var a = [e];\n            Array.isArray(e) && (o(\"actions.add(node: Node[])\", {\n              suggest: \"actions.add(node: Node)\"\n            }), a = e), a.forEach(function (e) {\n              n({\n                nodes: Z({}, e.id, e),\n                rootNodeId: e.id\n              }, t, {\n                type: \"child\",\n                index: r\n              });\n            });\n          },\n          addNodeTree: function (e, t, r) {\n            n(e, t, {\n              type: \"child\",\n              index: r\n            });\n          },\n          delete: function (n) {\n            Re(e.nodes, n, {\n              existOnly: !0,\n              idOnly: !0\n            }).forEach(function (e) {\n              var n = e.node;\n              H(!t.node(n.id).isTopLevelNode(), d), a(n.id);\n            });\n          },\n          deserialize: function (e) {\n            var n = \"string\" == typeof e ? JSON.parse(e) : e,\n              r = Object.keys(n).map(function (e) {\n                var r = e;\n                return e === u && (r = i), [r, t.parseSerializedNode(n[e]).toNode(function (e) {\n                  return e.id = r;\n                })];\n              });\n            this.replaceNodes(Le(r));\n          },\n          move: function (n, r, o) {\n            var a = Re(e.nodes, n, {\n                existOnly: !0\n              }),\n              i = e.nodes[r],\n              s = new Set();\n            a.forEach(function (n, a) {\n              var d = n.node,\n                c = d.id,\n                u = d.data.parent;\n              t.node(r).isDroppable([c], function (e) {\n                throw new Error(e);\n              }), e.options.onBeforeMoveEnd(d, i, e.nodes[u]);\n              var l = e.nodes[u].data.nodes;\n              s.add(l);\n              var f = l.indexOf(c);\n              l[f] = \"$$\", i.data.nodes.splice(o + a, 0, c), e.nodes[c].data.parent = r;\n            }), s.forEach(function (e) {\n              var t = e.length;\n              se(e).reverse().forEach(function (n, r) {\n                \"$$\" === n && e.splice(t - 1 - r, 1);\n              });\n            });\n          },\n          replaceNodes: function (t) {\n            this.clearEvents(), e.nodes = t;\n          },\n          clearEvents: function () {\n            this.setNodeEvent(\"selected\", null), this.setNodeEvent(\"hovered\", null), this.setNodeEvent(\"dragged\", null), this.setIndicator(null);\n          },\n          reset: function () {\n            this.clearEvents(), this.replaceNodes({});\n          },\n          setOptions: function (t) {\n            t(e.options);\n          },\n          setNodeEvent: function (t, n) {\n            if (e.events[t].forEach(function (n) {\n              e.nodes[n] && (e.nodes[n].events[t] = !1);\n            }), e.events[t] = new Set(), n) {\n              var r = Re(e.nodes, n, {\n                  idOnly: !0,\n                  existOnly: !0\n                }),\n                o = new Set(r.map(function (e) {\n                  return e.node.id;\n                }));\n              o.forEach(function (n) {\n                e.nodes[n].events[t] = !0;\n              }), e.events[t] = o;\n            }\n          },\n          setCustom: function (t, n) {\n            Re(e.nodes, t, {\n              idOnly: !0,\n              existOnly: !0\n            }).forEach(function (t) {\n              return n(e.nodes[t.node.id].data.custom);\n            });\n          },\n          setDOM: function (t, n) {\n            e.nodes[t] && (e.nodes[t].dom = n);\n          },\n          setIndicator: function (t) {\n            t && (!t.placement.parent.dom || t.placement.currentNode && !t.placement.currentNode.dom) || (e.indicator = t);\n          },\n          setHidden: function (t, n) {\n            e.nodes[t].data.hidden = n;\n          },\n          setProp: function (t, n) {\n            Re(e.nodes, t, {\n              idOnly: !0,\n              existOnly: !0\n            }).forEach(function (t) {\n              return n(e.nodes[t.node.id].data.props);\n            });\n          },\n          selectNode: function (t) {\n            if (t) {\n              var n = Re(e.nodes, t, {\n                idOnly: !0,\n                existOnly: !0\n              });\n              this.setNodeEvent(\"selected\", n.map(function (e) {\n                return e.node.id;\n              }));\n            } else this.setNodeEvent(\"selected\", null);\n            this.setNodeEvent(\"hovered\", null);\n          }\n        };\n      }(e, t)), {}, {\n        setState: function (t) {\n          var n = re(this, qe);\n          t(e, n);\n        }\n      });\n    },\n    ignoreHistoryForActions: [\"setDOM\", \"setNodeEvent\", \"selectNode\", \"clearEvents\", \"setOptions\", \"setIndicator\"],\n    normalizeHistory: e => {\n      Object.keys(e.events).forEach(t => {\n        Array.from(e.events[t] || []).forEach(n => {\n          e.nodes[n] || e.events[t].delete(n);\n        });\n      }), Object.keys(e.nodes).forEach(t => {\n        const n = e.nodes[t];\n        Object.keys(n.events).forEach(t => {\n          n.events[t] && e.events[t] && !e.events[t].has(n.id) && (n.events[t] = !1);\n        });\n      });\n    }\n  },\n  dt = (e, t) => I(st, {\n    ...it,\n    options: {\n      ...it.options,\n      ...e\n    }\n  }, Ge, t),\n  ct = ({\n    children: e,\n    ...t\n  }) => {\n    void 0 !== t.resolver && H(\"object\" == typeof t.resolver && !Array.isArray(t.resolver) && null !== t.resolver, x);\n    const n = M(t),\n      r = dt(n.current, (e, t, n, r, o) => {\n        if (!n) return;\n        const {\n          patches: a,\n          ...i\n        } = n;\n        for (let n = 0; n < a.length; n++) {\n          const {\n              path: s\n            } = a[n],\n            d = s.length > 2 && \"nodes\" === s[0] && \"data\" === s[2];\n          if ([P.IGNORE, P.THROTTLE].includes(i.type) && i.params && (i.type = i.params[0]), [\"setState\", \"deserialize\"].includes(i.type) || d) {\n            o(n => {\n              e.options.normalizeNodes && e.options.normalizeNodes(n, t, i, r);\n            });\n            break;\n          }\n        }\n      });\n    return _(() => {\n      r && void 0 !== t.enabled && r.query.getOptions().enabled !== t.enabled && r.actions.setOptions(e => {\n        e.enabled = t.enabled;\n      });\n    }, [r, t.enabled]), _(() => {\n      r.subscribe(e => ({\n        json: r.query.serialize()\n      }), () => {\n        r.query.getOptions().onNodesChange(r.query);\n      });\n    }, [r]), r ? A.createElement(le.Provider, {\n      value: r\n    }, A.createElement(at, null, e)) : null;\n  };\nvar ut = [\"events\", \"data\"],\n  lt = [\"nodes\"],\n  ft = [\"nodes\"],\n  pt = [\"_hydrationTimestamp\", \"rules\"],\n  vt = [\"_hydrationTimestamp\", \"rules\"],\n  ht = function (e) {\n    var t = e.events,\n      n = e.data,\n      r = n.nodes,\n      o = n.linkedNodes,\n      a = re(e, ut),\n      i = We(J(e));\n    return {\n      node: e = X(X(X({}, i), a), {}, {\n        events: X(X({}, i.events), t),\n        dom: e.dom || i.dom\n      }),\n      childNodes: r,\n      linkedNodes: o\n    };\n  },\n  yt = function (e, t) {\n    var n = t.nodes,\n      r = re(t, lt),\n      o = e.nodes,\n      a = re(e, ft);\n    expect(a).toEqual(r);\n    var i = Object.keys(n).reduce(function (e, t) {\n        var r = re(n[t], pt);\n        return e[t] = r, e;\n      }, {}),\n      s = Object.keys(o).reduce(function (e, t) {\n        var n = re(o[t], vt);\n        return e[t] = n, e;\n      }, {});\n    expect(s).toEqual(i);\n  },\n  gt = function (e) {\n    var t = {};\n    return function e(n) {\n      var r = ht(n),\n        o = r.node,\n        a = r.childNodes,\n        i = r.linkedNodes;\n      t[o.id] = o, a && a.forEach(function (n, r) {\n        var a = ht(n),\n          i = a.node,\n          s = a.childNodes,\n          d = a.linkedNodes;\n        i.data.parent = o.id, t[i.id] = i, o.data.nodes[r] = i.id, e(X(X({}, i), {}, {\n          data: X(X({}, i.data), {}, {\n            nodes: s || [],\n            linkedNodes: d || {}\n          })\n        }));\n      }), i && Object.keys(i).forEach(function (n) {\n        var r = ht(i[n]),\n          a = r.node,\n          s = r.childNodes,\n          d = r.linkedNodes;\n        o.data.linkedNodes[n] = a.id, a.data.parent = o.id, t[a.id] = a, e(X(X({}, a), {}, {\n          data: X(X({}, a.data), {}, {\n            nodes: s || [],\n            linkedNodes: d || {}\n          })\n        }));\n      });\n    }(e), t;\n  },\n  mt = function () {\n    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},\n      t = e.nodes,\n      n = e.events;\n    return X(X(X({}, it), e), {}, {\n      nodes: t ? gt(t) : {},\n      events: X(X({}, it.events), n || {})\n    });\n  };\nexport { st as ActionMethodsWithConfig, Canvas, Ke as CoreEventHandlers, nt as DefaultEventHandlers, Qe as DerivedCoreEventHandlers, ct as Editor, Ce as Element, at as Events, je as Frame, Oe as NodeElement, He as NodeHelpers, U as NodeProvider, De as NodeSelectorType, et as Positioner, Ge as QueryMethods, Pe as connectEditor, Ae as connectNode, tt as createShadow, gt as createTestNodes, mt as createTestState, we as defaultElementProps, ke as deprecateCanvasComponent, it as editorInitialState, Te as elementPropToNodeData, yt as expectEditorState, Be as serializeNode, xe as useEditor, dt as useEditorStore, pe as useEventHandler, me as useNode };","map":{"version":3,"names":["W","A","createContext","U","NodeProvider","id","e","related","t","children","n","createElement","Provider","value","V","Object","keys","getOwnPropertySymbols","r","filter","getOwnPropertyDescriptor","enumerable","push","apply","X","arguments","length","forEach","Z","getOwnPropertyDescriptors","defineProperties","defineProperty","Y","Symbol","iterator","constructor","prototype","G","TypeError","K","configurable","writable","ue","key","Q","ee","create","ne","te","setPrototypeOf","getPrototypeOf","bind","__proto__","re","o","a","indexOf","propertyIsEnumerable","call","oe","ReferenceError","ae","Reflect","construct","sham","Proxy","Boolean","valueOf","ie","Array","isArray","i","s","d","c","next","done","return","de","se","ce","from","toString","slice","name","test","toPrimitive","String","le","L","fe","pe","useEventHandler","R","ve","H","q","createConnectorsUsage","_","register","cleanup","connectors","inContext","store","he","ye","nodes","actions","u","connect","drag","l","setProp","history","throttle","setCustom","setHidden","inNodeContext","ge","me","suggest","Ne","SimpleElement","render","type","cloneElement","be","DefaultRender","props","hydrationTimestamp","data","_hydrationTimestamp","Fragment","map","Oe","Ee","RenderNodeToElement","hidden","onRender","options","NodeElement","we","is","canvas","custom","Te","Ce","query","F","node","get","linkedNodes","parseReactElement","toNodeTree","ignore","addLinkedNodeFromTree","rootNodeId","ke","deprecateCanvasComponent","Canvas","Se","RenderRootNode","timestamp","je","Frame","json","M","current","deserialize","Children","only","addNodeTree","De","Any","Id","Obj","Ie","setDOM","setNodeEvent","replaceNodes","reset","xe","Pe","Ae","Le","fromEntries","reduce","Re","getNodesFromSelector","existOnly","idOnly","exists","qe","_e","Fe","resolveComponent","resolver","reversed","Map","entries","set","replace","displayName","Me","reduceType","resolvedName","ze","serializeComp","isCanvas","z","Be","serializeNode","He","f","nodeHelpers","isRoot","isLinkedNode","parent","includes","isTopLevelNode","isDeletable","isParentOfTopLevelNodes","isParentOfTopLevelCanvas","isSelected","events","selected","has","isHovered","hovered","isDragged","dragged","ancestors","descendants","childNodes","values","isDraggable","p","v","rules","canDrag","h","isDroppable","y","canMoveIn","g","canDrop","m","N","b","canMoveOut","E","toSerializedNode","concat","decendants","isTopLevelCanvas","$e","index","where","top","outerHeight","left","outerWidth","inFlow","Je","getNodeTypeName","We","O","Date","now","info","dom","craft","defaultProps","Ue","deserializeComp","Ve","deserializeNode","w","join","_childCanvas","Xe","mergeNodes","Ye","mergeTrees","Ge","getDropPlaceholder","T","x","placement","currentNode","error","getOptions","getNodes","getSerializedNodes","getEvent","contains","isEmpty","all","first","last","size","at","raw","serialize","JSON","stringify","B","toArray","isValidElement","parseSerializedNode","toNode","parseFreshNode","createNode","getState","Ke","C","select","hover","drop","Qe","k","Ze","documentDragoverEventHandler","preventDefault","et","dragTarget","currentDropTargetId","currentDropTargetCanvasAncestorId","currentTargetId","currentTargetChildDimensions","currentIndicator","dragError","draggedNodes","getDraggedNodes","validateDraggedNodes","onScrollListener","onScroll","window","addEventListener","removeEventListener","target","Element","tree","BORDER_OFFSET","bottom","right","getCanvasAncestor","isNearBorders","getChildDimensions","isDiff","tt","createShadow","getBoundingClientRect","width","height","cloneNode","style","position","pointerEvents","classList","add","document","body","appendChild","dataTransfer","setDragImage","clientX","clientY","nt","clearEvents","reflect","addCraftEventListener","stopPropagation","isMultiSelectEnabled","currentSelectedElementIds","splice","removeHoverOnMouseleave","positioner","computeIndicator","setIndicator","setAttribute","draggedElementShadow","forceSingleDragShadow","dropElement","move","currentTarget","$","onCreate","removeAttribute","getIndicator","parentNode","removeChild","rt","padding","margin","S","j","ot","RenderEditorIndicator","indicator","indicatorOptions","enabled","enable","disable","D","className","thickness","backgroundColor","success","transition","parentDom","Events","handlers","it","Set","onNodesChange","onBeforeMoveEnd","metaKey","normalizeNodes","st","methods","addNodeTreeToParent","getParentAndValidate","find","delete","parse","Error","reverse","setOptions","selectNode","setState","ignoreHistoryForActions","normalizeHistory","dt","useEditorStore","I","ct","Editor","patches","path","P","IGNORE","THROTTLE","params","subscribe","ut","lt","ft","pt","vt","ht","getTestNode","J","yt","expectEditorState","expect","toEqual","gt","createTestNodes","mt","createTestState","ActionMethodsWithConfig","CoreEventHandlers","DefaultEventHandlers","DerivedCoreEventHandlers","NodeHelpers","NodeSelectorType","Positioner","QueryMethods","connectEditor","connectNode","defaultElementProps","editorInitialState","elementPropToNodeData","useEditor","useNode"],"sources":["/Users/saira/Documents/School/node_modules/@craftjs/core/src/nodes/NodeContext.tsx","/Users/saira/Documents/School/node_modules/@craftjs/core/src/editor/EditorContext.tsx","/Users/saira/Documents/School/node_modules/@craftjs/core/src/events/EventContext.ts","/Users/saira/Documents/School/node_modules/@craftjs/core/src/editor/useInternalEditor.ts","/Users/saira/Documents/School/node_modules/@craftjs/core/src/nodes/useInternalNode.ts","/Users/saira/Documents/School/node_modules/@craftjs/core/src/hooks/useNode.ts","/Users/saira/Documents/School/node_modules/@craftjs/core/src/render/SimpleElement.tsx","/Users/saira/Documents/School/node_modules/@craftjs/core/src/render/DefaultRender.tsx","/Users/saira/Documents/School/node_modules/@craftjs/core/src/render/RenderNode.tsx","/Users/saira/Documents/School/node_modules/@craftjs/core/src/nodes/NodeElement.tsx","/Users/saira/Documents/School/node_modules/@craftjs/core/src/nodes/Element.tsx","/Users/saira/Documents/School/node_modules/@craftjs/core/src/nodes/Canvas.tsx","/Users/saira/Documents/School/node_modules/@craftjs/core/src/render/Frame.tsx","/Users/saira/Documents/School/node_modules/@craftjs/core/src/interfaces/nodes.ts","/Users/saira/Documents/School/node_modules/@craftjs/core/src/hooks/useEditor.tsx","/Users/saira/Documents/School/node_modules/@craftjs/core/src/hooks/legacy/connectEditor.tsx","/Users/saira/Documents/School/node_modules/@craftjs/core/src/hooks/legacy/connectNode.tsx","/Users/saira/Documents/School/node_modules/@craftjs/core/src/utils/fromEntries.ts","/Users/saira/Documents/School/node_modules/@craftjs/core/src/utils/getNodesFromSelector.ts","/Users/saira/Documents/School/node_modules/@craftjs/core/src/utils/resolveComponent.ts","/Users/saira/Documents/School/node_modules/@craftjs/core/src/utils/serializeNode.tsx","/Users/saira/Documents/School/node_modules/@craftjs/core/src/editor/NodeHelpers.ts","/Users/saira/Documents/School/node_modules/@craftjs/core/src/events/findPosition.ts","/Users/saira/Documents/School/node_modules/@craftjs/core/src/utils/createNode.ts","/Users/saira/Documents/School/node_modules/@craftjs/core/src/utils/deserializeNode.tsx","/Users/saira/Documents/School/node_modules/@craftjs/core/src/utils/mergeTrees.tsx","/Users/saira/Documents/School/node_modules/@craftjs/core/src/editor/query.tsx","/Users/saira/Documents/School/node_modules/@craftjs/core/src/editor/EventHelpers.ts","/Users/saira/Documents/School/node_modules/@craftjs/core/src/utils/parseNodeFromJSX.tsx","/Users/saira/Documents/School/node_modules/@craftjs/core/src/events/CoreEventHandlers.ts","/Users/saira/Documents/School/node_modules/@craftjs/core/src/events/Positioner.ts","/Users/saira/Documents/School/node_modules/@craftjs/core/src/events/createShadow.ts","/Users/saira/Documents/School/node_modules/@craftjs/core/src/events/DefaultEventHandlers.ts","/Users/saira/Documents/School/node_modules/@craftjs/core/src/events/movePlaceholder.ts","/Users/saira/Documents/School/node_modules/@craftjs/core/src/events/RenderEditorIndicator.tsx","/Users/saira/Documents/School/node_modules/@craftjs/core/src/events/Events.tsx","/Users/saira/Documents/School/node_modules/@craftjs/core/src/editor/store.tsx","/Users/saira/Documents/School/node_modules/@craftjs/core/src/editor/actions.ts","/Users/saira/Documents/School/node_modules/@craftjs/core/src/utils/removeNodeFromEvents.ts","/Users/saira/Documents/School/node_modules/@craftjs/core/src/editor/Editor.tsx","/Users/saira/Documents/School/node_modules/@craftjs/core/src/utils/testHelpers.ts"],"sourcesContent":["import React from 'react';\n\nimport { NodeId } from '../interfaces';\n\nexport type NodeContextType = {\n  id: NodeId;\n  related?: boolean;\n};\n\nexport const NodeContext = React.createContext<NodeContextType>(null);\n\nexport type NodeProviderProps = Omit<NodeContextType, 'connectors'> & {\n  children?: React.ReactNode;\n};\n\nexport const NodeProvider = ({\n  id,\n  related = false,\n  children,\n}: NodeProviderProps) => {\n  return (\n    <NodeContext.Provider value={{ id, related }}>\n      {children}\n    </NodeContext.Provider>\n  );\n};\n","import { createContext } from 'react';\n\nimport { EditorStore } from './store';\n\nexport type EditorContextType = EditorStore;\nexport const EditorContext = createContext<EditorContextType>(null);\n","import { createContext, useContext } from 'react';\n\nimport { CoreEventHandlers } from './CoreEventHandlers';\n\nexport const EventHandlerContext = createContext<CoreEventHandlers>(null);\n\nexport const useEventHandler = () => useContext(EventHandlerContext);\n","import {\n  useCollector,\n  useCollectorReturnType,\n  QueryCallbacksFor,\n  wrapConnectorHooks,\n  EventHandlerConnectors,\n  ERROR_USE_EDITOR_OUTSIDE_OF_EDITOR_CONTEXT,\n} from '@craftjs/utils';\nimport { useContext, useEffect, useMemo } from 'react';\nimport invariant from 'tiny-invariant';\n\nimport { EditorContext } from './EditorContext';\nimport { QueryMethods } from './query';\nimport { EditorStore } from './store';\n\nimport { CoreEventHandlers } from '../events/CoreEventHandlers';\nimport { useEventHandler } from '../events/EventContext';\nimport { EditorState } from '../interfaces';\n\nexport type EditorCollector<C> = (\n  state: EditorState,\n  query: QueryCallbacksFor<typeof QueryMethods>\n) => C;\n\nexport type useInternalEditorReturnType<C = null> = useCollectorReturnType<\n  EditorStore,\n  C\n> & {\n  inContext: boolean;\n  store: EditorStore;\n  connectors: EventHandlerConnectors<CoreEventHandlers, React.ReactElement>;\n};\n\nexport function useInternalEditor<C>(\n  collector?: EditorCollector<C>\n): useInternalEditorReturnType<C> {\n  const handler = useEventHandler();\n  const store = useContext(EditorContext);\n  invariant(store, ERROR_USE_EDITOR_OUTSIDE_OF_EDITOR_CONTEXT);\n\n  const collected = useCollector(store, collector);\n\n  const connectorsUsage = useMemo(\n    () => handler && handler.createConnectorsUsage(),\n    [handler]\n  );\n\n  useEffect(() => {\n    connectorsUsage.register();\n\n    return () => {\n      connectorsUsage.cleanup();\n    };\n  }, [connectorsUsage]);\n\n  const connectors = useMemo(\n    () => connectorsUsage && wrapConnectorHooks(connectorsUsage.connectors),\n    [connectorsUsage]\n  );\n\n  return {\n    ...collected,\n    connectors,\n    inContext: !!store,\n    store,\n  };\n}\n","import {\n  wrapConnectorHooks,\n  ERROR_USE_NODE_OUTSIDE_OF_EDITOR_CONTEXT,\n} from '@craftjs/utils';\nimport { useMemo, useContext } from 'react';\nimport invariant from 'tiny-invariant';\n\nimport { NodeContext } from './NodeContext';\n\nimport { useInternalEditor } from '../editor/useInternalEditor';\nimport { Node } from '../interfaces';\n\nexport function useInternalNode<S = null>(collect?: (node: Node) => S) {\n  const context = useContext(NodeContext);\n  invariant(context, ERROR_USE_NODE_OUTSIDE_OF_EDITOR_CONTEXT);\n\n  const { id, related } = context;\n\n  const {\n    actions: EditorActions,\n    query,\n    connectors: editorConnectors,\n    ...collected\n  } = useInternalEditor(\n    (state) => id && state.nodes[id] && collect && collect(state.nodes[id])\n  );\n\n  const connectors = useMemo(\n    () =>\n      wrapConnectorHooks({\n        connect: (dom: HTMLElement) => editorConnectors.connect(dom, id),\n        drag: (dom: HTMLElement) => editorConnectors.drag(dom, id),\n      }),\n    [editorConnectors, id]\n  );\n\n  const actions = useMemo(() => {\n    return {\n      setProp: (cb: any, throttleRate?: number) => {\n        if (throttleRate) {\n          EditorActions.history.throttle(throttleRate).setProp(id, cb);\n        } else {\n          EditorActions.setProp(id, cb);\n        }\n      },\n      setCustom: (cb: any, throttleRate?: number) => {\n        if (throttleRate) {\n          EditorActions.history.throttle(throttleRate).setCustom(id, cb);\n        } else {\n          EditorActions.setCustom(id, cb);\n        }\n      },\n      setHidden: (bool: boolean) => EditorActions.setHidden(id, bool),\n    };\n  }, [EditorActions, id]);\n\n  return {\n    ...collected,\n    id,\n    related,\n    inNodeContext: !!context,\n    actions,\n    connectors,\n  };\n}\n","import { deprecationWarning } from '@craftjs/utils';\n\nimport { Node } from '../interfaces';\nimport { useInternalNode } from '../nodes/useInternalNode';\n\n/**\n * A Hook to that provides methods and state information related to the corresponding Node that manages the current component.\n * @param collect - Collector function to consume values from the corresponding Node's state\n */\nexport function useNode<S = null>(collect?: (node: Node) => S) {\n  const {\n    id,\n    related,\n    actions,\n    inNodeContext,\n    connectors,\n    ...collected\n  } = useInternalNode(collect);\n\n  return {\n    ...collected,\n    actions,\n    id,\n    related,\n    setProp: (\n      cb: (props: Record<string, any>) => void,\n      throttleRate?: number\n    ) => {\n      deprecationWarning('useNode().setProp()', {\n        suggest: 'useNode().actions.setProp()',\n      });\n      return actions.setProp(cb, throttleRate);\n    },\n    inNodeContext,\n    connectors,\n  };\n}\n","import React from 'react';\n\nimport { useNode } from '../hooks/useNode';\n\nexport const SimpleElement = ({ render }: any) => {\n  const {\n    connectors: { connect, drag },\n  } = useNode();\n\n  return typeof render.type === 'string'\n    ? connect(drag(React.cloneElement(render)))\n    : render;\n};\n","import React, { useMemo } from 'react';\n\nimport { SimpleElement } from './SimpleElement';\n\nimport { NodeId } from '../interfaces';\nimport { NodeElement } from '../nodes/NodeElement';\nimport { useInternalNode } from '../nodes/useInternalNode';\n\nexport const DefaultRender = () => {\n  const { type, props, nodes, hydrationTimestamp } = useInternalNode(\n    (node) => ({\n      type: node.data.type,\n      props: node.data.props,\n      nodes: node.data.nodes,\n      hydrationTimestamp: node._hydrationTimestamp,\n    })\n  );\n\n  return useMemo(() => {\n    let children = props.children;\n\n    if (nodes && nodes.length > 0) {\n      children = (\n        <React.Fragment>\n          {nodes.map((id: NodeId) => (\n            <NodeElement id={id} key={id} />\n          ))}\n        </React.Fragment>\n      );\n    }\n\n    const render = React.createElement(type, props, children);\n\n    if (typeof type == 'string') {\n      return <SimpleElement render={render} />;\n    }\n\n    return render;\n    // eslint-disable-next-line  react-hooks/exhaustive-deps\n  }, [type, props, hydrationTimestamp, nodes]);\n};\n","import React from 'react';\n\nimport { DefaultRender } from './DefaultRender';\n\nimport { useInternalEditor } from '../editor/useInternalEditor';\nimport { useInternalNode } from '../nodes/useInternalNode';\n\ntype RenderNodeToElementProps = {\n  render?: React.ReactElement;\n  children?: React.ReactNode;\n};\nexport const RenderNodeToElement = ({ render }: RenderNodeToElementProps) => {\n  const { hidden } = useInternalNode((node) => ({\n    hidden: node.data.hidden,\n  }));\n\n  const { onRender } = useInternalEditor((state) => ({\n    onRender: state.options.onRender,\n  }));\n\n  // don't display the node since it's hidden\n  if (hidden) {\n    return null;\n  }\n\n  return React.createElement(onRender, { render: render || <DefaultRender /> });\n};\n","import React from 'react';\n\nimport { NodeProvider } from './NodeContext';\n\nimport { NodeId } from '../interfaces';\nimport { RenderNodeToElement } from '../render/RenderNode';\n\nexport type NodeElementProps = {\n  id: NodeId;\n  render?: React.ReactElement;\n};\n\nexport const NodeElement = ({ id, render }: NodeElementProps) => {\n  return (\n    <NodeProvider id={id}>\n      <RenderNodeToElement render={render} />\n    </NodeProvider>\n  );\n};\n","import { ERROR_TOP_LEVEL_ELEMENT_NO_ID } from '@craftjs/utils';\nimport React, { useState } from 'react';\nimport invariant from 'tiny-invariant';\n\nimport { NodeElement } from './NodeElement';\nimport { useInternalNode } from './useInternalNode';\n\nimport { useInternalEditor } from '../editor/useInternalEditor';\nimport { NodeId } from '../interfaces';\n\nexport const defaultElementProps = {\n  is: 'div',\n  canvas: false,\n  custom: {},\n  hidden: false,\n};\n\nexport const elementPropToNodeData = {\n  is: 'type',\n  canvas: 'isCanvas',\n};\n\nexport type ElementProps<T extends React.ElementType> = {\n  id?: NodeId;\n  is?: T;\n  custom?: Record<string, any>;\n  children?: React.ReactNode;\n  canvas?: boolean;\n  hidden?: boolean;\n} & React.ComponentProps<T>;\n\nexport function Element<T extends React.ElementType>({\n  id,\n  children,\n  ...elementProps\n}: ElementProps<T>) {\n  const { is } = {\n    ...defaultElementProps,\n    ...elementProps,\n  };\n\n  const { query, actions } = useInternalEditor();\n  const { id: nodeId, inNodeContext } = useInternalNode();\n\n  const [linkedNodeId] = useState<NodeId | null>(() => {\n    invariant(!!id, ERROR_TOP_LEVEL_ELEMENT_NO_ID);\n    const node = query.node(nodeId).get();\n\n    if (inNodeContext) {\n      const existingNode = node.data.linkedNodes[id]\n        ? query.node(node.data.linkedNodes[id]).get()\n        : null;\n\n      // Render existing linked Node if it already exists (and is the same type as the JSX)\n      if (existingNode && existingNode.data.type === is) {\n        return existingNode.id;\n      }\n\n      // otherwise, create and render a new linked Node\n      const linkedElement = React.createElement(\n        Element,\n        elementProps,\n        children\n      );\n\n      const tree = query.parseReactElement(linkedElement).toNodeTree();\n\n      actions.history.ignore().addLinkedNodeFromTree(tree, nodeId, id);\n      return tree.rootNodeId;\n    }\n    return null;\n  });\n\n  return linkedNodeId ? <NodeElement id={linkedNodeId} /> : null;\n}\n","import { deprecationWarning } from '@craftjs/utils';\nimport React, { useEffect } from 'react';\n\nimport { Element, ElementProps } from './Element';\n\nexport type CanvasProps<T extends React.ElementType> = ElementProps<T>;\n\nexport const deprecateCanvasComponent = () =>\n  deprecationWarning('<Canvas />', {\n    suggest: '<Element canvas={true} />',\n  });\n\nexport function Canvas<T extends React.ElementType>({\n  ...props\n}: CanvasProps<T>) {\n  useEffect(() => deprecateCanvasComponent(), []);\n\n  return <Element {...props} canvas={true} />;\n}\n","import { deprecationWarning, ROOT_NODE } from '@craftjs/utils';\nimport React, { useRef } from 'react';\n\nimport { useInternalEditor } from '../editor/useInternalEditor';\nimport { SerializedNodes } from '../interfaces';\nimport { NodeElement } from '../nodes/NodeElement';\n\nexport type FrameProps = {\n  children?: React.ReactNode;\n  json?: string;\n  data?: string | SerializedNodes;\n};\n\nconst RenderRootNode = () => {\n  const { timestamp } = useInternalEditor((state) => ({\n    timestamp:\n      state.nodes[ROOT_NODE] && state.nodes[ROOT_NODE]._hydrationTimestamp,\n  }));\n\n  if (!timestamp) {\n    return null;\n  }\n\n  return <NodeElement id={ROOT_NODE} key={timestamp} />;\n};\n\n/**\n * A React Component that defines the editable area\n */\nexport const Frame = ({ children, json, data }: FrameProps) => {\n  const { actions, query } = useInternalEditor();\n\n  if (!!json) {\n    deprecationWarning('<Frame json={...} />', {\n      suggest: '<Frame data={...} />',\n    });\n  }\n\n  const isLoaded = useRef(false);\n\n  if (!isLoaded.current) {\n    const initialData = data || json;\n\n    if (initialData) {\n      actions.history.ignore().deserialize(initialData);\n    } else if (children) {\n      const rootNode = React.Children.only(children) as React.ReactElement;\n\n      const node = query.parseReactElement(rootNode).toNodeTree((node, jsx) => {\n        if (jsx === rootNode) {\n          node.id = ROOT_NODE;\n        }\n        return node;\n      });\n\n      actions.history.ignore().addNodeTree(node);\n    }\n\n    isLoaded.current = true;\n  }\n\n  return <RenderRootNode />;\n};\n","import { QueryCallbacksFor } from '@craftjs/utils';\nimport React from 'react';\n\nimport { QueryMethods } from '../editor/query';\n\nexport type UserComponentConfig<T> = {\n  displayName: string;\n  rules: Partial<NodeRules>;\n  related: Partial<NodeRelated>;\n  props: Partial<T>;\n  custom: Record<string, any>;\n  info: Record<string, any>;\n  isCanvas: boolean;\n\n  // TODO: Deprecate\n  name: string;\n  defaultProps: Partial<T>;\n};\n\nexport type UserComponent<T = any> = React.ComponentType<T> & {\n  craft?: Partial<UserComponentConfig<T>>;\n};\n\nexport type NodeId = string;\nexport type NodeEventTypes = 'selected' | 'dragged' | 'hovered';\n\nexport type Node = {\n  id: NodeId;\n  data: NodeData;\n  info: Record<string, any>;\n  events: Record<NodeEventTypes, boolean>;\n  dom: HTMLElement | null;\n  related: Record<string, React.ElementType>;\n  rules: NodeRules;\n  _hydrationTimestamp: number;\n};\n\nexport type NodeHelpersType = QueryCallbacksFor<typeof QueryMethods>['node'];\nexport type NodeRules = {\n  canDrag(node: Node, helpers: NodeHelpersType): boolean;\n  canDrop(dropTarget: Node, self: Node, helpers: NodeHelpersType): boolean;\n  canMoveIn(canMoveIn: Node[], self: Node, helpers: NodeHelpersType): boolean;\n  canMoveOut(canMoveOut: Node[], self: Node, helpers: NodeHelpersType): boolean;\n};\nexport type NodeRelated = Record<string, React.ElementType>;\n\nexport type NodeData = {\n  props: Record<string, any>;\n  type: string | React.ElementType;\n  name: string;\n  displayName: string;\n  isCanvas: boolean;\n  parent: NodeId | null;\n  linkedNodes: Record<string, NodeId>;\n  nodes: NodeId[];\n  hidden: boolean;\n  custom?: any;\n  _childCanvas?: Record<string, NodeId>; // TODO: Deprecate in favour of linkedNodes\n};\n\nexport type FreshNode = {\n  id?: NodeId;\n  data: Partial<NodeData> & Required<Pick<NodeData, 'type'>>;\n};\n\nexport type ReduceCompType =\n  | string\n  | {\n      resolvedName: string;\n    };\n\nexport type ReducedComp = {\n  type: ReduceCompType;\n  isCanvas: boolean;\n  props: any;\n};\n\nexport type SerializedNode = Omit<\n  NodeData,\n  'type' | 'subtype' | 'name' | 'event'\n> &\n  ReducedComp;\n\nexport type SerializedNodes = Record<NodeId, SerializedNode>;\n\n// TODO: Deprecate in favor of SerializedNode\nexport type SerializedNodeData = SerializedNode;\n\nexport type Nodes = Record<NodeId, Node>;\n\n/**\n * A NodeTree is an internal data structure for CRUD operations that involve\n * more than a single node.\n *\n * For example, when we drop a component we use a tree because we\n * need to drop more than a single component.\n */\nexport interface NodeTree {\n  rootNodeId: NodeId;\n  nodes: Nodes;\n}\n\ntype NodeIdSelector = NodeId | NodeId[];\ntype NodeObjSelector = Node | Node[];\n\nexport enum NodeSelectorType {\n  Any,\n  Id,\n  Obj,\n}\n\nexport type NodeSelector<\n  T extends NodeSelectorType = NodeSelectorType.Any\n> = T extends NodeSelectorType.Id\n  ? NodeIdSelector\n  : T extends NodeSelectorType.Obj\n  ? NodeObjSelector\n  : NodeIdSelector | NodeObjSelector;\n\nexport type NodeSelectorWrapper = {\n  node: Node;\n  exists: boolean;\n};\n","import { Overwrite, Delete, OverwriteFnReturnType } from '@craftjs/utils';\nimport { useMemo } from 'react';\n\nimport {\n  useInternalEditor,\n  EditorCollector,\n  useInternalEditorReturnType,\n} from '../editor/useInternalEditor';\n\ntype PrivateActions =\n  | 'addLinkedNodeFromTree'\n  | 'setNodeEvent'\n  | 'setDOM'\n  | 'replaceNodes'\n  | 'reset';\n\nconst getPublicActions = (actions) => {\n  const {\n    addLinkedNodeFromTree,\n    setDOM,\n    setNodeEvent,\n    replaceNodes,\n    reset,\n    ...EditorActions\n  } = actions;\n\n  return EditorActions;\n};\n\nexport type WithoutPrivateActions<S = null> = Delete<\n  useInternalEditorReturnType<S>['actions'],\n  PrivateActions | 'history'\n> & {\n  history: Overwrite<\n    useInternalEditorReturnType<S>['actions']['history'],\n    {\n      ignore: OverwriteFnReturnType<\n        useInternalEditorReturnType<S>['actions']['history']['ignore'],\n        PrivateActions\n      >;\n      throttle: OverwriteFnReturnType<\n        useInternalEditorReturnType<S>['actions']['history']['throttle'],\n        PrivateActions\n      >;\n    }\n  >;\n};\n\nexport type useEditorReturnType<S = null> = Overwrite<\n  useInternalEditorReturnType<S>,\n  {\n    actions: WithoutPrivateActions;\n    query: Delete<useInternalEditorReturnType<S>['query'], 'deserialize'>;\n  }\n>;\n\n/**\n * A Hook that that provides methods and information related to the entire editor state.\n * @param collector Collector function to consume values from the editor's state\n */\nexport function useEditor(): useEditorReturnType;\nexport function useEditor<S>(\n  collect: EditorCollector<S>\n): useEditorReturnType<S>;\n\nexport function useEditor<S>(collect?: any): useEditorReturnType<S> {\n  const {\n    connectors,\n    actions: internalActions,\n    query,\n    store,\n    ...collected\n  } = useInternalEditor(collect);\n\n  const EditorActions = getPublicActions(internalActions);\n\n  const actions = useMemo(() => {\n    return {\n      ...EditorActions,\n      history: {\n        ...EditorActions.history,\n        ignore: (...args) =>\n          getPublicActions(EditorActions.history.ignore(...args)),\n        throttle: (...args) =>\n          getPublicActions(EditorActions.history.throttle(...args)),\n      },\n    };\n  }, [EditorActions]);\n\n  return {\n    connectors,\n    actions,\n    query,\n    store,\n    ...(collected as any),\n  };\n}\n","import React from 'react';\n\nimport { EditorState } from '../../interfaces';\nimport { useEditor } from '../useEditor';\n\nexport function connectEditor<C>(collect?: (state: EditorState) => C) {\n  return (WrappedComponent: React.ElementType) => {\n    return (props: any) => {\n      const Editor = collect ? useEditor(collect) : useEditor();\n      return <WrappedComponent {...Editor} {...props} />;\n    };\n  };\n}\n","import React from 'react';\n\nimport { Node } from '../../interfaces';\nimport { useNode } from '../useNode';\n\nexport function connectNode<C>(collect?: (state: Node) => C) {\n  return function (WrappedComponent: React.ElementType) {\n    return (props: any) => {\n      const node = useNode(collect);\n      return <WrappedComponent {...node} {...props} />;\n    };\n  };\n}\n","export const fromEntries = (pairs) => {\n  if (Object.fromEntries) {\n    return Object.fromEntries(pairs);\n  }\n  return pairs.reduce(\n    (accum, [id, value]) => ({\n      ...accum,\n      [id]: value,\n    }),\n    {}\n  );\n};\n","import { ERROR_INVALID_NODEID } from '@craftjs/utils';\nimport invariant from 'tiny-invariant';\n\nimport { Nodes, Node, NodeSelectorWrapper, NodeSelector } from '../interfaces';\n\ntype config = { existOnly: boolean; idOnly: boolean };\nexport const getNodesFromSelector = (\n  nodes: Nodes,\n  selector: NodeSelector,\n  config?: Partial<config>\n): NodeSelectorWrapper[] => {\n  const items = Array.isArray(selector) ? selector : [selector];\n\n  const mergedConfig = {\n    existOnly: false,\n    idOnly: false,\n    ...(config || {}),\n  };\n\n  const nodeSelectors = items\n    .filter((item) => !!item)\n    .map((item) => {\n      if (typeof item === 'string') {\n        return {\n          node: nodes[item],\n          exists: !!nodes[item],\n        };\n      }\n\n      if (typeof item === 'object' && !mergedConfig.idOnly) {\n        const node = item as Node;\n        return {\n          node,\n          exists: !!nodes[node.id],\n        };\n      }\n\n      return {\n        node: null,\n        exists: false,\n      };\n    });\n\n  if (mergedConfig.existOnly) {\n    invariant(\n      nodeSelectors.filter((selector) => !selector.exists).length === 0,\n      ERROR_INVALID_NODEID\n    );\n  }\n\n  return nodeSelectors;\n};\n","import { ERROR_NOT_IN_RESOLVER } from '@craftjs/utils';\nimport React from 'react';\nimport invariant from 'tiny-invariant';\n\nimport { Resolver } from '../interfaces';\n\ntype ReversedResolver = Map<React.ComponentType | string, string>;\n\ntype CachedResolverData = {\n  resolver: Resolver;\n  reversed: ReversedResolver;\n};\n\nlet CACHED_RESOLVER_DATA: CachedResolverData | null = null;\n\nconst getReversedResolver = (resolver: Resolver): ReversedResolver => {\n  if (CACHED_RESOLVER_DATA && CACHED_RESOLVER_DATA.resolver === resolver) {\n    return CACHED_RESOLVER_DATA.reversed;\n  }\n\n  CACHED_RESOLVER_DATA = {\n    resolver,\n    reversed: new Map(),\n  };\n\n  for (const [name, comp] of Object.entries(resolver)) {\n    CACHED_RESOLVER_DATA.reversed.set(comp, name);\n  }\n\n  return CACHED_RESOLVER_DATA.reversed;\n};\n\nconst getComponentName = (component: React.ElementType): string | undefined => {\n  return (component as any).name || (component as any).displayName;\n};\n\nconst searchComponentInResolver = (\n  resolver: Resolver,\n  comp: React.ElementType\n): string | null => {\n  const name = getReversedResolver(resolver).get(comp);\n  return name !== undefined ? name : null;\n};\n\nexport const resolveComponent = (\n  resolver: Resolver,\n  comp: React.ElementType | string\n): string => {\n  if (typeof comp === 'string') {\n    return comp;\n  }\n\n  const resolvedName = searchComponentInResolver(resolver, comp);\n\n  invariant(\n    resolvedName,\n    ERROR_NOT_IN_RESOLVER.replace('%node_type%', getComponentName(comp))\n  );\n\n  return resolvedName;\n};\n","import React, { Children } from 'react';\n\nimport { resolveComponent } from './resolveComponent';\n\nimport { NodeData, ReducedComp, SerializedNode } from '../interfaces';\nimport { Resolver } from '../interfaces';\n\nconst reduceType = (type: React.ElementType | string, resolver: Resolver) => {\n  if (typeof type === 'string') {\n    return type;\n  }\n  return { resolvedName: resolveComponent(resolver, type) };\n};\n\nexport const serializeComp = (\n  data: Pick<NodeData, 'type' | 'isCanvas' | 'props'>,\n  resolver: Resolver\n): ReducedComp => {\n  let { type, isCanvas, props } = data;\n  props = Object.keys(props).reduce((result: Record<string, any>, key) => {\n    const prop = props[key];\n\n    if (prop === undefined || prop === null || typeof prop === 'function') {\n      return result;\n    }\n\n    if (key === 'children' && typeof prop !== 'string') {\n      result[key] = Children.map(prop, (child) => {\n        if (typeof child === 'string') {\n          return child;\n        }\n        return serializeComp(child, resolver);\n      });\n    } else if (typeof prop.type === 'function') {\n      result[key] = serializeComp(prop, resolver);\n    } else {\n      result[key] = prop;\n    }\n    return result;\n  }, {});\n\n  return {\n    type: reduceType(type, resolver),\n    isCanvas: !!isCanvas,\n    props,\n  };\n};\n\nexport const serializeNode = (\n  data: Omit<NodeData, 'event'>,\n  resolver: Resolver\n): SerializedNode => {\n  const { type, props, isCanvas, name, ...nodeData } = data;\n\n  const reducedComp = serializeComp({ type, isCanvas, props }, resolver);\n\n  return {\n    ...reducedComp,\n    ...nodeData,\n  };\n};\n","import {\n  deprecationWarning,\n  ERROR_CANNOT_DRAG,\n  ERROR_DUPLICATE_NODEID,\n  ERROR_INVALID_NODE_ID,\n  ERROR_MOVE_INCOMING_PARENT,\n  ERROR_MOVE_NONCANVAS_CHILD,\n  ERROR_MOVE_OUTGOING_PARENT,\n  ERROR_MOVE_TO_DESCENDANT,\n  ERROR_MOVE_TO_NONCANVAS_PARENT,\n  ERROR_MOVE_TOP_LEVEL_NODE,\n  ERROR_MOVE_CANNOT_DROP,\n  ROOT_NODE,\n} from '@craftjs/utils';\nimport invariant from 'tiny-invariant';\n\nimport { EditorState, NodeId, NodeSelector } from '../interfaces';\nimport { getNodesFromSelector } from '../utils/getNodesFromSelector';\nimport { serializeNode } from '../utils/serializeNode';\n\nexport function NodeHelpers(state: EditorState, id: NodeId) {\n  invariant(typeof id == 'string', ERROR_INVALID_NODE_ID);\n\n  const node = state.nodes[id];\n\n  const nodeHelpers = (id) => NodeHelpers(state, id);\n\n  return {\n    isCanvas() {\n      return !!node.data.isCanvas;\n    },\n    isRoot() {\n      return node.id === ROOT_NODE;\n    },\n    isLinkedNode() {\n      return (\n        node.data.parent &&\n        nodeHelpers(node.data.parent).linkedNodes().includes(node.id)\n      );\n    },\n    isTopLevelNode() {\n      return this.isRoot() || this.isLinkedNode();\n    },\n    isDeletable() {\n      return !this.isTopLevelNode();\n    },\n    isParentOfTopLevelNodes: () =>\n      node.data.linkedNodes && Object.keys(node.data.linkedNodes).length > 0,\n    isParentOfTopLevelCanvas() {\n      deprecationWarning('query.node(id).isParentOfTopLevelCanvas', {\n        suggest: 'query.node(id).isParentOfTopLevelNodes',\n      });\n      return this.isParentOfTopLevelNodes();\n    },\n    isSelected() {\n      return state.events.selected.has(id);\n    },\n    isHovered() {\n      return state.events.hovered.has(id);\n    },\n    isDragged() {\n      return state.events.dragged.has(id);\n    },\n    get() {\n      return node;\n    },\n    ancestors(deep = false): NodeId[] {\n      function appendParentNode(\n        id: NodeId,\n        ancestors: NodeId[] = [],\n        depth: number = 0\n      ) {\n        const node = state.nodes[id];\n        if (!node) {\n          return ancestors;\n        }\n\n        ancestors.push(id);\n\n        if (!node.data.parent) {\n          return ancestors;\n        }\n\n        if (deep || (!deep && depth === 0)) {\n          ancestors = appendParentNode(node.data.parent, ancestors, depth + 1);\n        }\n        return ancestors;\n      }\n      return appendParentNode(node.data.parent);\n    },\n    descendants(\n      deep = false,\n      includeOnly?: 'linkedNodes' | 'childNodes'\n    ): NodeId[] {\n      function appendChildNode(\n        id: NodeId,\n        descendants: NodeId[] = [],\n        depth: number = 0\n      ) {\n        if (deep || (!deep && depth === 0)) {\n          const node = state.nodes[id];\n\n          if (!node) {\n            return descendants;\n          }\n\n          if (includeOnly !== 'childNodes') {\n            // Include linkedNodes if any\n            const linkedNodes = nodeHelpers(id).linkedNodes();\n\n            linkedNodes.forEach((nodeId) => {\n              descendants.push(nodeId);\n              descendants = appendChildNode(nodeId, descendants, depth + 1);\n            });\n          }\n\n          if (includeOnly !== 'linkedNodes') {\n            const childNodes = nodeHelpers(id).childNodes();\n\n            childNodes.forEach((nodeId) => {\n              descendants.push(nodeId);\n              descendants = appendChildNode(nodeId, descendants, depth + 1);\n            });\n          }\n\n          return descendants;\n        }\n        return descendants;\n      }\n      return appendChildNode(id);\n    },\n    linkedNodes() {\n      return Object.values(node.data.linkedNodes || {});\n    },\n    childNodes() {\n      return node.data.nodes || [];\n    },\n    isDraggable(onError?: (err: string) => void) {\n      try {\n        const targetNode = node;\n        invariant(!this.isTopLevelNode(), ERROR_MOVE_TOP_LEVEL_NODE);\n        invariant(\n          NodeHelpers(state, targetNode.data.parent).isCanvas(),\n          ERROR_MOVE_NONCANVAS_CHILD\n        );\n        invariant(\n          targetNode.rules.canDrag(targetNode, nodeHelpers),\n          ERROR_CANNOT_DRAG\n        );\n        return true;\n      } catch (err) {\n        if (onError) {\n          onError(err);\n        }\n        return false;\n      }\n    },\n    isDroppable(selector: NodeSelector, onError?: (err: string) => void) {\n      const targets = getNodesFromSelector(state.nodes, selector);\n\n      const newParentNode = node;\n\n      try {\n        invariant(this.isCanvas(), ERROR_MOVE_TO_NONCANVAS_PARENT);\n        invariant(\n          newParentNode.rules.canMoveIn(\n            targets.map((selector) => selector.node),\n            newParentNode,\n            nodeHelpers\n          ),\n          ERROR_MOVE_INCOMING_PARENT\n        );\n\n        const parentNodes = {};\n\n        targets.forEach(({ node: targetNode, exists }) => {\n          invariant(\n            targetNode.rules.canDrop(newParentNode, targetNode, nodeHelpers),\n            ERROR_MOVE_CANNOT_DROP\n          );\n\n          // Ignore other checking if the Node is new\n          if (!exists) {\n            return;\n          }\n\n          invariant(\n            !nodeHelpers(targetNode.id).isTopLevelNode(),\n            ERROR_MOVE_TOP_LEVEL_NODE\n          );\n\n          const targetDeepNodes = nodeHelpers(targetNode.id).descendants(true);\n\n          invariant(\n            !targetDeepNodes.includes(newParentNode.id) &&\n              newParentNode.id !== targetNode.id,\n            ERROR_MOVE_TO_DESCENDANT\n          );\n\n          const currentParentNode =\n            targetNode.data.parent && state.nodes[targetNode.data.parent];\n\n          invariant(\n            currentParentNode.data.isCanvas,\n            ERROR_MOVE_NONCANVAS_CHILD\n          );\n\n          invariant(\n            currentParentNode ||\n              (!currentParentNode && !state.nodes[targetNode.id]),\n            ERROR_DUPLICATE_NODEID\n          );\n\n          if (currentParentNode.id !== newParentNode.id) {\n            if (!parentNodes[currentParentNode.id]) {\n              parentNodes[currentParentNode.id] = [];\n            }\n\n            parentNodes[currentParentNode.id].push(targetNode);\n          }\n        });\n\n        Object.keys(parentNodes).forEach((parentNodeId) => {\n          const childNodes = parentNodes[parentNodeId];\n          const parentNode = state.nodes[parentNodeId];\n\n          invariant(\n            parentNode.rules.canMoveOut(childNodes, parentNode, nodeHelpers),\n            ERROR_MOVE_OUTGOING_PARENT\n          );\n        });\n\n        return true;\n      } catch (err) {\n        if (onError) {\n          onError(err);\n        }\n        return false;\n      }\n    },\n    toSerializedNode() {\n      return serializeNode(node.data, state.options.resolver);\n    },\n    toNodeTree(includeOnly?: 'linkedNodes' | 'childNodes') {\n      const nodes = [id, ...this.descendants(true, includeOnly)].reduce(\n        (accum, descendantId) => {\n          accum[descendantId] = nodeHelpers(descendantId).get();\n          return accum;\n        },\n        {}\n      );\n\n      return {\n        rootNodeId: id,\n        nodes,\n      };\n    },\n\n    /**\n     Deprecated NodeHelpers\n     **/\n\n    decendants(deep = false) {\n      deprecationWarning('query.node(id).decendants', {\n        suggest: 'query.node(id).descendants',\n      });\n      return this.descendants(deep);\n    },\n    isTopLevelCanvas() {\n      return !this.isRoot() && !node.data.parent;\n    },\n  };\n}\n","import { Node, NodeInfo, DropPosition } from '../interfaces';\n\nexport default function findPosition(\n  parent: Node,\n  dims: NodeInfo[],\n  posX: number,\n  posY: number\n) {\n  let result: DropPosition = {\n    parent,\n    index: 0,\n    where: 'before',\n  };\n\n  let leftLimit = 0,\n    xLimit = 0,\n    dimRight = 0,\n    yLimit = 0,\n    xCenter = 0,\n    yCenter = 0,\n    dimDown = 0;\n\n  // Each dim is: Top, Left, Height, Width\n  for (let i = 0, len = dims.length; i < len; i++) {\n    const dim = dims[i];\n\n    // Right position of the element. Left + Width\n    dimRight = dim.left + dim.outerWidth;\n    // Bottom position of the element. Top + Height\n    dimDown = dim.top + dim.outerHeight;\n    // X center position of the element. Left + (Width / 2)\n    xCenter = dim.left + dim.outerWidth / 2;\n    // Y center position of the element. Top + (Height / 2)\n    yCenter = dim.top + dim.outerHeight / 2;\n    // Skip if over the limits\n    if (\n      (xLimit && dim.left > xLimit) ||\n      (yLimit && yCenter >= yLimit) || // >= avoid issue with clearfixes\n      (leftLimit && dimRight < leftLimit)\n    )\n      continue;\n\n    result.index = i;\n    // If it's not in flow (like 'float' element)\n    if (!dim.inFlow) {\n      if (posY < dimDown) yLimit = dimDown;\n      //If x lefter than center\n      if (posX < xCenter) {\n        xLimit = xCenter;\n        result.where = 'before';\n      } else {\n        leftLimit = xCenter;\n        result.where = 'after';\n      }\n    } else {\n      // If y upper than center\n      if (posY < yCenter) {\n        result.where = 'before';\n        break;\n      } else result.where = 'after'; // After last element\n    }\n  }\n\n  return result;\n}\n","import { getRandomId as getRandomNodeId } from '@craftjs/utils';\nimport React from 'react';\n\nimport { Node, FreshNode, UserComponentConfig } from '../interfaces';\nimport {\n  defaultElementProps,\n  Element,\n  Canvas,\n  elementPropToNodeData,\n  deprecateCanvasComponent,\n} from '../nodes';\nimport { NodeProvider } from '../nodes/NodeContext';\n\nconst getNodeTypeName = (type: string | { name: string }) =>\n  typeof type == 'string' ? type : type.name;\n\nexport function createNode(\n  newNode: FreshNode,\n  normalize?: (node: Node) => void\n) {\n  let actualType = newNode.data.type as any;\n  let id = newNode.id || getRandomNodeId();\n\n  const node: Node = {\n    id,\n    _hydrationTimestamp: Date.now(),\n    data: {\n      type: actualType,\n      name: getNodeTypeName(actualType),\n      displayName: getNodeTypeName(actualType),\n      props: {},\n      custom: {},\n      parent: null,\n      isCanvas: false,\n      hidden: false,\n      nodes: [],\n      linkedNodes: {},\n      ...newNode.data,\n    },\n    info: {},\n    related: {},\n    events: {\n      selected: false,\n      dragged: false,\n      hovered: false,\n    },\n    rules: {\n      canDrag: () => true,\n      canDrop: () => true,\n      canMoveIn: () => true,\n      canMoveOut: () => true,\n    },\n    dom: null,\n  };\n\n  // @ts-ignore\n  if (node.data.type === Element || node.data.type === Canvas) {\n    const mergedProps = {\n      ...defaultElementProps,\n      ...node.data.props,\n    };\n\n    node.data.props = Object.keys(node.data.props).reduce((props, key) => {\n      if (Object.keys(defaultElementProps).includes(key)) {\n        // If a <Element /> specific props is found (ie: \"is\", \"canvas\")\n        // Replace the node.data with the value specified in the prop\n        node.data[elementPropToNodeData[key] || key] = mergedProps[key];\n      } else {\n        // Otherwise include the props in the node as usual\n        props[key] = node.data.props[key];\n      }\n\n      return props;\n    }, {});\n\n    actualType = node.data.type;\n    node.data.name = getNodeTypeName(actualType);\n    node.data.displayName = getNodeTypeName(actualType);\n\n    const usingDeprecatedCanvas = node.data.type === Canvas;\n    if (usingDeprecatedCanvas) {\n      node.data.isCanvas = true;\n      deprecateCanvasComponent();\n    }\n  }\n\n  if (normalize) {\n    normalize(node);\n  }\n\n  // TODO: use UserComponentConfig type\n  const userComponentConfig = actualType.craft as UserComponentConfig<any>;\n\n  if (userComponentConfig) {\n    node.data.displayName =\n      userComponentConfig.displayName ||\n      userComponentConfig.name ||\n      node.data.displayName;\n\n    node.data.props = {\n      ...(userComponentConfig.props || userComponentConfig.defaultProps || {}),\n      ...node.data.props,\n    };\n\n    node.data.custom = {\n      ...(userComponentConfig.custom || {}),\n      ...node.data.custom,\n    };\n\n    if (\n      userComponentConfig.isCanvas !== undefined &&\n      userComponentConfig.isCanvas !== null\n    ) {\n      node.data.isCanvas = userComponentConfig.isCanvas;\n    }\n\n    if (userComponentConfig.rules) {\n      Object.keys(userComponentConfig.rules).forEach((key) => {\n        if (['canDrag', 'canDrop', 'canMoveIn', 'canMoveOut'].includes(key)) {\n          node.rules[key] = userComponentConfig.rules[key];\n        }\n      });\n    }\n\n    if (userComponentConfig.related) {\n      const relatedNodeContext = {\n        id: node.id,\n        related: true,\n      };\n\n      Object.keys(userComponentConfig.related).forEach((comp) => {\n        node.related[comp] = (props) =>\n          React.createElement(\n            NodeProvider,\n            relatedNodeContext,\n            React.createElement(userComponentConfig.related[comp], props)\n          );\n      });\n    }\n\n    if (userComponentConfig.info) {\n      node.info = userComponentConfig.info;\n    }\n  }\n\n  return node;\n}\n","import { ERROR_DESERIALIZE_COMPONENT_NOT_IN_RESOLVER } from '@craftjs/utils';\nimport React from 'react';\nimport invariant from 'tiny-invariant';\n\nimport { resolveComponent } from './resolveComponent';\n\nimport {\n  NodeData,\n  SerializedNode,\n  ReducedComp,\n  ReduceCompType,\n} from '../interfaces';\nimport { Resolver } from '../interfaces';\nimport { Canvas } from '../nodes/Canvas';\n\ntype DeserialisedType = JSX.Element & { name: string };\n\nconst restoreType = (type: ReduceCompType, resolver: Resolver) =>\n  typeof type === 'object' && type.resolvedName\n    ? type.resolvedName === 'Canvas'\n      ? Canvas\n      : resolver[type.resolvedName]\n    : typeof type === 'string'\n    ? type\n    : null;\n\nexport const deserializeComp = (\n  data: ReducedComp,\n  resolver: Resolver,\n  index?: number\n): DeserialisedType | void => {\n  let { type, props } = data;\n\n  const main = restoreType(type, resolver);\n\n  if (!main) {\n    return;\n  }\n\n  props = Object.keys(props).reduce((result: Record<string, any>, key) => {\n    const prop = props[key];\n    if (prop === null || prop === undefined) {\n      result[key] = null;\n    } else if (typeof prop === 'object' && prop.resolvedName) {\n      result[key] = deserializeComp(prop, resolver);\n    } else if (key === 'children' && Array.isArray(prop)) {\n      result[key] = prop.map((child) => {\n        if (typeof child === 'string') {\n          return child;\n        }\n        return deserializeComp(child, resolver);\n      });\n    } else {\n      result[key] = prop;\n    }\n    return result;\n  }, {});\n\n  if (index) {\n    props.key = index;\n  }\n\n  const jsx = {\n    ...React.createElement(main, {\n      ...props,\n    }),\n  };\n\n  return {\n    ...jsx,\n    name: resolveComponent(resolver, jsx.type),\n  };\n};\n\nexport const deserializeNode = (\n  data: SerializedNode,\n  resolver: Resolver\n): Omit<NodeData, 'event'> => {\n  const { type: Comp, props: Props, ...nodeData } = data;\n\n  const isCompAnHtmlElement = Comp !== undefined && typeof Comp === 'string';\n  const isCompAUserComponent =\n    Comp !== undefined &&\n    (Comp as { resolvedName?: string }).resolvedName !== undefined;\n\n  invariant(\n    isCompAnHtmlElement || isCompAUserComponent,\n    ERROR_DESERIALIZE_COMPONENT_NOT_IN_RESOLVER.replace(\n      '%displayName%',\n      data.displayName\n    ).replace('%availableComponents%', Object.keys(resolver).join(', '))\n  );\n\n  const { type, name, props } = (deserializeComp(\n    data,\n    resolver\n  ) as unknown) as NodeData;\n\n  const { parent, custom, displayName, isCanvas, nodes, hidden } = nodeData;\n\n  const linkedNodes = nodeData.linkedNodes || nodeData._childCanvas;\n\n  return {\n    type,\n    name,\n    displayName: displayName || name,\n    props,\n    custom: custom || {},\n    isCanvas: !!isCanvas,\n    hidden: !!hidden,\n    parent,\n    linkedNodes: linkedNodes || {},\n    nodes: nodes || [],\n  };\n};\n","import { Node, NodeTree } from '../interfaces';\n\nconst mergeNodes = (rootNode: Node, childrenNodes: NodeTree[]) => {\n  if (childrenNodes.length < 1) {\n    return { [rootNode.id]: rootNode };\n  }\n  const nodes = childrenNodes.map(({ rootNodeId }) => rootNodeId);\n  const nodeWithChildren = { ...rootNode, data: { ...rootNode.data, nodes } };\n  const rootNodes = { [rootNode.id]: nodeWithChildren };\n  return childrenNodes.reduce((accum, tree) => {\n    const currentNode = tree.nodes[tree.rootNodeId];\n    return {\n      ...accum,\n      ...tree.nodes,\n      // set the parent id for the current node\n      [currentNode.id]: {\n        ...currentNode,\n        data: {\n          ...currentNode.data,\n          parent: rootNode.id,\n        },\n      },\n    };\n  }, rootNodes);\n};\n\nexport const mergeTrees = (\n  rootNode: Node,\n  childrenNodes: NodeTree[]\n): NodeTree => ({\n  rootNodeId: rootNode.id,\n  nodes: mergeNodes(rootNode, childrenNodes),\n});\n","import {\n  QueryCallbacksFor,\n  ERROR_NOT_IN_RESOLVER,\n  getDOMInfo,\n  deprecationWarning,\n  DEPRECATED_ROOT_NODE,\n  ROOT_NODE,\n} from '@craftjs/utils';\nimport React from 'react';\nimport invariant from 'tiny-invariant';\n\nimport { EventHelpers } from './EventHelpers';\nimport { NodeHelpers } from './NodeHelpers';\n\nimport findPosition from '../events/findPosition';\nimport {\n  NodeId,\n  EditorState,\n  Indicator,\n  Node,\n  Options,\n  NodeEventTypes,\n  NodeInfo,\n  NodeSelector,\n  NodeTree,\n  SerializedNodes,\n  SerializedNode,\n  FreshNode,\n} from '../interfaces';\nimport { createNode } from '../utils/createNode';\nimport { deserializeNode } from '../utils/deserializeNode';\nimport { fromEntries } from '../utils/fromEntries';\nimport { getNodesFromSelector } from '../utils/getNodesFromSelector';\nimport { mergeTrees } from '../utils/mergeTrees';\nimport { parseNodeFromJSX } from '../utils/parseNodeFromJSX';\nimport { resolveComponent } from '../utils/resolveComponent';\n\nexport function QueryMethods(state: EditorState) {\n  const options = state && state.options;\n\n  const _: () => QueryCallbacksFor<typeof QueryMethods> = () =>\n    QueryMethods(state) as any;\n\n  return {\n    /**\n     * Determine the best possible location to drop the source Node relative to the target Node\n     *\n     * TODO: replace with Positioner.computeIndicator();\n     */\n    getDropPlaceholder: (\n      source: NodeSelector,\n      target: NodeId,\n      pos: { x: number; y: number },\n      nodesToDOM: (node: Node) => HTMLElement = (node) =>\n        state.nodes[node.id].dom\n    ) => {\n      const targetNode = state.nodes[target],\n        isTargetCanvas = _().node(targetNode.id).isCanvas();\n\n      const targetParent = isTargetCanvas\n        ? targetNode\n        : state.nodes[targetNode.data.parent];\n\n      if (!targetParent) return;\n\n      const targetParentNodes = targetParent.data.nodes || [];\n\n      const dimensionsInContainer = targetParentNodes\n        ? targetParentNodes.reduce((result, id: NodeId) => {\n            const dom = nodesToDOM(state.nodes[id]);\n            if (dom) {\n              const info: NodeInfo = {\n                id,\n                ...getDOMInfo(dom),\n              };\n\n              result.push(info);\n            }\n            return result;\n          }, [] as NodeInfo[])\n        : [];\n\n      const dropAction = findPosition(\n        targetParent,\n        dimensionsInContainer,\n        pos.x,\n        pos.y\n      );\n      const currentNode =\n        targetParentNodes.length &&\n        state.nodes[targetParentNodes[dropAction.index]];\n\n      const output: Indicator = {\n        placement: {\n          ...dropAction,\n          currentNode,\n        },\n        error: null,\n      };\n\n      const sourceNodes = getNodesFromSelector(state.nodes, source);\n\n      sourceNodes.forEach(({ node, exists }) => {\n        // If source Node is already in the editor, check if it's draggable\n        if (exists) {\n          _()\n            .node(node.id)\n            .isDraggable((err) => (output.error = err));\n        }\n      });\n\n      // Check if source Node is droppable in target\n      _()\n        .node(targetParent.id)\n        .isDroppable(source, (err) => (output.error = err));\n\n      return output;\n    },\n\n    /**\n     * Get the current Editor options\n     */\n    getOptions(): Options {\n      return options;\n    },\n\n    getNodes() {\n      return state.nodes;\n    },\n\n    /**\n     * Helper methods to describe the specified Node\n     * @param id\n     */\n    node(id: NodeId) {\n      return NodeHelpers(state, id);\n    },\n\n    /**\n     * Returns all the `nodes` in a serialized format\n     */\n    getSerializedNodes(): SerializedNodes {\n      const nodePairs = Object.keys(state.nodes).map((id: NodeId) => [\n        id,\n        this.node(id).toSerializedNode(),\n      ]);\n      return fromEntries(nodePairs);\n    },\n\n    getEvent(eventType: NodeEventTypes) {\n      return EventHelpers(state, eventType);\n    },\n\n    /**\n     * Retrieve the JSON representation of the editor's Nodes\n     */\n    serialize(): string {\n      return JSON.stringify(this.getSerializedNodes());\n    },\n\n    parseReactElement: (reactElement: React.ReactElement) => ({\n      toNodeTree(\n        normalize?: (node: Node, jsx: React.ReactElement) => void\n      ): NodeTree {\n        let node = parseNodeFromJSX(reactElement, (node, jsx) => {\n          const name = resolveComponent(state.options.resolver, node.data.type);\n\n          node.data.displayName = node.data.displayName || name;\n          node.data.name = name;\n\n          if (normalize) {\n            normalize(node, jsx);\n          }\n        });\n\n        let childrenNodes: NodeTree[] = [];\n\n        if (reactElement.props && reactElement.props.children) {\n          childrenNodes = React.Children.toArray(\n            reactElement.props.children\n          ).reduce<NodeTree[]>((accum, child: any) => {\n            if (React.isValidElement(child)) {\n              accum.push(_().parseReactElement(child).toNodeTree(normalize));\n            }\n            return accum;\n          }, []);\n        }\n\n        return mergeTrees(node, childrenNodes);\n      },\n    }),\n\n    parseSerializedNode: (serializedNode: SerializedNode) => ({\n      toNode(normalize?: (node: Node) => void): Node {\n        const data = deserializeNode(serializedNode, state.options.resolver);\n        invariant(data.type, ERROR_NOT_IN_RESOLVER);\n\n        const id = typeof normalize === 'string' && normalize;\n\n        if (id) {\n          deprecationWarning(`query.parseSerializedNode(...).toNode(id)`, {\n            suggest: `query.parseSerializedNode(...).toNode(node => node.id = id)`,\n          });\n        }\n\n        return _()\n          .parseFreshNode({\n            ...(id ? { id } : {}),\n            data,\n          })\n          .toNode(!id && normalize);\n      },\n    }),\n\n    parseFreshNode: (node: FreshNode) => ({\n      toNode(normalize?: (node: Node) => void): Node {\n        return createNode(node, (node) => {\n          if (node.data.parent === DEPRECATED_ROOT_NODE) {\n            node.data.parent = ROOT_NODE;\n          }\n\n          const name = resolveComponent(state.options.resolver, node.data.type);\n          invariant(name !== null, ERROR_NOT_IN_RESOLVER);\n          node.data.displayName = node.data.displayName || name;\n          node.data.name = name;\n\n          if (normalize) {\n            normalize(node);\n          }\n        });\n      },\n    }),\n\n    createNode(reactElement: React.ReactElement, extras?: any) {\n      deprecationWarning(`query.createNode(${reactElement})`, {\n        suggest: `query.parseReactElement(${reactElement}).toNodeTree()`,\n      });\n\n      const tree = this.parseReactElement(reactElement).toNodeTree();\n\n      const node = tree.nodes[tree.rootNodeId];\n\n      if (!extras) {\n        return node;\n      }\n\n      if (extras.id) {\n        node.id = extras.id;\n      }\n\n      if (extras.data) {\n        node.data = {\n          ...node.data,\n          ...extras.data,\n        };\n      }\n\n      return node;\n    },\n\n    getState() {\n      return state;\n    },\n  };\n}\n","import { EditorState, NodeId, NodeEventTypes } from '../interfaces';\n\nexport function EventHelpers(state: EditorState, eventType: NodeEventTypes) {\n  const event = state.events[eventType];\n  return {\n    contains(id: NodeId) {\n      return event.has(id);\n    },\n    isEmpty() {\n      return this.all().length === 0;\n    },\n    first() {\n      const values = this.all();\n      return values[0];\n    },\n    last() {\n      const values = this.all();\n      return values[values.length - 1];\n    },\n    all() {\n      return Array.from(event);\n    },\n    size() {\n      return this.all().length;\n    },\n    at(i: number) {\n      return this.all()[i];\n    },\n    raw() {\n      return event;\n    },\n  };\n}\n","import React, { Fragment } from 'react';\n\nimport { createNode } from './createNode';\n\nimport { Node } from '../interfaces';\n\nexport function parseNodeFromJSX(\n  jsx: React.ReactElement | string,\n  normalize?: (node: Node, jsx: React.ReactElement) => void\n) {\n  let element = jsx as React.ReactElement;\n\n  if (typeof element === 'string') {\n    element = React.createElement(Fragment, {}, element) as React.ReactElement;\n  }\n\n  let actualType = element.type as any;\n\n  return createNode(\n    {\n      data: {\n        type: actualType,\n        props: { ...element.props },\n      },\n    },\n    (node) => {\n      if (normalize) {\n        normalize(node, element);\n      }\n    }\n  );\n}\n","import { DerivedEventHandlers, EventHandlers } from '@craftjs/utils';\n\nimport { EditorStore } from '../editor/store';\nimport { NodeId, NodeTree } from '../interfaces/nodes';\n\nexport interface CreateHandlerOptions {\n  onCreate: (nodeTree: NodeTree) => void;\n}\n\nexport class CoreEventHandlers<O = {}> extends EventHandlers<\n  { store: EditorStore } & O\n> {\n  handlers() {\n    return {\n      connect: (el: HTMLElement, id: NodeId) => {},\n      select: (el: HTMLElement, id: NodeId) => {},\n      hover: (el: HTMLElement, id: NodeId) => {},\n      drag: (el: HTMLElement, id: NodeId) => {},\n      drop: (el: HTMLElement, id: NodeId) => {},\n      create: (\n        el: HTMLElement,\n        UserElement: React.ReactElement | (() => NodeTree | React.ReactElement),\n        options?: Partial<CreateHandlerOptions>\n      ) => {},\n    };\n  }\n}\n\nexport abstract class DerivedCoreEventHandlers<\n  O = {}\n> extends DerivedEventHandlers<CoreEventHandlers, O> {}\n","import { getDOMInfo, ROOT_NODE } from '@craftjs/utils';\n\nimport findPosition from './findPosition';\n\nimport { EditorStore } from '../editor/store';\nimport {\n  DragTarget,\n  DropPosition,\n  Indicator,\n  Node,\n  NodeId,\n  NodeInfo,\n  NodeSelectorWrapper,\n} from '../interfaces';\nimport { getNodesFromSelector } from '../utils/getNodesFromSelector';\n\n// Hack: to trigger dragend event immediate\n// Otherwise we would have to wait until the native animation is completed before we can actually drop an block\nconst documentDragoverEventHandler = (e: DragEvent) => {\n  e.preventDefault();\n};\n\n/**\n * Positioner is responsible for computing the drop Indicator during a sequence of drag-n-drop events\n */\nexport class Positioner {\n  static BORDER_OFFSET = 10;\n\n  // Current Node being hovered on\n  private currentDropTargetId: NodeId | null;\n  // Current closest Canvas Node relative to the currentDropTarget\n  private currentDropTargetCanvasAncestorId: NodeId | null;\n\n  private currentIndicator: Indicator | null = null;\n\n  private currentTargetId: NodeId | null;\n  private currentTargetChildDimensions: NodeInfo[] | null;\n\n  private dragError: string | null;\n  private draggedNodes: NodeSelectorWrapper[];\n\n  private onScrollListener: (e: Event) => void;\n\n  constructor(readonly store: EditorStore, readonly dragTarget: DragTarget) {\n    this.currentDropTargetId = null;\n    this.currentDropTargetCanvasAncestorId = null;\n\n    this.currentTargetId = null;\n    this.currentTargetChildDimensions = null;\n\n    this.currentIndicator = null;\n\n    this.dragError = null;\n    this.draggedNodes = this.getDraggedNodes();\n\n    this.validateDraggedNodes();\n\n    this.onScrollListener = this.onScroll.bind(this);\n    window.addEventListener('scroll', this.onScrollListener, true);\n    window.addEventListener('dragover', documentDragoverEventHandler, false);\n  }\n\n  cleanup() {\n    window.removeEventListener('scroll', this.onScrollListener, true);\n    window.removeEventListener('dragover', documentDragoverEventHandler, false);\n  }\n\n  private onScroll(e: Event) {\n    const scrollBody = e.target;\n    const rootNode = this.store.query.node(ROOT_NODE).get();\n\n    // Clear the currentTargetChildDimensions if the user has scrolled\n    // Because we will have to recompute new dimensions relative to the new scroll pos\n    const shouldClearChildDimensionsCache =\n      scrollBody instanceof Element &&\n      rootNode &&\n      rootNode.dom &&\n      scrollBody.contains(rootNode.dom);\n\n    if (!shouldClearChildDimensionsCache) {\n      return;\n    }\n\n    this.currentTargetChildDimensions = null;\n  }\n\n  private getDraggedNodes() {\n    if (this.dragTarget.type === 'new') {\n      return getNodesFromSelector(\n        this.store.query.getNodes(),\n        this.dragTarget.tree.nodes[this.dragTarget.tree.rootNodeId]\n      );\n    }\n\n    return getNodesFromSelector(\n      this.store.query.getNodes(),\n      this.dragTarget.nodes\n    );\n  }\n\n  // Check if the elements being dragged are allowed to be dragged\n  private validateDraggedNodes() {\n    // We don't need to check for dragTarget.type = \"new\" because those nodes are not yet in the state (ie: via the .create() connector)\n    if (this.dragTarget.type === 'new') {\n      return;\n    }\n\n    this.draggedNodes.forEach(({ node, exists }) => {\n      if (!exists) {\n        return;\n      }\n\n      this.store.query.node(node.id).isDraggable((err) => {\n        this.dragError = err;\n      });\n    });\n  }\n\n  private isNearBorders(\n    domInfo: ReturnType<typeof getDOMInfo>,\n    x: number,\n    y: number\n  ) {\n    const { top, bottom, left, right } = domInfo;\n\n    if (\n      top + Positioner.BORDER_OFFSET > y ||\n      bottom - Positioner.BORDER_OFFSET < y ||\n      left + Positioner.BORDER_OFFSET > x ||\n      right - Positioner.BORDER_OFFSET < x\n    ) {\n      return true;\n    }\n\n    return false;\n  }\n\n  private isDiff(newPosition: DropPosition) {\n    if (\n      this.currentIndicator &&\n      this.currentIndicator.placement.parent.id === newPosition.parent.id &&\n      this.currentIndicator.placement.index === newPosition.index &&\n      this.currentIndicator.placement.where === newPosition.where\n    ) {\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Get dimensions of every child Node in the specified parent Node\n   */\n  private getChildDimensions(newParentNode: Node) {\n    // Use previously computed child dimensions if newParentNode is the same as the previous one\n    const existingTargetChildDimensions = this.currentTargetChildDimensions;\n    if (\n      this.currentTargetId === newParentNode.id &&\n      existingTargetChildDimensions\n    ) {\n      return existingTargetChildDimensions;\n    }\n\n    return newParentNode.data.nodes.reduce((result, id: NodeId) => {\n      const dom = this.store.query.node(id).get().dom;\n\n      if (dom) {\n        result.push({\n          id,\n          ...getDOMInfo(dom),\n        });\n      }\n\n      return result;\n    }, [] as NodeInfo[]);\n  }\n\n  /**\n   * Get closest Canvas node relative to the dropTargetId\n   * Return dropTargetId if it itself is a Canvas node\n   *\n   * In most cases it will be the dropTarget itself or its immediate parent.\n   * We typically only need to traverse 2 levels or more if the dropTarget is a linked node\n   *\n   * TODO: We should probably have some special rules to handle linked nodes\n   */\n  private getCanvasAncestor(dropTargetId: NodeId) {\n    // If the dropTargetId is the same as the previous one\n    // Return the canvas ancestor node that we found previuously\n    if (\n      dropTargetId === this.currentDropTargetId &&\n      this.currentDropTargetCanvasAncestorId\n    ) {\n      const node = this.store.query\n        .node(this.currentDropTargetCanvasAncestorId)\n        .get();\n\n      if (node) {\n        return node;\n      }\n    }\n\n    const getCanvas = (nodeId: NodeId): Node => {\n      const node = this.store.query.node(nodeId).get();\n\n      if (node && node.data.isCanvas) {\n        return node;\n      }\n\n      if (!node.data.parent) {\n        return null;\n      }\n\n      return getCanvas(node.data.parent);\n    };\n\n    return getCanvas(dropTargetId);\n  }\n\n  /**\n   * Compute a new Indicator object based on the dropTarget and x,y coords\n   * Returns null if theres no change from the previous Indicator\n   */\n  computeIndicator(dropTargetId: NodeId, x: number, y: number): Indicator {\n    let newParentNode = this.getCanvasAncestor(dropTargetId);\n\n    if (!newParentNode) {\n      return;\n    }\n\n    this.currentDropTargetId = dropTargetId;\n    this.currentDropTargetCanvasAncestorId = newParentNode.id;\n\n    // Get parent if we're hovering at the border of the current node\n    if (\n      newParentNode.data.parent &&\n      this.isNearBorders(getDOMInfo(newParentNode.dom), x, y) &&\n      // Ignore if linked node because there's won't be an adjacent sibling anyway\n      !this.store.query.node(newParentNode.id).isLinkedNode()\n    ) {\n      newParentNode = this.store.query.node(newParentNode.data.parent).get();\n    }\n\n    if (!newParentNode) {\n      return;\n    }\n\n    this.currentTargetChildDimensions = this.getChildDimensions(newParentNode);\n    this.currentTargetId = newParentNode.id;\n\n    const position = findPosition(\n      newParentNode,\n      this.currentTargetChildDimensions,\n      x,\n      y\n    );\n\n    // Ignore if the position is similar as the previous one\n    if (!this.isDiff(position)) {\n      return;\n    }\n\n    let error = this.dragError;\n\n    // Last thing to check for is if the dragged nodes can be dropped in the target area\n    if (!error) {\n      this.store.query.node(newParentNode.id).isDroppable(\n        this.draggedNodes.map((sourceNode) => sourceNode.node),\n        (dropError) => {\n          error = dropError;\n        }\n      );\n    }\n\n    const currentNodeId = newParentNode.data.nodes[position.index];\n    const currentNode =\n      currentNodeId && this.store.query.node(currentNodeId).get();\n\n    this.currentIndicator = {\n      placement: {\n        ...position,\n        currentNode,\n      },\n      error,\n    };\n\n    return this.currentIndicator;\n  }\n\n  getIndicator() {\n    return this.currentIndicator;\n  }\n}\n","// Works partially with Linux (except on Chrome)\n// We'll need an alternate way to create drag shadows\nexport const createShadow = (\n  e: DragEvent,\n  shadowsToCreate: HTMLElement[],\n  forceSingleShadow: boolean = false\n) => {\n  if (shadowsToCreate.length === 1 || forceSingleShadow) {\n    const { width, height } = shadowsToCreate[0].getBoundingClientRect();\n    const shadow = shadowsToCreate[0].cloneNode(true) as HTMLElement;\n\n    shadow.style.position = `absolute`;\n    shadow.style.left = `-100%`;\n    shadow.style.top = `-100%`;\n    shadow.style.width = `${width}px`;\n    shadow.style.height = `${height}px`;\n    shadow.style.pointerEvents = 'none';\n    shadow.classList.add('drag-shadow');\n\n    document.body.appendChild(shadow);\n    e.dataTransfer.setDragImage(shadow, 0, 0);\n\n    return shadow;\n  }\n\n  /**\n   * If there's supposed to be multiple drag shadows, we will create a single container div to store them\n   * That container will be used as the drag shadow for the current drag event\n   */\n  const container = document.createElement('div');\n  container.style.position = 'absolute';\n  container.style.left = '-100%';\n  container.style.top = `-100%`;\n  container.style.width = '100%';\n  container.style.height = '100%';\n  container.style.pointerEvents = 'none';\n  container.classList.add('drag-shadow-container');\n\n  shadowsToCreate.forEach((dom) => {\n    const { width, height, top, left } = dom.getBoundingClientRect();\n    const shadow = dom.cloneNode(true) as HTMLElement;\n\n    shadow.style.position = `absolute`;\n    shadow.style.left = `${left}px`;\n    shadow.style.top = `${top}px`;\n    shadow.style.width = `${width}px`;\n    shadow.style.height = `${height}px`;\n    shadow.classList.add('drag-shadow');\n\n    container.appendChild(shadow);\n  });\n\n  document.body.appendChild(container);\n  e.dataTransfer.setDragImage(container, e.clientX, e.clientY);\n\n  return container;\n};\n","import { isChromium, isLinux } from '@craftjs/utils';\nimport isFunction from 'lodash/isFunction';\nimport React from 'react';\n\nimport { CoreEventHandlers, CreateHandlerOptions } from './CoreEventHandlers';\nimport { Positioner } from './Positioner';\nimport { createShadow } from './createShadow';\n\nimport { Indicator, NodeId, DragTarget, NodeTree } from '../interfaces';\n\nexport type DefaultEventHandlersOptions = {\n  isMultiSelectEnabled: (e: MouseEvent) => boolean;\n  removeHoverOnMouseleave: boolean;\n};\n\n/**\n * Specifies Editor-wide event handlers and connectors\n */\nexport class DefaultEventHandlers<O = {}> extends CoreEventHandlers<\n  DefaultEventHandlersOptions & O\n> {\n  /**\n   * Note: Multiple drag shadows (ie: via multiselect in v0.2 and higher) do not look good on Linux Chromium due to way it renders drag shadows in general,\n   * so will have to fallback to the single shadow approach above for the time being\n   * see: https://bugs.chromium.org/p/chromium/issues/detail?id=550999\n   */\n  static forceSingleDragShadow = isChromium() && isLinux();\n\n  draggedElementShadow: HTMLElement;\n  dragTarget: DragTarget;\n  positioner: Positioner | null = null;\n  currentSelectedElementIds = [];\n\n  onDisable() {\n    this.options.store.actions.clearEvents();\n  }\n\n  handlers() {\n    const store = this.options.store;\n\n    return {\n      connect: (el: HTMLElement, id: NodeId) => {\n        store.actions.setDOM(id, el);\n\n        return this.reflect((connectors) => {\n          connectors.select(el, id);\n          connectors.hover(el, id);\n          connectors.drop(el, id);\n        });\n      },\n      select: (el: HTMLElement, id: NodeId) => {\n        const unbindOnMouseDown = this.addCraftEventListener(\n          el,\n          'mousedown',\n          (e) => {\n            e.craft.stopPropagation();\n\n            let newSelectedElementIds = [];\n\n            if (id) {\n              const { query } = store;\n              const selectedElementIds = query.getEvent('selected').all();\n              const isMultiSelect = this.options.isMultiSelectEnabled(e);\n\n              /**\n               * Retain the previously select elements if the multi-select condition is enabled\n               * or if the currentNode is already selected\n               *\n               * so users can just click to drag the selected elements around without holding the multi-select key\n               */\n\n              if (isMultiSelect || selectedElementIds.includes(id)) {\n                newSelectedElementIds = selectedElementIds.filter(\n                  (selectedId) => {\n                    const descendants = query\n                      .node(selectedId)\n                      .descendants(true);\n                    const ancestors = query.node(selectedId).ancestors(true);\n\n                    // Deselect ancestors/descendants\n                    if (descendants.includes(id) || ancestors.includes(id)) {\n                      return false;\n                    }\n\n                    return true;\n                  }\n                );\n              }\n\n              if (!newSelectedElementIds.includes(id)) {\n                newSelectedElementIds.push(id);\n              }\n            }\n\n            store.actions.setNodeEvent('selected', newSelectedElementIds);\n          }\n        );\n\n        const unbindOnClick = this.addCraftEventListener(el, 'click', (e) => {\n          e.craft.stopPropagation();\n\n          const { query } = store;\n          const selectedElementIds = query.getEvent('selected').all();\n\n          const isMultiSelect = this.options.isMultiSelectEnabled(e);\n          const isNodeAlreadySelected = this.currentSelectedElementIds.includes(\n            id\n          );\n\n          let newSelectedElementIds = [...selectedElementIds];\n\n          if (isMultiSelect && isNodeAlreadySelected) {\n            newSelectedElementIds.splice(newSelectedElementIds.indexOf(id), 1);\n            store.actions.setNodeEvent('selected', newSelectedElementIds);\n          } else if (!isMultiSelect && selectedElementIds.length > 1) {\n            newSelectedElementIds = [id];\n            store.actions.setNodeEvent('selected', newSelectedElementIds);\n          }\n\n          this.currentSelectedElementIds = newSelectedElementIds;\n        });\n\n        return () => {\n          unbindOnMouseDown();\n          unbindOnClick();\n        };\n      },\n      hover: (el: HTMLElement, id: NodeId) => {\n        const unbindMouseover = this.addCraftEventListener(\n          el,\n          'mouseover',\n          (e) => {\n            e.craft.stopPropagation();\n            store.actions.setNodeEvent('hovered', id);\n          }\n        );\n\n        let unbindMouseleave: (() => void) | null = null;\n\n        if (this.options.removeHoverOnMouseleave) {\n          this.addCraftEventListener(el, 'mouseleave', (e) => {\n            e.craft.stopPropagation();\n            store.actions.setNodeEvent('hovered', null);\n          });\n        }\n\n        return () => {\n          unbindMouseover();\n\n          if (!unbindMouseleave) {\n            return;\n          }\n\n          unbindMouseleave();\n        };\n      },\n      drop: (el: HTMLElement, targetId: NodeId) => {\n        const unbindDragOver = this.addCraftEventListener(\n          el,\n          'dragover',\n          (e) => {\n            e.craft.stopPropagation();\n            e.preventDefault();\n\n            if (!this.positioner) {\n              return;\n            }\n\n            const indicator = this.positioner.computeIndicator(\n              targetId,\n              e.clientX,\n              e.clientY\n            );\n\n            if (!indicator) {\n              return;\n            }\n\n            store.actions.setIndicator(indicator);\n          }\n        );\n\n        const unbindDragEnter = this.addCraftEventListener(\n          el,\n          'dragenter',\n          (e) => {\n            e.craft.stopPropagation();\n            e.preventDefault();\n          }\n        );\n\n        return () => {\n          unbindDragEnter();\n          unbindDragOver();\n        };\n      },\n      drag: (el: HTMLElement, id: NodeId) => {\n        if (!store.query.node(id).isDraggable()) {\n          return () => {};\n        }\n\n        el.setAttribute('draggable', 'true');\n\n        const unbindDragStart = this.addCraftEventListener(\n          el,\n          'dragstart',\n          (e) => {\n            e.craft.stopPropagation();\n\n            const { query, actions } = store;\n\n            let selectedElementIds = query.getEvent('selected').all();\n\n            const isMultiSelect = this.options.isMultiSelectEnabled(e);\n            const isNodeAlreadySelected = this.currentSelectedElementIds.includes(\n              id\n            );\n\n            if (!isNodeAlreadySelected) {\n              if (isMultiSelect) {\n                selectedElementIds = [...selectedElementIds, id];\n              } else {\n                selectedElementIds = [id];\n              }\n              store.actions.setNodeEvent('selected', selectedElementIds);\n            }\n\n            actions.setNodeEvent('dragged', selectedElementIds);\n\n            const selectedDOMs = selectedElementIds.map(\n              (id) => query.node(id).get().dom\n            );\n\n            this.draggedElementShadow = createShadow(\n              e,\n              selectedDOMs,\n              DefaultEventHandlers.forceSingleDragShadow\n            );\n\n            this.dragTarget = {\n              type: 'existing',\n              nodes: selectedElementIds,\n            };\n\n            this.positioner = new Positioner(\n              this.options.store,\n              this.dragTarget\n            );\n          }\n        );\n\n        const unbindDragEnd = this.addCraftEventListener(el, 'dragend', (e) => {\n          e.craft.stopPropagation();\n\n          this.dropElement((dragTarget, indicator) => {\n            if (dragTarget.type === 'new') {\n              return;\n            }\n\n            const index =\n              indicator.placement.index +\n              (indicator.placement.where === 'after' ? 1 : 0);\n\n            store.actions.move(\n              dragTarget.nodes,\n              indicator.placement.parent.id,\n              index\n            );\n          });\n        });\n\n        return () => {\n          el.setAttribute('draggable', 'false');\n          unbindDragStart();\n          unbindDragEnd();\n        };\n      },\n      create: (\n        el: HTMLElement,\n        userElement: React.ReactElement | (() => NodeTree | React.ReactElement),\n        options?: Partial<CreateHandlerOptions>\n      ) => {\n        el.setAttribute('draggable', 'true');\n\n        const unbindDragStart = this.addCraftEventListener(\n          el,\n          'dragstart',\n          (e) => {\n            e.craft.stopPropagation();\n            let tree;\n            if (typeof userElement === 'function') {\n              const result = userElement();\n              if (React.isValidElement(result)) {\n                tree = store.query.parseReactElement(result).toNodeTree();\n              } else {\n                tree = result;\n              }\n            } else {\n              tree = store.query.parseReactElement(userElement).toNodeTree();\n            }\n\n            const dom = e.currentTarget as HTMLElement;\n            this.draggedElementShadow = createShadow(\n              e,\n              [dom],\n              DefaultEventHandlers.forceSingleDragShadow\n            );\n            this.dragTarget = {\n              type: 'new',\n              tree,\n            };\n\n            this.positioner = new Positioner(\n              this.options.store,\n              this.dragTarget\n            );\n          }\n        );\n\n        const unbindDragEnd = this.addCraftEventListener(el, 'dragend', (e) => {\n          e.craft.stopPropagation();\n          this.dropElement((dragTarget, indicator) => {\n            if (dragTarget.type === 'existing') {\n              return;\n            }\n\n            const index =\n              indicator.placement.index +\n              (indicator.placement.where === 'after' ? 1 : 0);\n            store.actions.addNodeTree(\n              dragTarget.tree,\n              indicator.placement.parent.id,\n              index\n            );\n\n            if (options && isFunction(options.onCreate)) {\n              options.onCreate(dragTarget.tree);\n            }\n          });\n        });\n\n        return () => {\n          el.removeAttribute('draggable');\n          unbindDragStart();\n          unbindDragEnd();\n        };\n      },\n    };\n  }\n\n  private dropElement(\n    onDropNode: (dragTarget: DragTarget, placement: Indicator) => void\n  ) {\n    const store = this.options.store;\n\n    if (!this.positioner) {\n      return;\n    }\n\n    const draggedElementShadow = this.draggedElementShadow;\n\n    const indicator = this.positioner.getIndicator();\n\n    if (this.dragTarget && indicator && !indicator.error) {\n      onDropNode(this.dragTarget, indicator);\n    }\n\n    if (draggedElementShadow) {\n      draggedElementShadow.parentNode.removeChild(draggedElementShadow);\n      this.draggedElementShadow = null;\n    }\n\n    this.dragTarget = null;\n\n    store.actions.setIndicator(null);\n    store.actions.setNodeEvent('dragged', null);\n    this.positioner.cleanup();\n\n    this.positioner = null;\n  }\n}\n","import { DropPosition, DOMInfo } from '../interfaces';\n\nexport default function movePlaceholder(\n  pos: DropPosition,\n  canvasDOMInfo: DOMInfo, // which canvas is cursor at\n  bestTargetDomInfo: DOMInfo | null, // closest element in canvas (null if canvas is empty)\n  thickness: number = 2\n) {\n  let t = 0,\n    l = 0,\n    w = 0,\n    h = 0,\n    where = pos.where;\n\n  const elDim = bestTargetDomInfo;\n\n  if (elDim) {\n    // If it's not in flow (like 'float' element)\n    if (!elDim.inFlow) {\n      w = thickness;\n      h = elDim.outerHeight;\n      t = elDim.top;\n      l = where === 'before' ? elDim.left : elDim.left + elDim.outerWidth;\n    } else {\n      w = elDim.outerWidth;\n      h = thickness;\n      t = where === 'before' ? elDim.top : elDim.bottom;\n      l = elDim.left;\n    }\n  } else {\n    if (canvasDOMInfo) {\n      t = canvasDOMInfo.top + canvasDOMInfo.padding.top;\n      l = canvasDOMInfo.left + canvasDOMInfo.padding.left;\n      w =\n        canvasDOMInfo.outerWidth -\n        canvasDOMInfo.padding.right -\n        canvasDOMInfo.padding.left -\n        canvasDOMInfo.margin.left -\n        canvasDOMInfo.margin.right;\n      h = thickness;\n    }\n  }\n  return {\n    top: `${t}px`,\n    left: `${l}px`,\n    width: `${w}px`,\n    height: `${h}px`,\n  };\n}\n","import { RenderIndicator, getDOMInfo } from '@craftjs/utils';\nimport React, { useEffect } from 'react';\n\nimport { useEventHandler } from './EventContext';\nimport movePlaceholder from './movePlaceholder';\n\nimport { useInternalEditor } from '../editor/useInternalEditor';\n\nexport const RenderEditorIndicator = () => {\n  const { indicator, indicatorOptions, enabled } = useInternalEditor(\n    (state) => ({\n      indicator: state.indicator,\n      indicatorOptions: state.options.indicator,\n      enabled: state.options.enabled,\n    })\n  );\n\n  const handler = useEventHandler();\n\n  useEffect(() => {\n    if (!handler) {\n      return;\n    }\n\n    if (!enabled) {\n      handler.disable();\n      return;\n    }\n\n    handler.enable();\n  }, [enabled, handler]);\n\n  if (!indicator) {\n    return null;\n  }\n\n  return React.createElement(RenderIndicator, {\n    className: indicatorOptions.className,\n    style: {\n      ...movePlaceholder(\n        indicator.placement,\n        getDOMInfo(indicator.placement.parent.dom),\n        indicator.placement.currentNode &&\n          getDOMInfo(indicator.placement.currentNode.dom),\n        indicatorOptions.thickness\n      ),\n      backgroundColor: indicator.error\n        ? indicatorOptions.error\n        : indicatorOptions.success,\n      transition: indicatorOptions.transition || '0.2s ease-in',\n      ...(indicatorOptions.style ?? {}),\n    },\n    parentDom: indicator.placement.parent.dom,\n  });\n};\n","import React, { useContext, useMemo } from 'react';\n\nimport { EventHandlerContext } from './EventContext';\nimport { RenderEditorIndicator } from './RenderEditorIndicator';\n\nimport { EditorContext } from '../editor/EditorContext';\n\ntype EventsProps = {\n  children?: React.ReactNode;\n};\n\nexport const Events = ({ children }: EventsProps) => {\n  const store = useContext(EditorContext);\n\n  const handler = useMemo(() => store.query.getOptions().handlers(store), [\n    store,\n  ]);\n\n  if (!handler) {\n    return null;\n  }\n\n  return (\n    <EventHandlerContext.Provider value={handler}>\n      <RenderEditorIndicator />\n      {children}\n    </EventHandlerContext.Provider>\n  );\n};\n","import {\n  useMethods,\n  SubscriberAndCallbacksFor,\n  PatchListener,\n} from '@craftjs/utils';\n\nimport { ActionMethods } from './actions';\nimport { QueryMethods } from './query';\n\nimport { DefaultEventHandlers } from '../events';\nimport { EditorState, Options, NodeEventTypes, NodeId } from '../interfaces';\n\nexport const editorInitialState: EditorState = {\n  nodes: {},\n  events: {\n    dragged: new Set<NodeId>(),\n    selected: new Set<NodeId>(),\n    hovered: new Set<NodeId>(),\n  },\n  indicator: null,\n  options: {\n    onNodesChange: () => null,\n    onRender: ({ render }) => render,\n    onBeforeMoveEnd: () => null,\n    resolver: {},\n    enabled: true,\n    indicator: {\n      error: 'red',\n      success: 'rgb(98, 196, 98)',\n    },\n    handlers: (store) =>\n      new DefaultEventHandlers({\n        store,\n        removeHoverOnMouseleave: false,\n        isMultiSelectEnabled: (e: MouseEvent) => !!e.metaKey,\n      }),\n    normalizeNodes: () => {},\n  },\n};\n\nexport const ActionMethodsWithConfig = {\n  methods: ActionMethods,\n  ignoreHistoryForActions: [\n    'setDOM',\n    'setNodeEvent',\n    'selectNode',\n    'clearEvents',\n    'setOptions',\n    'setIndicator',\n  ] as const,\n  normalizeHistory: (state: EditorState) => {\n    /**\n     * On every undo/redo, we remove events pointing to deleted Nodes\n     */\n    Object.keys(state.events).forEach((eventName: NodeEventTypes) => {\n      const nodeIds = Array.from(state.events[eventName] || []);\n\n      nodeIds.forEach((id) => {\n        if (!state.nodes[id]) {\n          state.events[eventName].delete(id);\n        }\n      });\n    });\n\n    // Remove any invalid node[nodeId].events\n    // TODO(prev): it's really cumbersome to have to ensure state.events and state.nodes[nodeId].events are in sync\n    // Find a way to make it so that once state.events is set, state.nodes[nodeId] automatically reflects that (maybe using proxies?)\n    Object.keys(state.nodes).forEach((id) => {\n      const node = state.nodes[id];\n\n      Object.keys(node.events).forEach((eventName: NodeEventTypes) => {\n        const isEventActive = !!node.events[eventName];\n\n        if (\n          isEventActive &&\n          state.events[eventName] &&\n          !state.events[eventName].has(node.id)\n        ) {\n          node.events[eventName] = false;\n        }\n      });\n    });\n  },\n};\n\nexport type EditorStore = SubscriberAndCallbacksFor<\n  typeof ActionMethodsWithConfig,\n  typeof QueryMethods\n>;\n\nexport const useEditorStore = (\n  options: Partial<Options>,\n  patchListener: PatchListener<\n    EditorState,\n    typeof ActionMethodsWithConfig,\n    typeof QueryMethods\n  >\n): EditorStore => {\n  // TODO: fix type\n  return useMethods(\n    ActionMethodsWithConfig,\n    {\n      ...editorInitialState,\n      options: {\n        ...editorInitialState.options,\n        ...options,\n      },\n    },\n    QueryMethods,\n    patchListener\n  ) as EditorStore;\n};\n","import {\n  deprecationWarning,\n  ERROR_INVALID_NODEID,\n  ROOT_NODE,\n  DEPRECATED_ROOT_NODE,\n  QueryCallbacksFor,\n  ERROR_NOPARENT,\n  ERROR_DELETE_TOP_LEVEL_NODE,\n  CallbacksFor,\n  Delete,\n  ERROR_NOT_IN_RESOLVER,\n} from '@craftjs/utils';\nimport invariant from 'tiny-invariant';\n\nimport { QueryMethods } from './query';\n\nimport {\n  EditorState,\n  Indicator,\n  NodeId,\n  Node,\n  Nodes,\n  Options,\n  NodeEventTypes,\n  NodeTree,\n  SerializedNodes,\n  NodeSelector,\n  NodeSelectorType,\n} from '../interfaces';\nimport { fromEntries } from '../utils/fromEntries';\nimport { getNodesFromSelector } from '../utils/getNodesFromSelector';\nimport { removeNodeFromEvents } from '../utils/removeNodeFromEvents';\n\nconst Methods = (\n  state: EditorState,\n  query: QueryCallbacksFor<typeof QueryMethods>\n) => {\n  /** Helper functions */\n  const addNodeTreeToParent = (\n    tree: NodeTree,\n    parentId?: NodeId,\n    addNodeType?:\n      | {\n          type: 'child';\n          index: number;\n        }\n      | {\n          type: 'linked';\n          id: string;\n        }\n  ) => {\n    const iterateChildren = (id: NodeId, parentId?: NodeId) => {\n      const node = tree.nodes[id];\n\n      if (typeof node.data.type !== 'string') {\n        invariant(\n          state.options.resolver[node.data.name],\n          ERROR_NOT_IN_RESOLVER.replace(\n            '%node_type%',\n            `${(node.data.type as any).name}`\n          )\n        );\n      }\n\n      state.nodes[id] = {\n        ...node,\n        data: {\n          ...node.data,\n          parent: parentId,\n        },\n      };\n\n      if (node.data.nodes.length > 0) {\n        delete state.nodes[id].data.props.children;\n        node.data.nodes.forEach((childNodeId) =>\n          iterateChildren(childNodeId, node.id)\n        );\n      }\n\n      Object.values(node.data.linkedNodes).forEach((linkedNodeId) =>\n        iterateChildren(linkedNodeId, node.id)\n      );\n    };\n\n    iterateChildren(tree.rootNodeId, parentId);\n\n    if (!parentId && tree.rootNodeId === ROOT_NODE) {\n      return;\n    }\n\n    const parent = getParentAndValidate(parentId);\n\n    if (addNodeType.type === 'child') {\n      const index = addNodeType.index;\n\n      if (index != null) {\n        parent.data.nodes.splice(index, 0, tree.rootNodeId);\n      } else {\n        parent.data.nodes.push(tree.rootNodeId);\n      }\n\n      return;\n    }\n\n    parent.data.linkedNodes[addNodeType.id] = tree.rootNodeId;\n  };\n\n  const getParentAndValidate = (parentId: NodeId): Node => {\n    invariant(parentId, ERROR_NOPARENT);\n    const parent = state.nodes[parentId];\n    invariant(parent, ERROR_INVALID_NODEID);\n    return parent;\n  };\n\n  const deleteNode = (id: NodeId) => {\n    const targetNode = state.nodes[id],\n      parentNode = state.nodes[targetNode.data.parent];\n\n    if (targetNode.data.nodes) {\n      // we deep clone here because otherwise immer will mutate the node\n      // object as we remove nodes\n      [...targetNode.data.nodes].forEach((childId) => deleteNode(childId));\n    }\n\n    if (targetNode.data.linkedNodes) {\n      Object.values(targetNode.data.linkedNodes).map((linkedNodeId) =>\n        deleteNode(linkedNodeId)\n      );\n    }\n\n    const isChildNode = parentNode.data.nodes.includes(id);\n\n    if (isChildNode) {\n      const parentChildren = parentNode.data.nodes;\n      parentChildren.splice(parentChildren.indexOf(id), 1);\n    } else {\n      const linkedId = Object.keys(parentNode.data.linkedNodes).find(\n        (id) => parentNode.data.linkedNodes[id] === id\n      );\n      if (linkedId) {\n        delete parentNode.data.linkedNodes[linkedId];\n      }\n    }\n\n    removeNodeFromEvents(state, id);\n    delete state.nodes[id];\n  };\n\n  return {\n    /**\n     * @private\n     * Add a new linked Node to the editor.\n     * Only used internally by the <Element /> component\n     *\n     * @param tree\n     * @param parentId\n     * @param id\n     */\n    addLinkedNodeFromTree(tree: NodeTree, parentId: NodeId, id: string) {\n      const parent = getParentAndValidate(parentId);\n\n      const existingLinkedNode = parent.data.linkedNodes[id];\n\n      if (existingLinkedNode) {\n        deleteNode(existingLinkedNode);\n      }\n\n      addNodeTreeToParent(tree, parentId, { type: 'linked', id });\n    },\n\n    /**\n     * Add a new Node to the editor.\n     *\n     * @param nodeToAdd\n     * @param parentId\n     * @param index\n     */\n    add(nodeToAdd: Node | Node[], parentId?: NodeId, index?: number) {\n      // TODO: Deprecate adding array of Nodes to keep implementation simpler\n      let nodes = [nodeToAdd];\n      if (Array.isArray(nodeToAdd)) {\n        deprecationWarning('actions.add(node: Node[])', {\n          suggest: 'actions.add(node: Node)',\n        });\n        nodes = nodeToAdd;\n      }\n      nodes.forEach((node: Node) => {\n        addNodeTreeToParent(\n          {\n            nodes: {\n              [node.id]: node,\n            },\n            rootNodeId: node.id,\n          },\n          parentId,\n          { type: 'child', index }\n        );\n      });\n    },\n\n    /**\n     * Add a NodeTree to the editor\n     *\n     * @param tree\n     * @param parentId\n     * @param index\n     */\n    addNodeTree(tree: NodeTree, parentId?: NodeId, index?: number) {\n      addNodeTreeToParent(tree, parentId, { type: 'child', index });\n    },\n\n    /**\n     * Delete a Node\n     * @param id\n     */\n    delete(selector: NodeSelector<NodeSelectorType.Id>) {\n      const targets = getNodesFromSelector(state.nodes, selector, {\n        existOnly: true,\n        idOnly: true,\n      });\n\n      targets.forEach(({ node }) => {\n        invariant(\n          !query.node(node.id).isTopLevelNode(),\n          ERROR_DELETE_TOP_LEVEL_NODE\n        );\n        deleteNode(node.id);\n      });\n    },\n\n    deserialize(input: SerializedNodes | string) {\n      const dehydratedNodes =\n        typeof input == 'string' ? JSON.parse(input) : input;\n\n      const nodePairs = Object.keys(dehydratedNodes).map((id) => {\n        let nodeId = id;\n\n        if (id === DEPRECATED_ROOT_NODE) {\n          nodeId = ROOT_NODE;\n        }\n\n        return [\n          nodeId,\n          query\n            .parseSerializedNode(dehydratedNodes[id])\n            .toNode((node) => (node.id = nodeId)),\n        ];\n      });\n\n      this.replaceNodes(fromEntries(nodePairs));\n    },\n\n    /**\n     * Move a target Node to a new Parent at a given index\n     * @param targetId\n     * @param newParentId\n     * @param index\n     */\n    move(selector: NodeSelector, newParentId: NodeId, index: number) {\n      const targets = getNodesFromSelector(state.nodes, selector, {\n        existOnly: true,\n      });\n\n      const newParent = state.nodes[newParentId];\n\n      const nodesArrToCleanup = new Set<string[]>();\n\n      targets.forEach(({ node: targetNode }, i) => {\n        const targetId = targetNode.id;\n        const currentParentId = targetNode.data.parent;\n\n        query.node(newParentId).isDroppable([targetId], (err) => {\n          throw new Error(err);\n        });\n\n        // modify node props\n        state.options.onBeforeMoveEnd(\n          targetNode,\n          newParent,\n          state.nodes[currentParentId]\n        );\n\n        const currentParent = state.nodes[currentParentId];\n        const currentParentNodes = currentParent.data.nodes;\n\n        nodesArrToCleanup.add(currentParentNodes);\n\n        const oldIndex = currentParentNodes.indexOf(targetId);\n        currentParentNodes[oldIndex] = '$$'; // mark for deletion\n\n        newParent.data.nodes.splice(index + i, 0, targetId);\n\n        state.nodes[targetId].data.parent = newParentId;\n      });\n\n      nodesArrToCleanup.forEach((nodes) => {\n        const length = nodes.length;\n\n        [...nodes].reverse().forEach((value, index) => {\n          if (value !== '$$') {\n            return;\n          }\n\n          nodes.splice(length - 1 - index, 1);\n        });\n      });\n    },\n\n    replaceNodes(nodes: Nodes) {\n      this.clearEvents();\n      state.nodes = nodes;\n    },\n\n    clearEvents() {\n      this.setNodeEvent('selected', null);\n      this.setNodeEvent('hovered', null);\n      this.setNodeEvent('dragged', null);\n      this.setIndicator(null);\n    },\n\n    /**\n     * Resets all the editor state.\n     */\n    reset() {\n      this.clearEvents();\n      this.replaceNodes({});\n    },\n\n    /**\n     * Set editor options via a callback function\n     *\n     * @param cb: function used to set the options.\n     */\n    setOptions(cb: (options: Partial<Options>) => void) {\n      cb(state.options);\n    },\n\n    setNodeEvent(\n      eventType: NodeEventTypes,\n      nodeIdSelector: NodeSelector<NodeSelectorType.Id>\n    ) {\n      state.events[eventType].forEach((id) => {\n        if (state.nodes[id]) {\n          state.nodes[id].events[eventType] = false;\n        }\n      });\n\n      state.events[eventType] = new Set();\n\n      if (!nodeIdSelector) {\n        return;\n      }\n\n      const targets = getNodesFromSelector(state.nodes, nodeIdSelector, {\n        idOnly: true,\n        existOnly: true,\n      });\n\n      const nodeIds: Set<NodeId> = new Set(targets.map(({ node }) => node.id));\n      nodeIds.forEach((id) => {\n        state.nodes[id].events[eventType] = true;\n      });\n      state.events[eventType] = nodeIds;\n    },\n\n    /**\n     * Set custom values to a Node\n     * @param id\n     * @param cb\n     */\n    setCustom<T extends NodeId>(\n      selector: NodeSelector<NodeSelectorType.Id>,\n      cb: (data: EditorState['nodes'][T]['data']['custom']) => void\n    ) {\n      const targets = getNodesFromSelector(state.nodes, selector, {\n        idOnly: true,\n        existOnly: true,\n      });\n\n      targets.forEach(({ node }) => cb(state.nodes[node.id].data.custom));\n    },\n\n    /**\n     * Given a `id`, it will set the `dom` porperty of that node.\n     *\n     * @param id of the node we want to set\n     * @param dom\n     */\n    setDOM(id: NodeId, dom: HTMLElement) {\n      if (!state.nodes[id]) {\n        return;\n      }\n\n      state.nodes[id].dom = dom;\n    },\n\n    setIndicator(indicator: Indicator | null) {\n      if (\n        indicator &&\n        (!indicator.placement.parent.dom ||\n          (indicator.placement.currentNode &&\n            !indicator.placement.currentNode.dom))\n      )\n        return;\n      state.indicator = indicator;\n    },\n\n    /**\n     * Hide a Node\n     * @param id\n     * @param bool\n     */\n    setHidden(id: NodeId, bool: boolean) {\n      state.nodes[id].data.hidden = bool;\n    },\n\n    /**\n     * Update the props of a Node\n     * @param id\n     * @param cb\n     */\n    setProp(\n      selector: NodeSelector<NodeSelectorType.Id>,\n      cb: (props: any) => void\n    ) {\n      const targets = getNodesFromSelector(state.nodes, selector, {\n        idOnly: true,\n        existOnly: true,\n      });\n\n      targets.forEach(({ node }) => cb(state.nodes[node.id].data.props));\n    },\n\n    selectNode(nodeIdSelector?: NodeSelector<NodeSelectorType.Id>) {\n      if (nodeIdSelector) {\n        const targets = getNodesFromSelector(state.nodes, nodeIdSelector, {\n          idOnly: true,\n          existOnly: true,\n        });\n\n        this.setNodeEvent(\n          'selected',\n          targets.map(({ node }) => node.id)\n        );\n      } else {\n        this.setNodeEvent('selected', null);\n      }\n\n      this.setNodeEvent('hovered', null);\n    },\n  };\n};\n\nexport const ActionMethods = (\n  state: EditorState,\n  query: QueryCallbacksFor<typeof QueryMethods>\n) => {\n  return {\n    ...Methods(state, query),\n    // Note: Beware: advanced method! You most likely don't need to use this\n    // TODO: fix parameter types and cleanup the method\n    setState(\n      cb: (\n        state: EditorState,\n        actions: Delete<CallbacksFor<typeof Methods>, 'history'>\n      ) => void\n    ) {\n      const { history, ...actions } = this;\n\n      // We pass the other actions as the second parameter, so that devs could still make use of the predefined actions\n      cb(state, actions);\n    },\n  };\n};\n","import { EditorState, NodeId } from '../interfaces';\n\nexport const removeNodeFromEvents = (state: EditorState, nodeId: NodeId) =>\n  Object.keys(state.events).forEach((key) => {\n    const eventSet = state.events[key];\n    if (eventSet && eventSet.has && eventSet.has(nodeId)) {\n      state.events[key] = new Set(\n        Array.from(eventSet).filter((id) => nodeId !== id)\n      );\n    }\n  });\n","import { ERROR_RESOLVER_NOT_AN_OBJECT, HISTORY_ACTIONS } from '@craftjs/utils';\nimport React, { useEffect, useRef } from 'react';\nimport invariant from 'tiny-invariant';\n\nimport { EditorContext } from './EditorContext';\nimport { useEditorStore } from './store';\n\nimport { Events } from '../events';\nimport { Options } from '../interfaces';\n\ntype EditorProps = Partial<Options> & {\n  children?: React.ReactNode;\n};\n\n/**\n * A React Component that provides the Editor context\n */\nexport const Editor = ({ children, ...options }: EditorProps) => {\n  // we do not want to warn the user if no resolver was supplied\n  if (options.resolver !== undefined) {\n    invariant(\n      typeof options.resolver === 'object' &&\n        !Array.isArray(options.resolver) &&\n        options.resolver !== null,\n      ERROR_RESOLVER_NOT_AN_OBJECT\n    );\n  }\n\n  const optionsRef = useRef(options);\n\n  const context = useEditorStore(\n    optionsRef.current,\n    (state, previousState, actionPerformedWithPatches, query, normalizer) => {\n      if (!actionPerformedWithPatches) {\n        return;\n      }\n\n      const { patches, ...actionPerformed } = actionPerformedWithPatches;\n\n      for (let i = 0; i < patches.length; i++) {\n        const { path } = patches[i];\n        const isModifyingNodeData =\n          path.length > 2 && path[0] === 'nodes' && path[2] === 'data';\n\n        let actionType = actionPerformed.type;\n\n        if (\n          [HISTORY_ACTIONS.IGNORE, HISTORY_ACTIONS.THROTTLE].includes(\n            actionType\n          ) &&\n          actionPerformed.params\n        ) {\n          actionPerformed.type = actionPerformed.params[0];\n        }\n\n        if (\n          ['setState', 'deserialize'].includes(actionPerformed.type) ||\n          isModifyingNodeData\n        ) {\n          normalizer((draft) => {\n            if (state.options.normalizeNodes) {\n              state.options.normalizeNodes(\n                draft,\n                previousState,\n                actionPerformed,\n                query\n              );\n            }\n          });\n          break; // we exit the loop as soon as we find a change in node.data\n        }\n      }\n    }\n  );\n\n  // sync enabled prop with editor store options\n  useEffect(() => {\n    if (!context) {\n      return;\n    }\n\n    if (\n      options.enabled === undefined ||\n      context.query.getOptions().enabled === options.enabled\n    ) {\n      return;\n    }\n\n    context.actions.setOptions((editorOptions) => {\n      editorOptions.enabled = options.enabled;\n    });\n  }, [context, options.enabled]);\n\n  useEffect(() => {\n    context.subscribe(\n      (_) => ({\n        json: context.query.serialize(),\n      }),\n      () => {\n        context.query.getOptions().onNodesChange(context.query);\n      }\n    );\n  }, [context]);\n\n  if (!context) {\n    return null;\n  }\n\n  return (\n    <EditorContext.Provider value={context}>\n      <Events>{children}</Events>\n    </EditorContext.Provider>\n  );\n};\n","import cloneDeep from 'lodash/cloneDeep';\n\nimport { createNode } from './createNode';\n\nimport { editorInitialState } from '../editor/store';\nimport { Nodes } from '../interfaces';\n\nconst getTestNode = (parentNode) => {\n  const {\n    events,\n    data: { nodes: childNodes, linkedNodes },\n    ...restParentNode\n  } = parentNode;\n  const validParentNode = createNode(cloneDeep(parentNode));\n  parentNode = {\n    ...validParentNode,\n    ...restParentNode,\n    events: {\n      ...validParentNode.events,\n      ...events,\n    },\n    dom: parentNode.dom || validParentNode.dom,\n  };\n\n  return {\n    node: parentNode,\n    childNodes,\n    linkedNodes,\n  };\n};\n\nexport const expectEditorState = (lhs, rhs) => {\n  const { nodes: nodesRhs, ...restRhs } = rhs;\n  const { nodes: nodesLhs, ...restLhs } = lhs;\n  expect(restLhs).toEqual(restRhs);\n\n  const nodesRhsSimplified = Object.keys(nodesRhs).reduce((accum, id) => {\n    const { _hydrationTimestamp, rules, ...node } = nodesRhs[id];\n    accum[id] = node;\n    return accum;\n  }, {});\n\n  const nodesLhsSimplified = Object.keys(nodesLhs).reduce((accum, id) => {\n    const { _hydrationTimestamp, rules, ...node } = nodesLhs[id];\n    accum[id] = node;\n    return accum;\n  }, {});\n\n  expect(nodesLhsSimplified).toEqual(nodesRhsSimplified);\n};\n\nexport const createTestNodes = (rootNode): Nodes => {\n  const nodes = {};\n  const iterateNodes = (testNode) => {\n    const { node: parentNode, childNodes, linkedNodes } = getTestNode(testNode);\n    nodes[parentNode.id] = parentNode;\n\n    if (childNodes) {\n      childNodes.forEach((childTestNode, i) => {\n        const {\n          node: childNode,\n          childNodes: grandChildNodes,\n          linkedNodes: grandChildLinkedNodes,\n        } = getTestNode(childTestNode);\n        childNode.data.parent = parentNode.id;\n        nodes[childNode.id] = childNode;\n        parentNode.data.nodes[i] = childNode.id;\n        iterateNodes({\n          ...childNode,\n          data: {\n            ...childNode.data,\n            nodes: grandChildNodes || [],\n            linkedNodes: grandChildLinkedNodes || {},\n          },\n        });\n      });\n    }\n\n    if (linkedNodes) {\n      Object.keys(linkedNodes).forEach((linkedId) => {\n        const {\n          node: childNode,\n          childNodes: grandChildNodes,\n          linkedNodes: grandChildLinkedNodes,\n        } = getTestNode(linkedNodes[linkedId]);\n        parentNode.data.linkedNodes[linkedId] = childNode.id;\n\n        childNode.data.parent = parentNode.id;\n        nodes[childNode.id] = childNode;\n        iterateNodes({\n          ...childNode,\n          data: {\n            ...childNode.data,\n            nodes: grandChildNodes || [],\n            linkedNodes: grandChildLinkedNodes || {},\n          },\n        });\n      });\n    }\n  };\n\n  iterateNodes(rootNode);\n\n  return nodes;\n};\n\nexport const createTestState = (state = {} as any) => {\n  const { nodes: rootNode, events } = state;\n\n  return {\n    ...editorInitialState,\n    ...state,\n    nodes: rootNode ? createTestNodes(rootNode) : {},\n    events: {\n      ...editorInitialState.events,\n      ...(events || {}),\n    },\n  };\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}