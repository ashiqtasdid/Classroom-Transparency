{"ast":null,"code":"var _jsxFileName = \"/Users/saira/Documents/School/src/components/Chatroom.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Chatroom.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Chatroom = ({\n  user\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [image, setImage] = useState(null);\n  const [previewImage, setPreviewImage] = useState(null);\n  const [editingMessageId, setEditingMessageId] = useState(null);\n  const [editInput, setEditInput] = useState('');\n  useEffect(() => {\n    // Load messages from backend\n    fetch('http://localhost:3001/messages').then(response => response.json()).then(data => setMessages(data.messages));\n\n    // Add 'visible' class after component mounts\n    setTimeout(() => {\n      document.querySelector('.chatroom').classList.add('visible');\n    }, 100);\n  }, []);\n  const handleSendMessage = () => {\n    if (input.trim() !== '' || image) {\n      const formData = new FormData();\n      formData.append('text', input);\n      formData.append('user', user.name);\n      formData.append('userId', user.id);\n      formData.append('timestamp', new Date().toISOString());\n      if (image) {\n        formData.append('image', image);\n      }\n      fetch('http://localhost:3001/messages', {\n        method: 'POST',\n        body: formData\n      }).then(response => response.json()).then(data => {\n        setMessages([...messages, {\n          id: data.id,\n          text: input,\n          user: user.name,\n          userId: user.id,\n          timestamp: new Date().toISOString(),\n          imagePath: data.imagePath\n        }]);\n        setInput('');\n        setImage(null);\n        setPreviewImage(null);\n      }).catch(error => {\n        console.error('Error:', error);\n      });\n    }\n  };\n  const handleDeleteMessage = messageId => {\n    if (user.admin || messages.find(msg => msg.id === messageId).userId === user.id) {\n      fetch(`http://localhost:3001/messages/${messageId}`, {\n        method: 'DELETE'\n      }).then(response => response.json()).then(data => {\n        if (data.deleted) {\n          setMessages(messages.filter(message => message.id !== messageId));\n        } else {\n          alert('Failed to delete the message.');\n        }\n      });\n    } else {\n      alert('You do not have permission to delete this message.');\n    }\n  };\n  const handleEditMessage = (messageId, newText) => {\n    const now = new Date();\n    const message = messages.find(msg => msg.id === messageId);\n    const messageTime = new Date(message.timestamp);\n    const timeDiff = (now - messageTime) / (1000 * 60); // time difference in minutes\n\n    if (timeDiff <= 5) {\n      setMessages(messages.map(msg => msg.id === messageId ? {\n        ...msg,\n        text: newText\n      } : msg));\n      setEditingMessageId(null);\n    } else {\n      alert('You can only edit messages up to 5 minutes old.');\n    }\n  };\n  const handleImageUpload = event => {\n    const file = event.target.files[0];\n    setImage(file);\n    setPreviewImage(URL.createObjectURL(file));\n  };\n  const startEditing = (messageId, text) => {\n    setEditingMessageId(messageId);\n    setEditInput(text);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatroom\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Grade-IX Chat Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatroom-messages\",\n      children: messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatroom-welcome\",\n        children: \"Send a message to get started\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this) : messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatroom-message\",\n        children: editingMessageId === message.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatroom-edit-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: editInput,\n            onChange: e => setEditInput(e.target.value),\n            className: \"chatroom-edit-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleEditMessage(message.id, editInput),\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setEditingMessageId(null),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"chatroom-username\",\n              children: message.user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 21\n            }, this), \": \", message.text]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 19\n          }, this), message.imagePath && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `http://localhost:3001/${message.imagePath}`,\n            alt: \"Uploaded\",\n            className: \"chatroom-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 21\n          }, this), (user.admin || message.userId === user.id) && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chatroom-message-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"chatroom-message-actions-button\",\n              children: \"\\u22EE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chatroom-message-actions-dropdown\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => startEditing(message.id, message.text),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDeleteMessage(message.id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true)\n      }, message.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), previewImage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatroom-preview-image\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: previewImage,\n        alt: \"Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setImage(null);\n          setPreviewImage(null);\n        },\n        children: \"\\u274C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatroom-input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleImageUpload,\n        id: \"imageUpload\",\n        style: {\n          display: 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"imageUpload\",\n        className: \"chatroom-button\",\n        children: \"\\uD83D\\uDCCE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"chatroom-button\",\n        children: \"\\uD83D\\uDE00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"chatroom-button\",\n        children: \"\\uD83C\\uDF9E\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"chatroom-button\",\n        children: \"\\uD83C\\uDFF7\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        className: \"chatroom-input\",\n        placeholder: \"Type a message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        className: \"chatroom-send-button\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatroom, \"2yk7faIEFvWT5o7YYpglfPQZtgw=\");\n_c = Chatroom;\nexport default Chatroom;\nvar _c;\n$RefreshReg$(_c, \"Chatroom\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Chatroom","user","_s","messages","setMessages","input","setInput","image","setImage","previewImage","setPreviewImage","editingMessageId","setEditingMessageId","editInput","setEditInput","fetch","then","response","json","data","setTimeout","document","querySelector","classList","add","handleSendMessage","trim","formData","FormData","append","name","id","Date","toISOString","method","body","text","userId","timestamp","imagePath","catch","error","console","handleDeleteMessage","messageId","admin","find","msg","deleted","filter","message","alert","handleEditMessage","newText","now","messageTime","timeDiff","map","handleImageUpload","event","file","target","files","URL","createObjectURL","startEditing","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","type","value","onChange","e","onClick","src","alt","style","display","htmlFor","placeholder","_c","$RefreshReg$"],"sources":["/Users/saira/Documents/School/src/components/Chatroom.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Chatroom.css';\n\nconst Chatroom = ({ user }) => {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [image, setImage] = useState(null);\n  const [previewImage, setPreviewImage] = useState(null);\n  const [editingMessageId, setEditingMessageId] = useState(null);\n  const [editInput, setEditInput] = useState('');\n\n  useEffect(() => {\n    // Load messages from backend\n    fetch('http://localhost:3001/messages')\n      .then((response) => response.json())\n      .then((data) => setMessages(data.messages));\n\n    // Add 'visible' class after component mounts\n    setTimeout(() => {\n      document.querySelector('.chatroom').classList.add('visible');\n    }, 100);\n  }, []);\n\n  const handleSendMessage = () => {\n    if (input.trim() !== '' || image) {\n      const formData = new FormData();\n      formData.append('text', input);\n      formData.append('user', user.name);\n      formData.append('userId', user.id);\n      formData.append('timestamp', new Date().toISOString());\n      if (image) {\n        formData.append('image', image);\n      }\n\n      fetch('http://localhost:3001/messages', {\n        method: 'POST',\n        body: formData,\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          setMessages([\n            ...messages,\n            {\n              id: data.id,\n              text: input,\n              user: user.name,\n              userId: user.id,\n              timestamp: new Date().toISOString(),\n              imagePath: data.imagePath,\n            },\n          ]);\n          setInput('');\n          setImage(null);\n          setPreviewImage(null);\n        })\n        .catch((error) => {\n          console.error('Error:', error);\n        });\n    }\n  };\n\n  const handleDeleteMessage = (messageId) => {\n    if (user.admin || messages.find((msg) => msg.id === messageId).userId === user.id) {\n      fetch(`http://localhost:3001/messages/${messageId}`, {\n        method: 'DELETE',\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          if (data.deleted) {\n            setMessages(messages.filter((message) => message.id !== messageId));\n          } else {\n            alert('Failed to delete the message.');\n          }\n        });\n    } else {\n      alert('You do not have permission to delete this message.');\n    }\n  };\n\n  const handleEditMessage = (messageId, newText) => {\n    const now = new Date();\n    const message = messages.find((msg) => msg.id === messageId);\n    const messageTime = new Date(message.timestamp);\n    const timeDiff = (now - messageTime) / (1000 * 60); // time difference in minutes\n\n    if (timeDiff <= 5) {\n      setMessages(\n        messages.map((msg) =>\n          msg.id === messageId ? { ...msg, text: newText } : msg\n        )\n      );\n      setEditingMessageId(null);\n    } else {\n      alert('You can only edit messages up to 5 minutes old.');\n    }\n  };\n\n  const handleImageUpload = (event) => {\n    const file = event.target.files[0];\n    setImage(file);\n    setPreviewImage(URL.createObjectURL(file));\n  };\n\n  const startEditing = (messageId, text) => {\n    setEditingMessageId(messageId);\n    setEditInput(text);\n  };\n\n  return (\n    <div className=\"chatroom\">\n      <h2>Grade-IX Chat Room</h2>\n      <div className=\"chatroom-messages\">\n        {messages.length === 0 ? (\n          <div className=\"chatroom-welcome\">Send a message to get started</div>\n        ) : (\n          messages.map((message) => (\n            <div key={message.id} className=\"chatroom-message\">\n              {editingMessageId === message.id ? (\n                <div className=\"chatroom-edit-container\">\n                  <input\n                    type=\"text\"\n                    value={editInput}\n                    onChange={(e) => setEditInput(e.target.value)}\n                    className=\"chatroom-edit-input\"\n                  />\n                  <button onClick={() => handleEditMessage(message.id, editInput)}>Save</button>\n                  <button onClick={() => setEditingMessageId(null)}>Cancel</button>\n                </div>\n              ) : (\n                <>\n                  <span>\n                    <span className=\"chatroom-username\">{message.user}</span>: {message.text}\n                  </span>\n                  {message.imagePath && (\n                    <img \n                      src={`http://localhost:3001/${message.imagePath}`} \n                      alt=\"Uploaded\" \n                      className=\"chatroom-image\" \n                    />\n                  )}\n                  {(user.admin || message.userId === user.id) && (\n                    <div className=\"chatroom-message-actions\">\n                      <button className=\"chatroom-message-actions-button\">⋮</button>\n                      <div className=\"chatroom-message-actions-dropdown\">\n                        <button onClick={() => startEditing(message.id, message.text)}>Edit</button>\n                        <button onClick={() => handleDeleteMessage(message.id)}>Delete</button>\n                      </div>\n                    </div>\n                  )}\n                </>\n              )}\n            </div>\n          ))\n        )}\n      </div>\n      {previewImage && (\n        <div className=\"chatroom-preview-image\">\n          <img src={previewImage} alt=\"Preview\" />\n          <button onClick={() => {setImage(null); setPreviewImage(null);}}>❌</button>\n        </div>\n      )}\n      <div className=\"chatroom-input-container\">\n        <input\n          type=\"file\"\n          onChange={handleImageUpload}\n          id=\"imageUpload\"\n          style={{ display: 'none' }}\n        />\n        <label htmlFor=\"imageUpload\" className=\"chatroom-button\">📎</label>\n        <button className=\"chatroom-button\">😀</button>\n        <button className=\"chatroom-button\">🎞️</button>\n        <button className=\"chatroom-button\">🏷️</button>\n        <input\n          type=\"text\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          className=\"chatroom-input\"\n          placeholder=\"Type a message...\"\n        />\n        <button onClick={handleSendMessage} className=\"chatroom-send-button\">Send</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Chatroom;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}