{"ast":null,"code":"var _jsxFileName = \"/Users/saira/Documents/School/src/components/Gallery.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport './Gallery.css'; // Import the CSS file\nimport image1 from '../assets/images/image1.jpg';\nimport image2 from '../assets/images/image2.jpg';\nimport image3 from '../assets/images/image3.jpg';\nimport image4 from '../assets/images/image4.jpg';\nimport image5 from '../assets/images/image5.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Gallery = () => {\n  _s();\n  const images = [image1, image2, image3, image4, image5];\n  const observer = useRef();\n  useEffect(() => {\n    observer.current = new IntersectionObserver((entries, observer) => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          console.log(`Image ${entry.target.alt} is visible`); // Debugging line\n          entry.target.classList.add('visible');\n        } else {\n          entry.target.classList.remove('visible');\n        }\n      });\n    }, {\n      threshold: 0.5\n    });\n    const elements = document.querySelectorAll('.picture-slot');\n    elements.forEach(element => observer.current.observe(element));\n    return () => {\n      if (observer.current) {\n        observer.current.disconnect();\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gallery\",\n    children: images.map((image, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `picture-slot animation-${index % 4}`,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image,\n        alt: `Picture ${index + 1}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(Gallery, \"mvUvGhiqkPzCYiMPAW/Py9ym/ZY=\");\n_c = Gallery;\nexport default Gallery;\nvar _c;\n$RefreshReg$(_c, \"Gallery\");","map":{"version":3,"names":["React","useEffect","useRef","image1","image2","image3","image4","image5","jsxDEV","_jsxDEV","Gallery","_s","images","observer","current","IntersectionObserver","entries","forEach","entry","isIntersecting","console","log","target","alt","classList","add","remove","threshold","elements","document","querySelectorAll","element","observe","disconnect","className","children","map","image","index","src","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/saira/Documents/School/src/components/Gallery.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport './Gallery.css'; // Import the CSS file\nimport image1 from '../assets/images/image1.jpg';\nimport image2 from '../assets/images/image2.jpg';\nimport image3 from '../assets/images/image3.jpg';\nimport image4 from '../assets/images/image4.jpg';\nimport image5 from '../assets/images/image5.jpg';\n\nconst Gallery = () => {\n    const images = [image1, image2, image3, image4, image5];\n    const observer = useRef();\n\n    useEffect(() => {\n        observer.current = new IntersectionObserver((entries, observer) => {\n            entries.forEach(entry => {\n                if (entry.isIntersecting) {\n                    console.log(`Image ${entry.target.alt} is visible`); // Debugging line\n                    entry.target.classList.add('visible');\n                } else {\n                    entry.target.classList.remove('visible');\n                }\n            });\n        }, { threshold: 0.5 });\n\n        const elements = document.querySelectorAll('.picture-slot');\n        elements.forEach(element => observer.current.observe(element));\n\n        return () => {\n            if (observer.current) {\n                observer.current.disconnect();\n            }\n        };\n    }, []);\n\n    return (\n        <div className=\"gallery\">\n            {images.map((image, index) => (\n                <div className={`picture-slot animation-${index % 4}`} key={index}>\n                    <img src={image} alt={`Picture ${index + 1}`} />\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default Gallery;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAO,eAAe,CAAC,CAAC;AACxB,OAAOC,MAAM,MAAM,6BAA6B;AAChD,OAAOC,MAAM,MAAM,6BAA6B;AAChD,OAAOC,MAAM,MAAM,6BAA6B;AAChD,OAAOC,MAAM,MAAM,6BAA6B;AAChD,OAAOC,MAAM,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAMC,MAAM,GAAG,CAACT,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,MAAM,CAAC;EACvD,MAAMM,QAAQ,GAAGX,MAAM,CAAC,CAAC;EAEzBD,SAAS,CAAC,MAAM;IACZY,QAAQ,CAACC,OAAO,GAAG,IAAIC,oBAAoB,CAAC,CAACC,OAAO,EAAEH,QAAQ,KAAK;MAC/DG,OAAO,CAACC,OAAO,CAACC,KAAK,IAAI;QACrB,IAAIA,KAAK,CAACC,cAAc,EAAE;UACtBC,OAAO,CAACC,GAAG,CAAC,SAASH,KAAK,CAACI,MAAM,CAACC,GAAG,aAAa,CAAC,CAAC,CAAC;UACrDL,KAAK,CAACI,MAAM,CAACE,SAAS,CAACC,GAAG,CAAC,SAAS,CAAC;QACzC,CAAC,MAAM;UACHP,KAAK,CAACI,MAAM,CAACE,SAAS,CAACE,MAAM,CAAC,SAAS,CAAC;QAC5C;MACJ,CAAC,CAAC;IACN,CAAC,EAAE;MAAEC,SAAS,EAAE;IAAI,CAAC,CAAC;IAEtB,MAAMC,QAAQ,GAAGC,QAAQ,CAACC,gBAAgB,CAAC,eAAe,CAAC;IAC3DF,QAAQ,CAACX,OAAO,CAACc,OAAO,IAAIlB,QAAQ,CAACC,OAAO,CAACkB,OAAO,CAACD,OAAO,CAAC,CAAC;IAE9D,OAAO,MAAM;MACT,IAAIlB,QAAQ,CAACC,OAAO,EAAE;QAClBD,QAAQ,CAACC,OAAO,CAACmB,UAAU,CAAC,CAAC;MACjC;IACJ,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIxB,OAAA;IAAKyB,SAAS,EAAC,SAAS;IAAAC,QAAA,EACnBvB,MAAM,CAACwB,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACrB7B,OAAA;MAAKyB,SAAS,EAAE,0BAA0BI,KAAK,GAAG,CAAC,EAAG;MAAAH,QAAA,eAClD1B,OAAA;QAAK8B,GAAG,EAAEF,KAAM;QAACd,GAAG,EAAE,WAAWe,KAAK,GAAG,CAAC;MAAG;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC,GADQL,KAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE5D,CACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAAChC,EAAA,CAnCID,OAAO;AAAAkC,EAAA,GAAPlC,OAAO;AAqCb,eAAeA,OAAO;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}