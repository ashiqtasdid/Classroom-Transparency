{"ast":null,"code":"var _jsxFileName = \"/Users/saira/Documents/School/src/components/Chatroom.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './Chatroom.css';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:3001'); // Adjust this to your server URL\n\nconst Chatroom = ({\n  user\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [image, setImage] = useState(null);\n  const [previewImage, setPreviewImage] = useState(null);\n  const [editingMessageId, setEditingMessageId] = useState(null);\n  const [editInput, setEditInput] = useState('');\n  const [activeDropdown, setActiveDropdown] = useState(null);\n  const [newMessages, setNewMessages] = useState(0);\n  const [isAtBottom, setIsAtBottom] = useState(true);\n  const dropdownRef = useRef(null);\n  const messagesEndRef = useRef(null);\n  const chatContainerRef = useRef(null);\n  useEffect(() => {\n    fetch('http://localhost:3001/messages').then(response => response.json()).then(data => setMessages(data.messages));\n    setTimeout(() => {\n      document.querySelector('.chatroom').classList.add('visible');\n    }, 100);\n    const handleClickOutside = event => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setActiveDropdown(null);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n  useEffect(() => {\n    const checkIfAtBottom = () => {\n      if (chatContainerRef.current) {\n        const {\n          scrollTop,\n          scrollHeight,\n          clientHeight\n        } = chatContainerRef.current;\n        const atBottom = Math.abs(scrollHeight - scrollTop - clientHeight) < 1;\n        setIsAtBottom(atBottom);\n        return atBottom;\n      }\n      return false;\n    };\n    if (isAtBottom) {\n      scrollToBottom();\n    } else {\n      setNewMessages(prev => prev + 1);\n    }\n  }, [messages]);\n  useEffect(() => {\n    if (isAtBottom) {\n      scrollToBottom();\n    }\n  }, [messages, isAtBottom]);\n  useEffect(() => {\n    // Listen for incoming messages\n    socket.on('message', message => {\n      setMessages(prevMessages => [...prevMessages, message]);\n    });\n\n    // Listen for deleted messages\n    socket.on('deleteMessage', messageId => {\n      setMessages(prevMessages => prevMessages.filter(message => message.id !== messageId));\n    });\n\n    // Listen for edited messages\n    socket.on('editMessage', editedMessage => {\n      setMessages(prevMessages => prevMessages.map(message => message.id === editedMessage.id ? {\n        ...message,\n        ...editedMessage\n      } : message));\n    });\n\n    // Clean up on component unmount\n    return () => {\n      socket.off('message');\n      socket.off('deleteMessage');\n      socket.off('editMessage');\n    };\n  }, []);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n    setNewMessages(0);\n  };\n  const handleNewMessagesClick = () => {\n    scrollToBottom();\n  };\n  const handleSendMessage = () => {\n    if (input.trim() !== '' || image) {\n      const formData = new FormData();\n      formData.append('text', input);\n      formData.append('user', user.name);\n      formData.append('userId', user.id);\n      formData.append('timestamp', new Date().toISOString());\n      if (image) {\n        formData.append('image', image);\n      }\n      fetch('http://localhost:3001/messages', {\n        method: 'POST',\n        body: formData\n      }).then(response => response.json()).then(data => {\n        const newMessage = {\n          id: data.id,\n          text: input,\n          user: user.name,\n          userId: user.id,\n          timestamp: new Date().toISOString(),\n          imagePath: data.imagePath\n        };\n        setMessages(prevMessages => [...prevMessages, newMessage]);\n        socket.emit('sendMessage', newMessage); // Emit the message to the server\n        setInput('');\n        setImage(null);\n        setPreviewImage(null);\n      }).catch(error => {\n        console.error('Error:', error);\n      });\n    }\n  };\n  const handleDeleteMessage = messageId => {\n    if (user.admin || messages.find(msg => msg.id === messageId).userId === user.id) {\n      fetch(`http://localhost:3001/messages/${messageId}`, {\n        method: 'DELETE'\n      }).then(response => response.json()).then(data => {\n        if (data.deleted) {\n          setMessages(messages.filter(message => message.id !== messageId));\n          socket.emit('deleteMessage', messageId); // Emit the delete event to the server\n        } else {\n          alert('Failed to delete the message.');\n        }\n      });\n    } else {\n      alert('You do not have permission to delete this message.');\n    }\n  };\n  const handleEditMessage = (messageId, newText) => {\n    const now = new Date();\n    const message = messages.find(msg => msg.id === messageId);\n    const messageTime = new Date(message.timestamp);\n    const timeDiff = (now - messageTime) / (1000 * 60);\n    if (timeDiff <= 5) {\n      const editedMessage = {\n        ...message,\n        text: newText\n      };\n      setMessages(messages.map(msg => msg.id === messageId ? editedMessage : msg));\n      socket.emit('editMessage', editedMessage); // Emit the edit event to the server\n      setEditingMessageId(null);\n    } else {\n      alert('You can only edit messages up to 5 minutes old.');\n    }\n  };\n  const handleImageUpload = event => {\n    const file = event.target.files[0];\n    setImage(file);\n    setPreviewImage(URL.createObjectURL(file));\n  };\n  const startEditing = (messageId, text) => {\n    setEditingMessageId(messageId);\n    setEditInput(text);\n  };\n  const toggleDropdown = (messageId, event) => {\n    event.stopPropagation(); // Prevent event from bubbling up\n    if (activeDropdown === messageId) {\n      setActiveDropdown(null);\n    } else {\n      setActiveDropdown(messageId);\n      setTimeout(() => {\n        const dropdown = dropdownRef.current;\n        if (dropdown) {\n          const rect = dropdown.getBoundingClientRect();\n          const spaceBelow = window.innerHeight - rect.bottom;\n          if (spaceBelow < 0) {\n            dropdown.style.bottom = '100%';\n            dropdown.style.top = 'auto';\n          } else {\n            dropdown.style.top = '100%';\n            dropdown.style.bottom = 'auto';\n          }\n        }\n      }, 0);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatroom\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Grade-IX Chat Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatroom-messages\",\n      ref: chatContainerRef,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `chatroom-new-messages ${newMessages > 0 && !isAtBottom ? 'visible' : ''}`,\n        onClick: handleNewMessagesClick,\n        children: [newMessages, \" New Messages Below\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatroom-welcome\",\n        children: \"Send a message to get started\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }, this) : messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatroom-message\",\n        children: editingMessageId === message.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatroom-edit-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: editInput,\n            onChange: e => setEditInput(e.target.value),\n            className: \"chatroom-edit-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleEditMessage(message.id, editInput),\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setEditingMessageId(null),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatroom-message-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chatroom-message-text\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"chatroom-username\",\n              children: message.user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 19\n            }, this), \": \", message.text, message.imagePath && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `http://localhost:3001/${message.imagePath}`,\n              alt: \"Uploaded\",\n              className: \"chatroom-image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 17\n          }, this), (user.admin || message.userId === user.id) && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chatroom-message-actions\",\n            ref: dropdownRef,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"chatroom-message-actions-button\",\n              onClick: e => toggleDropdown(message.id, e),\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 21\n            }, this), activeDropdown === message.id && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chatroom-message-actions-dropdown\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => startEditing(message.id, message.text),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDeleteMessage(message.id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 15\n        }, this)\n      }, message.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), previewImage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatroom-preview-image\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: previewImage,\n        alt: \"Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setImage(null);\n          setPreviewImage(null);\n        },\n        children: \"\\u274C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatroom-input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleImageUpload,\n        id: \"imageUpload\",\n        style: {\n          display: 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"imageUpload\",\n        className: \"chatroom-button\",\n        children: \"\\uD83D\\uDCCE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"chatroom-button\",\n        children: \"\\uD83D\\uDE00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"chatroom-button\",\n        children: \"\\uD83C\\uDF9E\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"chatroom-button\",\n        children: \"\\uD83C\\uDFF7\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        className: \"chatroom-input\",\n        placeholder: \"Type a message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        className: \"chatroom-send-button\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatroom, \"0bkDRrzO3bUDrC0ESSt/ZVt7QQw=\");\n_c = Chatroom;\nexport default Chatroom;\nvar _c;\n$RefreshReg$(_c, \"Chatroom\");","map":{"version":3,"names":["React","useState","useEffect","useRef","io","jsxDEV","_jsxDEV","socket","Chatroom","user","_s","messages","setMessages","input","setInput","image","setImage","previewImage","setPreviewImage","editingMessageId","setEditingMessageId","editInput","setEditInput","activeDropdown","setActiveDropdown","newMessages","setNewMessages","isAtBottom","setIsAtBottom","dropdownRef","messagesEndRef","chatContainerRef","fetch","then","response","json","data","setTimeout","document","querySelector","classList","add","handleClickOutside","event","current","contains","target","addEventListener","removeEventListener","checkIfAtBottom","scrollTop","scrollHeight","clientHeight","atBottom","Math","abs","scrollToBottom","prev","on","message","prevMessages","messageId","filter","id","editedMessage","map","off","_messagesEndRef$curre","scrollIntoView","behavior","handleNewMessagesClick","handleSendMessage","trim","formData","FormData","append","name","Date","toISOString","method","body","newMessage","text","userId","timestamp","imagePath","emit","catch","error","console","handleDeleteMessage","admin","find","msg","deleted","alert","handleEditMessage","newText","now","messageTime","timeDiff","handleImageUpload","file","files","URL","createObjectURL","startEditing","toggleDropdown","stopPropagation","dropdown","rect","getBoundingClientRect","spaceBelow","window","innerHeight","bottom","style","top","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","onClick","length","type","value","onChange","e","src","alt","display","htmlFor","placeholder","_c","$RefreshReg$"],"sources":["/Users/saira/Documents/School/src/components/Chatroom.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './Chatroom.css';\nimport io from 'socket.io-client';\n\nconst socket = io('http://localhost:3001'); // Adjust this to your server URL\n\nconst Chatroom = ({ user }) => {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [image, setImage] = useState(null);\n  const [previewImage, setPreviewImage] = useState(null);\n  const [editingMessageId, setEditingMessageId] = useState(null);\n  const [editInput, setEditInput] = useState('');\n  const [activeDropdown, setActiveDropdown] = useState(null);\n  const [newMessages, setNewMessages] = useState(0);\n  const [isAtBottom, setIsAtBottom] = useState(true);\n  const dropdownRef = useRef(null);\n  const messagesEndRef = useRef(null);\n  const chatContainerRef = useRef(null);\n\n  useEffect(() => {\n    fetch('http://localhost:3001/messages')\n      .then((response) => response.json())\n      .then((data) => setMessages(data.messages));\n\n    setTimeout(() => {\n      document.querySelector('.chatroom').classList.add('visible');\n    }, 100);\n\n    const handleClickOutside = (event) => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setActiveDropdown(null);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n\n  useEffect(() => {\n    const checkIfAtBottom = () => {\n      if (chatContainerRef.current) {\n        const { scrollTop, scrollHeight, clientHeight } = chatContainerRef.current;\n        const atBottom = Math.abs(scrollHeight - scrollTop - clientHeight) < 1;\n        setIsAtBottom(atBottom);\n        return atBottom;\n      }\n      return false;\n    };\n  \n    if (isAtBottom) {\n      scrollToBottom();\n    } else {\n      setNewMessages(prev => prev + 1);\n    }\n  }, [messages]);\n\n  useEffect(() => {\n    if (isAtBottom) {\n      scrollToBottom();\n    }\n  }, [messages, isAtBottom]);\n\n  useEffect(() => {\n    // Listen for incoming messages\n    socket.on('message', (message) => {\n      setMessages((prevMessages) => [...prevMessages, message]);\n    });\n\n    // Listen for deleted messages\n    socket.on('deleteMessage', (messageId) => {\n      setMessages((prevMessages) => \n        prevMessages.filter((message) => message.id !== messageId)\n      );\n    });\n\n    // Listen for edited messages\n    socket.on('editMessage', (editedMessage) => {\n      setMessages((prevMessages) =>\n        prevMessages.map((message) =>\n          message.id === editedMessage.id ? { ...message, ...editedMessage } : message\n        )\n      );\n    });\n\n    // Clean up on component unmount\n    return () => {\n      socket.off('message');\n      socket.off('deleteMessage');\n      socket.off('editMessage');\n    };\n  }, []);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n    setNewMessages(0);\n  }\n\n  const handleNewMessagesClick = () => {\n    scrollToBottom();\n  }\n\n  const handleSendMessage = () => {\n    if (input.trim() !== '' || image) {\n      const formData = new FormData();\n      formData.append('text', input);\n      formData.append('user', user.name);\n      formData.append('userId', user.id);\n      formData.append('timestamp', new Date().toISOString());\n      if (image) {\n        formData.append('image', image);\n      }\n\n      fetch('http://localhost:3001/messages', {\n        method: 'POST',\n        body: formData,\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          const newMessage = {\n            id: data.id,\n            text: input,\n            user: user.name,\n            userId: user.id,\n            timestamp: new Date().toISOString(),\n            imagePath: data.imagePath,\n          };\n          setMessages((prevMessages) => [...prevMessages, newMessage]);\n          socket.emit('sendMessage', newMessage); // Emit the message to the server\n          setInput('');\n          setImage(null);\n          setPreviewImage(null);\n        })\n        .catch((error) => {\n          console.error('Error:', error);\n        });\n    }\n  };\n\n  const handleDeleteMessage = (messageId) => {\n    if (user.admin || messages.find((msg) => msg.id === messageId).userId === user.id) {\n      fetch(`http://localhost:3001/messages/${messageId}`, {\n        method: 'DELETE',\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          if (data.deleted) {\n            setMessages(messages.filter((message) => message.id !== messageId));\n            socket.emit('deleteMessage', messageId); // Emit the delete event to the server\n          } else {\n            alert('Failed to delete the message.');\n          }\n        });\n    } else {\n      alert('You do not have permission to delete this message.');\n    }\n  };\n\n  const handleEditMessage = (messageId, newText) => {\n    const now = new Date();\n    const message = messages.find((msg) => msg.id === messageId);\n    const messageTime = new Date(message.timestamp);\n    const timeDiff = (now - messageTime) / (1000 * 60);\n\n    if (timeDiff <= 5) {\n      const editedMessage = { ...message, text: newText };\n      setMessages(\n        messages.map((msg) =>\n          msg.id === messageId ? editedMessage : msg\n        )\n      );\n      socket.emit('editMessage', editedMessage); // Emit the edit event to the server\n      setEditingMessageId(null);\n    } else {\n      alert('You can only edit messages up to 5 minutes old.');\n    }\n  };\n\n  const handleImageUpload = (event) => {\n    const file = event.target.files[0];\n    setImage(file);\n    setPreviewImage(URL.createObjectURL(file));\n  };\n\n  const startEditing = (messageId, text) => {\n    setEditingMessageId(messageId);\n    setEditInput(text);\n  };\n\n  const toggleDropdown = (messageId, event) => {\n    event.stopPropagation(); // Prevent event from bubbling up\n    if (activeDropdown === messageId) {\n      setActiveDropdown(null);\n    } else {\n      setActiveDropdown(messageId);\n      setTimeout(() => {\n        const dropdown = dropdownRef.current;\n        if (dropdown) {\n          const rect = dropdown.getBoundingClientRect();\n          const spaceBelow = window.innerHeight - rect.bottom;\n          if (spaceBelow < 0) {\n            dropdown.style.bottom = '100%';\n            dropdown.style.top = 'auto';\n          } else {\n            dropdown.style.top = '100%';\n            dropdown.style.bottom = 'auto';\n          }\n        }\n      }, 0);\n    }\n  };\n\n  return (\n    <div className=\"chatroom\">\n      <h2>Grade-IX Chat Room</h2>\n      <div className=\"chatroom-messages\" ref={chatContainerRef}>\n        <div className={`chatroom-new-messages ${newMessages > 0 && !isAtBottom ? 'visible' : ''}`} onClick={handleNewMessagesClick}>\n          {newMessages} New Messages Below\n        </div>\n        {messages.length === 0 ? (\n          <div className=\"chatroom-welcome\">Send a message to get started</div>\n        ) : (\n          messages.map((message) => (\n            <div key={message            .id} className=\"chatroom-message\">\n            {editingMessageId === message.id ? (\n              <div className=\"chatroom-edit-container\">\n                <input\n                  type=\"text\"\n                  value={editInput}\n                  onChange={(e) => setEditInput(e.target.value)}\n                  className=\"chatroom-edit-input\"\n                />\n                <button onClick={() => handleEditMessage(message.id, editInput)}>Save</button>\n                <button onClick={() => setEditingMessageId(null)}>Cancel</button>\n              </div>\n            ) : (\n              <div className=\"chatroom-message-content\">\n                <div className=\"chatroom-message-text\">\n                  <span className=\"chatroom-username\">{message.user}</span>: {message.text}\n                  {message.imagePath && (\n                    <img \n                      src={`http://localhost:3001/${message.imagePath}`} \n                      alt=\"Uploaded\" \n                      className=\"chatroom-image\" \n                    />\n                  )}\n                </div>\n                {(user.admin || message.userId === user.id) && (\n                  <div className=\"chatroom-message-actions\" ref={dropdownRef}>\n                    <button \n                      className=\"chatroom-message-actions-button\"\n                      onClick={(e) => toggleDropdown(message.id, e)}\n                    >\n                      <span></span>\n                      <span></span>\n                      <span></span>\n                    </button>\n                    {activeDropdown === message.id && (\n                      <div className=\"chatroom-message-actions-dropdown\">\n                        <button onClick={() => startEditing(message.id, message.text)}>Edit</button>\n                        <button onClick={() => handleDeleteMessage(message.id)}>Delete</button>\n                      </div>\n                    )}\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n        ))\n      )}\n      <div ref={messagesEndRef} />\n    </div>\n    {previewImage && (\n      <div className=\"chatroom-preview-image\">\n        <img src={previewImage} alt=\"Preview\" />\n        <button onClick={() => {setImage(null); setPreviewImage(null);}}>❌</button>\n      </div>\n    )}\n    <div className=\"chatroom-input-container\">\n      <input\n        type=\"file\"\n        onChange={handleImageUpload}\n        id=\"imageUpload\"\n        style={{ display: 'none' }}\n      />\n      <label htmlFor=\"imageUpload\" className=\"chatroom-button\">📎</label>\n      <button className=\"chatroom-button\">😀</button>\n      <button className=\"chatroom-button\">🎞️</button>\n      <button className=\"chatroom-button\">🏷️</button>\n      <input\n        type=\"text\"\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n        className=\"chatroom-input\"\n        placeholder=\"Type a message...\"\n      />\n      <button onClick={handleSendMessage} className=\"chatroom-send-button\">Send</button>\n    </div>\n  </div>\n);\n};\n\nexport default Chatroom;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}