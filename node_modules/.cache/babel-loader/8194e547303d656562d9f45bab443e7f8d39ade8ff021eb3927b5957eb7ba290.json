{"ast":null,"code":"var _jsxFileName = \"/home/sadatsahib/Projects/School/src/components/Screen.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport './Screen.css'; // You'll need to create this CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Screen = () => {\n  _s();\n  const [name, setName] = useState('CODEPEN');\n  const screenRef = useRef(null);\n  const nameRef = useRef(null);\n  useEffect(() => {\n    const letters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    let interval = null;\n    const handleMouseEnter = () => {\n      let iteration = 0;\n      clearInterval(interval);\n      interval = setInterval(() => {\n        setName(prev => prev.split('').map((letter, index) => {\n          if (index < iteration) {\n            return nameRef.current.dataset.value[index];\n          }\n          return letters[Math.floor(Math.random() * 26)];\n        }).join(''));\n        if (iteration >= nameRef.current.dataset.value.length) {\n          clearInterval(interval);\n        }\n        iteration += 1 / 3;\n      }, 30);\n    };\n    const screenElement = screenRef.current;\n    screenElement.addEventListener('mouseenter', handleMouseEnter);\n    return () => {\n      screenElement.removeEventListener('mouseenter', handleMouseEnter);\n      clearInterval(interval);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"screen\",\n    ref: screenRef,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"screen-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"screen-overlay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"screen-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"screen-icon fa-brands fa-codepen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"screen-user\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"name\",\n          ref: nameRef,\n          \"data-value\": \"CODEPEN\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"link\",\n          href: \"https://youtube.com/@Hyperplexed\",\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"@Hyperplexed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(Screen, \"ERrMG6z2HXcA+NqpED5uXLnfsFM=\");\n_c = Screen;\nexport default Screen;\nvar _c;\n$RefreshReg$(_c, \"Screen\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","Screen","_s","name","setName","screenRef","nameRef","letters","interval","handleMouseEnter","iteration","clearInterval","setInterval","prev","split","map","letter","index","current","dataset","value","Math","floor","random","join","length","screenElement","addEventListener","removeEventListener","className","ref","children","fileName","_jsxFileName","lineNumber","columnNumber","href","target","rel","_c","$RefreshReg$"],"sources":["/home/sadatsahib/Projects/School/src/components/Screen.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport './Screen.css'; // You'll need to create this CSS file\n\nconst Screen = () => {\n  const [name, setName] = useState('CODEPEN');\n  const screenRef = useRef(null);\n  const nameRef = useRef(null);\n\n  useEffect(() => {\n    const letters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    let interval = null;\n\n    const handleMouseEnter = () => {\n      let iteration = 0;\n\n      clearInterval(interval);\n\n      interval = setInterval(() => {\n        setName(prev => \n          prev.split('')\n            .map((letter, index) => {\n              if(index < iteration) {\n                return nameRef.current.dataset.value[index];\n              }\n              return letters[Math.floor(Math.random() * 26)];\n            })\n            .join('')\n        );\n\n        if(iteration >= nameRef.current.dataset.value.length){ \n          clearInterval(interval);\n        }\n\n        iteration += 1 / 3;\n      }, 30);\n    };\n\n    const screenElement = screenRef.current;\n    screenElement.addEventListener('mouseenter', handleMouseEnter);\n\n    return () => {\n      screenElement.removeEventListener('mouseenter', handleMouseEnter);\n      clearInterval(interval);\n    };\n  }, []);\n\n  return (\n    <div className=\"screen\" ref={screenRef}>\n      <div className=\"screen-image\"></div>\n      <div className=\"screen-overlay\"></div>\n      <div className=\"screen-content\">\n        <i className=\"screen-icon fa-brands fa-codepen\"></i>\n        <div className=\"screen-user\">\n          <span className=\"name\" ref={nameRef} data-value=\"CODEPEN\">{name}</span>\n          <a className=\"link\" href=\"https://youtube.com/@Hyperplexed\" target=\"_blank\" rel=\"noopener noreferrer\">@Hyperplexed</a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Screen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}