{"ast":null,"code":"var _jsxFileName = \"/Users/saira/Documents/School/src/components/Chatroom.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Chatroom.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatroom = ({\n  user\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [image, setImage] = useState(null);\n  useEffect(() => {\n    // Load messages from backend\n    fetch('http://localhost:3001/messages').then(response => response.json()).then(data => setMessages(data.messages));\n  }, []);\n  const handleSendMessage = () => {\n    if (input.trim() !== '' || image) {\n      const formData = new FormData();\n      formData.append('text', input);\n      formData.append('user', user.name);\n      formData.append('userId', user.id);\n      formData.append('timestamp', new Date().toISOString());\n      if (image) {\n        formData.append('image', image);\n      }\n      fetch('http://localhost:3001/messages', {\n        method: 'POST',\n        body: formData\n      }).then(response => response.json()).then(data => {\n        setMessages([...messages, {\n          id: data.id,\n          text: input,\n          user: user.name,\n          userId: user.id,\n          timestamp: new Date().toISOString(),\n          imagePath: image ? URL.createObjectURL(image) : null\n        }]);\n        setInput('');\n        setImage(null);\n      }).catch(error => {\n        console.error('Error:', error);\n      });\n    }\n  };\n  const handleDeleteMessage = messageId => {\n    if (user.admin || messages.find(msg => msg.id === messageId).userId === user.id) {\n      fetch(`http://localhost:3001/messages/${messageId}`, {\n        method: 'DELETE'\n      }).then(response => response.json()).then(data => {\n        if (data.deleted) {\n          setMessages(messages.filter(message => message.id !== messageId));\n        } else {\n          alert('Failed to delete the message.');\n        }\n      });\n    } else {\n      alert('You do not have permission to delete this message.');\n    }\n  };\n  const handleEditMessage = (messageId, newText) => {\n    const now = new Date();\n    const message = messages.find(msg => msg.id === messageId);\n    const messageTime = new Date(message.timestamp);\n    const timeDiff = (now - messageTime) / (1000 * 60); // time difference in minutes\n\n    if (timeDiff <= 5) {\n      setMessages(messages.map(msg => msg.id === messageId ? {\n        ...msg,\n        text: newText\n      } : msg));\n    } else {\n      alert('You can only edit messages up to 5 minutes old.');\n    }\n  };\n  const handleImageUpload = event => {\n    setImage(event.target.files[0]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatroom\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Grade-IX Chat Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatroom-messages\",\n      children: messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatroom-welcome\",\n        children: \"Send a message to get started\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this) : messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatroom-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [message.user, \": \", message.text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this), message.imagePath && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `http://localhost:3001/${message.imagePath}`,\n          alt: \"Uploaded\",\n          className: \"chatroom-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 37\n        }, this), (user.admin || message.userId === user.id) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatroom-message-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteMessage(message.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const newText = prompt('Edit your message:', message.text);\n              if (newText !== null) {\n                handleEditMessage(message.id, newText);\n              }\n            },\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }, this)]\n      }, message.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatroom-input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleImageUpload,\n        id: \"imageUpload\",\n        style: {\n          display: 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"imageUpload\",\n        className: \"chatroom-upload-icon\",\n        children: \"\\uD83D\\uDCF7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        className: \"chatroom-input\",\n        placeholder: \"Type a message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        className: \"chatroom-send-button\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatroom, \"nvpGzt3wvqAGljkv6Vbl47LneyU=\");\n_c = Chatroom;\nexport default Chatroom;\nvar _c;\n$RefreshReg$(_c, \"Chatroom\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Chatroom","user","_s","messages","setMessages","input","setInput","image","setImage","fetch","then","response","json","data","handleSendMessage","trim","formData","FormData","append","name","id","Date","toISOString","method","body","text","userId","timestamp","imagePath","URL","createObjectURL","catch","error","console","handleDeleteMessage","messageId","admin","find","msg","deleted","filter","message","alert","handleEditMessage","newText","now","messageTime","timeDiff","map","handleImageUpload","event","target","files","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","src","alt","onClick","prompt","type","onChange","style","display","htmlFor","value","e","placeholder","_c","$RefreshReg$"],"sources":["/Users/saira/Documents/School/src/components/Chatroom.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Chatroom.css';\n\nconst Chatroom = ({ user }) => {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [image, setImage] = useState(null);\n\n  useEffect(() => {\n    // Load messages from backend\n    fetch('http://localhost:3001/messages')\n      .then((response) => response.json())\n      .then((data) => setMessages(data.messages));\n  }, []);\n\n  const handleSendMessage = () => {\n    if (input.trim() !== '' || image) {\n      const formData = new FormData();\n      formData.append('text', input);\n      formData.append('user', user.name);\n      formData.append('userId', user.id);\n      formData.append('timestamp', new Date().toISOString());\n      if (image) {\n        formData.append('image', image);\n      }\n\n      fetch('http://localhost:3001/messages', {\n        method: 'POST',\n        body: formData,\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          setMessages([\n            ...messages,\n            {\n              id: data.id,\n              text: input,\n              user: user.name,\n              userId: user.id,\n              timestamp: new Date().toISOString(),\n              imagePath: image ? URL.createObjectURL(image) : null,\n            },\n          ]);\n          setInput('');\n          setImage(null);\n        })\n        .catch((error) => {\n          console.error('Error:', error);\n        });\n    }\n  };\n\n  const handleDeleteMessage = (messageId) => {\n    if (user.admin || messages.find((msg) => msg.id === messageId).userId === user.id) {\n      fetch(`http://localhost:3001/messages/${messageId}`, {\n        method: 'DELETE',\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          if (data.deleted) {\n            setMessages(messages.filter((message) => message.id !== messageId));\n          } else {\n            alert('Failed to delete the message.');\n          }\n        });\n    } else {\n      alert('You do not have permission to delete this message.');\n    }\n  };\n\n  const handleEditMessage = (messageId, newText) => {\n    const now = new Date();\n    const message = messages.find((msg) => msg.id === messageId);\n    const messageTime = new Date(message.timestamp);\n    const timeDiff = (now - messageTime) / (1000 * 60); // time difference in minutes\n\n    if (timeDiff <= 5) {\n      setMessages(\n        messages.map((msg) =>\n          msg.id === messageId ? { ...msg, text: newText } : msg\n        )\n      );\n    } else {\n      alert('You can only edit messages up to 5 minutes old.');\n    }\n  };\n\n  const handleImageUpload = (event) => {\n    setImage(event.target.files[0]);\n  };\n\n  return (\n    <div className=\"chatroom\">\n      <h2>Grade-IX Chat Room</h2>\n      <div className=\"chatroom-messages\">\n        {messages.length === 0 ? (\n          <div className=\"chatroom-welcome\">Send a message to get started</div>\n        ) : (\n          messages.map((message) => (\n            <div key={message.id} className=\"chatroom-message\">\n              <span>{message.user}: {message.text}</span>\n              {message.imagePath && <img src={`http://localhost:3001/${message.imagePath}`} alt=\"Uploaded\" className=\"chatroom-image\" />}\n              {(user.admin || message.userId === user.id) && (\n                <div className=\"chatroom-message-actions\">\n                  <button onClick={() => handleDeleteMessage(message.id)}>Delete</button>\n                  <button onClick={() => {\n                    const newText = prompt('Edit your message:', message.text);\n                    if (newText !== null) {\n                      handleEditMessage(message.id, newText);\n                    }\n                  }}>Edit</button>\n                </div>\n              )}\n            </div>\n          ))\n        )}\n      </div>\n      <div className=\"chatroom-input-container\">\n        <input\n          type=\"file\"\n          onChange={handleImageUpload}\n          id=\"imageUpload\"\n          style={{ display: 'none' }}\n        />\n        <label htmlFor=\"imageUpload\" className=\"chatroom-upload-icon\">📷</label>\n        <input\n          type=\"text\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          className=\"chatroom-input\"\n          placeholder=\"Type a message...\"\n        />\n        <button onClick={handleSendMessage} className=\"chatroom-send-button\">Send</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Chatroom;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}