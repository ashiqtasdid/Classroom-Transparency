{"ast":null,"code":"var _jsxFileName = \"/Users/saira/Documents/School/src/components/editor/Image.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useNode } from '@craftjs/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Image = ({\n  src,\n  alt\n}) => {\n  _s();\n  const {\n    connectors: {\n      connect,\n      drag\n    }\n  } = useNode();\n  return /*#__PURE__*/_jsxDEV(\"img\", {\n    ref: ref => connect(drag(ref)),\n    src: src,\n    alt: alt,\n    style: {\n      maxWidth: '100%',\n      height: 'auto'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 10\n  }, this);\n};\n_s(Image, \"q5HqOP5G4zkrOn8IE2Hl3DKG9t4=\", false, function () {\n  return [useNode];\n});\n_c = Image;\nvar _c;\n$RefreshReg$(_c, \"Image\");","map":{"version":3,"names":["React","useNode","jsxDEV","_jsxDEV","Image","src","alt","_s","connectors","connect","drag","ref","style","maxWidth","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/saira/Documents/School/src/components/editor/Image.js"],"sourcesContent":["import React from 'react';\nimport { useNode } from '@craftjs/core';\n\nexport const Image = ({ src, alt }) => {\n  const { connectors: { connect, drag } } = useNode();\n  return <img ref={ref => connect(drag(ref))} src={src} alt={alt} style={{ maxWidth: '100%', height: 'auto' }} />;\n};"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,OAAO,MAAMC,KAAK,GAAGA,CAAC;EAAEC,GAAG;EAAEC;AAAI,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM;IAAEC,UAAU,EAAE;MAAEC,OAAO;MAAEC;IAAK;EAAE,CAAC,GAAGT,OAAO,CAAC,CAAC;EACnD,oBAAOE,OAAA;IAAKQ,GAAG,EAAEA,GAAG,IAAIF,OAAO,CAACC,IAAI,CAACC,GAAG,CAAC,CAAE;IAACN,GAAG,EAAEA,GAAI;IAACC,GAAG,EAAEA,GAAI;IAACM,KAAK,EAAE;MAAEC,QAAQ,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAO;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACjH,CAAC;AAACX,EAAA,CAHWH,KAAK;EAAA,QAC0BH,OAAO;AAAA;AAAAkB,EAAA,GADtCf,KAAK;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}